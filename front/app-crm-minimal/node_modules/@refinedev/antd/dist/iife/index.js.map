{"version":3,"sources":["../../../devtools-shared/src/index.ts","../../../devtools-shared/src/event-types.ts","../../../devtools-shared/src/scopes.ts","../../../devtools-shared/src/context.tsx","../../../devtools-shared/src/send.ts","../../../devtools-shared/src/receive.ts","../../../devtools-internal/src/index.ts","../../../devtools-internal/src/get-trace.ts","../../../devtools-internal/src/clean-stack.ts","../../../devtools-internal/src/constants.ts","../../../devtools-internal/src/is-refine-stack.ts","../../../devtools-internal/src/get-package-name-from-filename.ts","../../../devtools-internal/src/get-resource-path.ts","../../../devtools-internal/src/get-xray.ts","../../../devtools-internal/src/use-query-subscription.tsx","../../../devtools-internal/src/listeners.ts","../../../devtools-internal/src/create-identifier.ts","../../../core/src/index.tsx","../../../core/src/components/pages/error/index.tsx","../../../core/src/hooks/auth/usePermissions/index.ts","../../../core/src/definitions/table/index.ts","../../../core/src/definitions/helpers/userFriendlySeconds/index.ts","../../../core/src/definitions/helpers/importCSVMapper/index.ts","../../../core/src/definitions/helpers/userFriendlyResourceName/index.ts","../../../core/src/definitions/helpers/handleUseParams/index.tsx","../../../core/src/definitions/helpers/pickNotDeprecated/index.ts","../../../core/src/definitions/helpers/keys/index.ts","../../../core/src/definitions/helpers/queryKeys/index.ts","../../../core/src/definitions/helpers/hasPermission/index.ts","../../../core/src/definitions/helpers/router/is-parameter.ts","../../../core/src/definitions/helpers/router/split-to-segments.ts","../../../core/src/definitions/helpers/router/is-segment-counts-same.ts","../../../core/src/definitions/helpers/router/remove-leading-trailing-slashes.ts","../../../core/src/definitions/helpers/router/check-by-segments.ts","../../../core/src/definitions/helpers/router/get-default-action-path.ts","../../../core/src/definitions/helpers/router/get-parent-resource.ts","../../../core/src/definitions/helpers/router/get-parent-prefix-for-resource.ts","../../../core/src/definitions/helpers/router/get-action-routes-from-resource.ts","../../../core/src/definitions/helpers/router/pick-matched-route.ts","../../../core/src/definitions/helpers/router/match-resource-from-route.ts","../../../core/src/definitions/helpers/routeGenerator/index.ts","../../../core/src/definitions/helpers/treeView/createTreeView/index.ts","../../../core/src/definitions/helpers/humanizeString/index.ts","../../../core/src/contexts/refine/index.tsx","../../../core/src/components/layoutWrapper/defaultLayout/index.tsx","../../../core/src/definitions/helpers/handleRefineOptions/index.ts","../../../core/src/definitions/helpers/redirectPage/index.ts","../../../core/src/definitions/helpers/sequentialPromises/index.ts","../../../core/src/definitions/helpers/pick-resource/index.ts","../../../core/src/definitions/helpers/pickDataProvider/index.ts","../../../core/src/definitions/helpers/handleMultiple/index.ts","../../../core/src/definitions/helpers/useInfinitePagination/index.ts","../../../core/src/definitions/helpers/legacy-resource-transform/index.ts","../../../core/src/definitions/helpers/router/pick-route-params.ts","../../../core/src/definitions/helpers/router/prepare-route-params.ts","../../../core/src/definitions/helpers/router/compose-route.ts","../../../core/src/contexts/auth/index.tsx","../../../core/src/definitions/helpers/useActiveAuthProvider/index.ts","../../../core/src/definitions/helpers/handlePaginationParams/index.ts","../../../core/src/definitions/helpers/useMediaQuery/index.ts","../../../core/src/definitions/helpers/safe-translate/index.ts","../../../core/src/definitions/helpers/generateDocumentTitle/index.ts","../../../core/src/hooks/refine/useMutationMode.ts","../../../core/src/hooks/refine/useWarnAboutChange/index.ts","../../../core/src/contexts/unsavedWarn/index.tsx","../../../core/src/hooks/refine/useSyncWithLocation.ts","../../../core/src/hooks/refine/useTitle.tsx","../../../core/src/hooks/refine/useRefineContext.ts","../../../core/src/definitions/helpers/useUserFriendlyName/index.ts","../../../core/src/definitions/helpers/flatten-object-keys/index.ts","../../../core/src/definitions/helpers/property-path-to-array/index.ts","../../../core/src/definitions/upload/file2Base64/index.ts","../../../core/src/hooks/useKeys/index.tsx","../../../core/src/hooks/auth/useGetIdentity/index.ts","../../../core/src/hooks/auth/useLogout/index.ts","../../../core/src/hooks/auth/useInvalidateAuthStore/index.ts","../../../core/src/hooks/auth/useLogin/index.ts","../../../core/src/hooks/auth/useRegister/index.ts","../../../core/src/hooks/auth/useForgotPassword/index.ts","../../../core/src/hooks/auth/useUpdatePassword/index.ts","../../../core/src/hooks/auth/useIsAuthenticated/index.ts","../../../core/src/hooks/auth/useOnError/index.ts","../../../core/src/hooks/auth/useIsExistAuthentication/index.ts","../../../core/src/hooks/data/useList.ts","../../../core/src/hooks/useLoadingOvertime/index.ts","../../../core/src/hooks/data/useOne.ts","../../../core/src/hooks/data/useMany.ts","../../../core/src/hooks/data/useUpdate.ts","../../../core/src/contexts/undoableQueue/undoableQueueContext.tsx","../../../core/src/hooks/data/useCreate.ts","../../../core/src/hooks/data/useDelete.ts","../../../core/src/hooks/data/useCreateMany.ts","../../../core/src/hooks/data/useUpdateMany.ts","../../../core/src/hooks/data/useDeleteMany.ts","../../../core/src/hooks/data/useApiUrl.ts","../../../core/src/hooks/data/useCustom.ts","../../../core/src/hooks/data/useCustomMutation.ts","../../../core/src/hooks/data/useDataProvider.tsx","../../../core/src/contexts/data/index.tsx","../../../core/src/hooks/data/useInfiniteList.ts","../../../core/src/contexts/live/index.tsx","../../../core/src/hooks/invalidate/index.tsx","../../../core/src/hooks/resource/useResource/index.ts","../../../core/src/contexts/resource/index.tsx","../../../core/src/hooks/deepMemo/index.tsx","../../../core/src/hooks/memoized/index.tsx","../../../core/src/contexts/router-picker/index.tsx","../../../core/src/hooks/router/use-parsed/index.tsx","../../../core/src/contexts/router/index.tsx","../../../core/src/hooks/router/use-parse/index.tsx","../../../core/src/hooks/resource/useResourceWithRoute/index.ts","../../../core/src/hooks/live/useResourceSubscription/index.ts","../../../core/src/hooks/live/useLiveMode/index.ts","../../../core/src/hooks/live/useSubscription/index.ts","../../../core/src/hooks/live/usePublish/index.ts","../../../core/src/hooks/notification/useCancelNotification/index.tsx","../../../core/src/hooks/notification/useNotification/index.ts","../../../core/src/contexts/notification/index.tsx","../../../core/src/hooks/notification/useHandleNotification/index.ts","../../../core/src/hooks/translate/useSetLocale.ts","../../../core/src/contexts/translation/index.tsx","../../../core/src/hooks/translate/useTranslate.ts","../../../core/src/hooks/translate/useGetLocale.ts","../../../core/src/hooks/export/index.ts","../../../core/src/hooks/form/useForm.ts","../../../core/src/hooks/redirection/index.ts","../../../core/src/hooks/router/use-go/index.tsx","../../../core/src/hooks/router/use-get-to-path/index.ts","../../../core/src/hooks/router/use-back/index.tsx","../../../core/src/hooks/navigation/index.ts","../../../core/src/hooks/show/useShow.ts","../../../core/src/hooks/import/index.tsx","../../../core/src/hooks/modal/useModal/index.tsx","../../../core/src/hooks/router/use-to-path/index.ts","../../../core/src/hooks/router/use-link/index.tsx","../../../core/src/hooks/legacy-router/useRouterContext.ts","../../../core/src/contexts/legacy-router/index.tsx","../../../core/src/hooks/accessControl/useCan/index.ts","../../../core/src/contexts/accessControl/index.tsx","../../../core/src/definitions/helpers/sanitize-resource/index.ts","../../../core/src/hooks/accessControl/useCanWithoutCache.ts","../../../core/src/hooks/useSelect/index.ts","../../../core/src/hooks/useTable/index.ts","../../../core/src/hooks/auditLog/useLog/index.ts","../../../core/src/contexts/auditLog/index.tsx","../../../core/src/hooks/auditLog/useLogList/index.ts","../../../core/src/hooks/breadcrumb/index.ts","../../../core/src/hooks/menu/useMenu.tsx","../../../core/src/definitions/helpers/menu/create-resource-key.ts","../../../core/src/definitions/helpers/menu/create-tree.ts","../../../core/src/hooks/useMeta/index.ts","../../../core/src/components/pages/login/index.tsx","../../../core/src/components/pages/auth/index.tsx","../../../core/src/components/pages/auth/components/login/index.tsx","../../../core/src/components/pages/auth/components/register/index.tsx","../../../core/src/components/pages/auth/components/forgotPassword/index.tsx","../../../core/src/components/pages/auth/components/updatePassword/index.tsx","../../../core/src/components/pages/ready/index.tsx","../../../core/src/components/pages/welcome/index.tsx","../../../core/src/components/containers/refine/index.tsx","../../../core/src/components/telemetry/index.tsx","../../../core/src/hooks/useTelemetryData/index.ts","../../../core/src/definitions/helpers/check-router-prop-misuse/index.ts","../../../core/src/hooks/router/use-router-misuse-warning/index.ts","../../../core/src/components/undoableQueue/index.tsx","../../../core/src/components/layoutWrapper/index.tsx","../../../core/src/components/authenticated/index.tsx","../../../core/src/components/routeChangeHandler/index.tsx","../../../core/src/components/canAccess/index.tsx","../../../core/src/components/gh-banner/index.tsx","../../../core/src/components/gh-banner/styles.ts","../../../core/src/components/autoSaveIndicator/index.tsx","../../../ui-types/src/index.tsx","../../../ui-types/src/ids.tsx","../../../ui-types/src/classNames.ts","../../src/hooks/form/useForm.ts","../../src/hooks/form/useModalForm/useModalForm.ts","../../src/hooks/modal/useModal/index.tsx","../../src/hooks/form/useDrawerForm/useDrawerForm.ts","../../src/hooks/form/useStepsForm/useStepsForm.ts","../../src/hooks/table/useTable/useTable.ts","../../src/definitions/table/index.ts","../../src/hooks/table/useTable/paginationLink.tsx","../../src/hooks/table/useEditableTable/useEditableTable.ts","../../src/hooks/fields/useSelect/index.ts","../../src/hooks/fields/useCheckboxGroup/index.ts","../../src/hooks/fields/useRadioGroup/index.ts","../../src/hooks/import/index.tsx","../../src/hooks/list/useSimpleList/useSimpleList.ts","../../src/hooks/useFileUploadState/index.ts","../../src/hooks/useSiderVisible/index.ts","../../src/contexts/themedLayoutContext/index.tsx","../../src/hooks/useThemedLayoutContext/index.ts","../../src/providers/notificationProvider/index.tsx","../../src/components/undoableNotification/index.tsx","../../src/components/layout/index.tsx","../../src/components/layout/sider/index.tsx","../../src/components/layout/sider/styles.ts","../../src/components/layout/header/index.tsx","../../src/components/layout/title/index.tsx","../../src/components/themedLayout/index.tsx","../../src/components/themedLayout/sider/index.tsx","../../src/components/themedLayout/sider/styles.ts","../../src/components/themedLayout/header/index.tsx","../../src/components/themedLayout/title/index.tsx","../../src/components/themedLayoutV2/index.tsx","../../src/components/themedLayoutV2/sider/index.tsx","../../src/components/themedLayoutV2/sider/styles.ts","../../src/components/themedLayoutV2/header/index.tsx","../../src/components/themedLayoutV2/title/index.tsx","../../src/components/buttons/create/index.tsx","../../src/components/buttons/edit/index.tsx","../../src/components/buttons/delete/index.tsx","../../src/components/buttons/refresh/index.tsx","../../src/components/buttons/show/index.tsx","../../src/components/buttons/list/index.tsx","../../src/components/buttons/export/index.tsx","../../src/components/buttons/save/index.tsx","../../src/components/buttons/clone/index.tsx","../../src/components/buttons/import/index.tsx","../../src/components/crud/list/index.tsx","../../src/components/crud/create/index.tsx","../../src/components/crud/edit/index.tsx","../../src/components/crud/show/index.tsx","../../src/components/fields/text/index.tsx","../../src/components/fields/tag/index.tsx","../../src/components/fields/email/index.tsx","../../src/components/fields/image/index.tsx","../../src/components/fields/boolean/index.tsx","../../src/components/fields/date/index.tsx","../../src/components/fields/file/index.tsx","../../src/components/fields/url/index.tsx","../../src/components/fields/number/index.tsx","../../src/components/fields/markdown/index.tsx","../../src/components/table/components/filterDropdown/index.tsx","../../src/components/pages/error/index.tsx","../../src/components/pages/login/index.tsx","../../src/components/pages/login/styles.ts","../../src/components/pages/ready/index.tsx","../../src/components/pages/welcome/index.tsx","../../src/components/pages/auth/index.tsx","../../src/components/pages/auth/components/login/index.tsx","../../src/components/pages/auth/components/styles.ts","../../src/components/pages/auth/components/register/index.tsx","../../src/components/pages/auth/components/forgotPassword/index.tsx","../../src/components/pages/auth/components/updatePassword/index.tsx","../../src/components/breadcrumb/index.tsx","../../src/components/pageHeader/index.tsx","../../src/components/autoSaveIndicator/index.tsx","../../src/definitions/upload/index.ts","../../src/definitions/themes/index.ts"],"sourcesContent":["export { DevtoolsEvent, DevtoolsEventPayloads } from \"./event-types\";\nexport { TraceType } from \"./trace\";\nexport { Feed, FeedSection } from \"./feed\";\nexport {\n    PackageType,\n    PackageLatestVersionType,\n    AvailablePackageType,\n} from \"./package\";\nexport { RefineHook, Scopes, hooksByScope, scopes } from \"./scopes\";\n\nexport { DevToolsContextProvider, DevToolsContext } from \"./context\";\n\nexport { send } from \"./send\";\nexport { receive } from \"./receive\";\n","import {\n    Mutation,\n    MutationKey,\n    MutationStatus,\n    QueryKey,\n    QueryState,\n    QueryStatus,\n} from \"@tanstack/react-query\";\nimport { TraceType } from \"./trace\";\n\nexport enum DevtoolsEvent {\n    RELOAD = \"devtools:reload\",\n    DEVTOOLS_INIT = \"devtools:init\",\n    DEVTOOLS_HANDSHAKE = \"devtools:handshake\",\n    DEVTOOLS_ALREADY_CONNECTED = \"devtools:already-connected\",\n    ACTIVITY = \"devtools:send-activity\",\n    DEVTOOLS_ACTIVITY_UPDATE = \"devtools:activity-update\",\n    DEVTOOLS_CONNECTED_APP = \"devtools:connected-app\",\n    DEVTOOLS_DISCONNECTED_APP = \"devtools:disconnected-app\",\n    DEVTOOLS_HIGHLIGHT_IN_MONITOR = \"devtools:highlight-in-monitor\",\n    DEVTOOLS_HIGHLIGHT_IN_MONITOR_ACTION = \"devtools:highlight-in-monitor-action\",\n    DEVTOOLS_LOGIN_SUCCESS = \"devtools:login-success\",\n    DEVTOOLS_RELOAD_AFTER_LOGIN = \"devtools:reload-after-login\",\n}\n\ntype Timestamps = {\n    createdAt: number;\n    updatedAt: number;\n};\n\ntype ActivityPayload =\n    | {\n          type: \"mutation\";\n          identifier: string;\n          key?: MutationKey;\n          status?: MutationStatus;\n          trace?: TraceType[];\n          state: Mutation<any, any, any, any>[\"state\"];\n          variables?: Mutation<any, any, any, any>[\"state\"][\"variables\"];\n          hookName: string;\n          resourcePath: string | null;\n          legacyKey: boolean;\n      }\n    | {\n          type: \"query\";\n          identifier: string;\n          key?: QueryKey;\n          status?: QueryStatus;\n          trace?: TraceType[];\n          state: QueryState<any, any>;\n          hookName: string;\n          resourcePath: string | null;\n          legacyKey: boolean;\n      };\n\nexport type DevtoolsEventPayloads = {\n    [DevtoolsEvent.RELOAD]: {};\n    [DevtoolsEvent.DEVTOOLS_INIT]: { url: string };\n    [DevtoolsEvent.DEVTOOLS_HANDSHAKE]: { url: string };\n    [DevtoolsEvent.DEVTOOLS_ALREADY_CONNECTED]: { url: string };\n    [DevtoolsEvent.ACTIVITY]: ActivityPayload;\n    [DevtoolsEvent.DEVTOOLS_ACTIVITY_UPDATE]: {\n        updatedActivities: (ActivityPayload & Timestamps)[];\n    };\n    [DevtoolsEvent.DEVTOOLS_CONNECTED_APP]: { url: string | null };\n    [DevtoolsEvent.DEVTOOLS_DISCONNECTED_APP]: {};\n    [DevtoolsEvent.DEVTOOLS_HIGHLIGHT_IN_MONITOR]: { name: string };\n    [DevtoolsEvent.DEVTOOLS_HIGHLIGHT_IN_MONITOR_ACTION]: { name: string };\n    [DevtoolsEvent.DEVTOOLS_LOGIN_SUCCESS]: {};\n    [DevtoolsEvent.DEVTOOLS_RELOAD_AFTER_LOGIN]: {};\n};\n","export type RefineHook =\n    | \"useCan\"\n    | \"useLog\"\n    | \"useLogList\"\n    | \"useCreate\"\n    | \"useCreateMany\"\n    | \"useCustom\"\n    | \"useCustomMutation\"\n    | \"useDelete\"\n    | \"useDeleteMany\"\n    | \"useInfiniteList\"\n    | \"useList\"\n    | \"useMany\"\n    | \"useOne\"\n    | \"useUpdate\"\n    | \"useUpdateMany\"\n    | \"useForgotPassword\"\n    | \"useGetIdentity\"\n    | \"useIsAuthenticated\"\n    | \"useLogin\"\n    | \"useLogout\"\n    | \"useOnError\"\n    | \"usePermissions\"\n    | \"useRegister\"\n    | \"useUpdatePassword\";\n\nexport type Scopes = \"data\" | \"audit-log\" | \"access-control\" | \"auth\";\n\nexport const scopes: Record<RefineHook, Scopes> = {\n    useCan: \"access-control\",\n    useLog: \"audit-log\",\n    useLogList: \"audit-log\",\n    useCreate: \"data\",\n    useCreateMany: \"data\",\n    useCustom: \"data\",\n    useCustomMutation: \"data\",\n    useDelete: \"data\",\n    useDeleteMany: \"data\",\n    useInfiniteList: \"data\",\n    useList: \"data\",\n    useMany: \"data\",\n    useOne: \"data\",\n    useUpdate: \"data\",\n    useUpdateMany: \"data\",\n    useForgotPassword: \"auth\",\n    useGetIdentity: \"auth\",\n    useIsAuthenticated: \"auth\",\n    useLogin: \"auth\",\n    useLogout: \"auth\",\n    useOnError: \"auth\",\n    usePermissions: \"auth\",\n    useRegister: \"auth\",\n    useUpdatePassword: \"auth\",\n};\n\nexport const hooksByScope = Object.entries(scopes).reduce(\n    (acc, [hook, scope]) => {\n        if (!acc[scope]) {\n            acc[scope] = [];\n        }\n\n        acc[scope].push(hook as RefineHook);\n\n        return acc;\n    },\n    {} as Record<Scopes, RefineHook[]>,\n);\n","import React from \"react\";\nimport { DevtoolsEvent } from \"./event-types\";\nimport { send } from \"./send\";\nimport { receive } from \"./receive\";\n\ntype DevToolsContextValue = {\n    __devtools: boolean;\n    port: number;\n    url: string;\n    secure: boolean;\n    ws: WebSocket | null;\n    devtoolsUrl?: string;\n};\n\nexport const DevToolsContext = React.createContext<DevToolsContextValue>({\n    __devtools: false,\n    port: 5002,\n    url: \"localhost\",\n    secure: false,\n    ws: null,\n});\n\ntype Props = React.PropsWithChildren<\n    Partial<Pick<DevToolsContextValue, \"port\" | \"__devtools\">>\n>;\n\nexport const DevToolsContextProvider: React.FC<Props> = ({\n    __devtools,\n    port,\n    children,\n}) => {\n    const [values, setValues] = React.useState<DevToolsContextValue>({\n        __devtools: __devtools ?? false,\n        port: port ?? 5002,\n        url: \"localhost\",\n        secure: false,\n        ws: null,\n    });\n\n    const [ws, setWs] = React.useState<WebSocket | null>(null);\n\n    React.useEffect(() => {\n        const wsInstance = new WebSocket(\n            `${values.secure ? \"wss\" : \"ws\"}://localhost:${values.port}`,\n        );\n\n        const unsubscribe = receive(\n            wsInstance,\n            DevtoolsEvent.DEVTOOLS_HANDSHAKE,\n            (data) => {\n                setValues((v) => ({\n                    ...v,\n                    devtoolsUrl: data.url,\n                }));\n                unsubscribe();\n            },\n        );\n\n        wsInstance.addEventListener(\"open\", () => {\n            if (!values.__devtools) {\n                send(wsInstance, DevtoolsEvent.DEVTOOLS_INIT, {\n                    url: window.location.origin,\n                });\n            }\n        });\n\n        setWs(wsInstance);\n\n        return () => {\n            unsubscribe();\n\n            wsInstance.close(1000, window.location.origin);\n        };\n    }, []);\n\n    const contextValues = React.useMemo<DevToolsContextValue>(\n        () => ({\n            ...values,\n            ws,\n        }),\n        [values, ws],\n    );\n\n    return (\n        <DevToolsContext.Provider value={contextValues}>\n            {children}\n        </DevToolsContext.Provider>\n    );\n};\n","import { DevtoolsEvent, DevtoolsEventPayloads } from \"./event-types\";\n\nexport async function send<T extends DevtoolsEvent>(\n    ws: WebSocket,\n    event: T,\n    payload: DevtoolsEventPayloads[T],\n) {\n    // check if the socket is open\n    // if not, wait for it to open\n    if (ws.readyState !== ws.OPEN) {\n        await new Promise<void>((resolve) => {\n            const listener = () => {\n                ws.send(JSON.stringify({ event, payload }));\n                resolve();\n                ws.removeEventListener(\"open\", listener);\n            };\n\n            ws.addEventListener(\"open\", listener);\n        });\n        return;\n    } else {\n        ws.send(JSON.stringify({ event, payload }));\n        return;\n    }\n}\n","// receive ws message by adding a listener to the ws object\n\nimport { DevtoolsEvent, DevtoolsEventPayloads } from \"./event-types\";\n\nexport function receive<T extends DevtoolsEvent>(\n    ws: WebSocket,\n    event: T,\n    callback: (payload: DevtoolsEventPayloads[T]) => void,\n) {\n    const listener = (e: MessageEvent) => {\n        const { event: receivedEvent, payload } = JSON.parse(e.data);\n        if (event === receivedEvent) {\n            callback(payload);\n        }\n    };\n\n    ws.addEventListener(\"message\", listener);\n\n    return () => {\n        ws.removeEventListener(\"message\", listener);\n    };\n}\n","export { getTrace } from \"./get-trace\";\nexport { getXRay } from \"./get-xray\";\nexport { useQuerySubscription } from \"./use-query-subscription\";\n","import ErrorStackParser from \"error-stack-parser\";\nimport { cleanStack } from \"./clean-stack\";\nimport { isRefineStack } from \"./is-refine-stack\";\nimport { getPackageNameFromFilename } from \"./get-package-name-from-filename\";\nimport { TraceType } from \"@refinedev/devtools-shared\";\n\nexport function getTrace() {\n    if (__DEV_CONDITION__ !== \"development\") {\n        return [];\n    } else {\n        try {\n            const error = new Error();\n            const stack = ErrorStackParser.parse(error);\n            const clean = cleanStack(stack);\n            const traces = clean\n                .map(\n                    (frame) =>\n                        ({\n                            file: frame.fileName,\n                            line: frame.lineNumber,\n                            column: frame.columnNumber,\n                            function: frame.functionName,\n                            isRefine: isRefineStack(frame.fileName),\n                            packageName: getPackageNameFromFilename(\n                                frame.fileName,\n                            ),\n                        } as TraceType),\n                )\n                .filter((trace) => trace.function);\n            return traces.slice(1);\n        } catch (error) {\n            return [];\n        }\n    }\n}\n","import type { StackFrame } from \"error-stack-parser\";\n\nconst unrelatedFunctionName = \"renderWithHooks\";\n\nexport const cleanStack = (stack: StackFrame[]) => {\n    const firstUnrelatedIndex = stack.findIndex(\n        (frame) => frame.functionName === unrelatedFunctionName,\n    );\n\n    if (firstUnrelatedIndex !== -1) {\n        return stack.slice(0, firstUnrelatedIndex);\n    }\n\n    return stack;\n};\n","export const REFINE_PACKAGE_FILEPATH_REGEXP =\n    __DEV_CONDITION__ !== \"development\"\n        ? /node_modules\\/refinedev\\/(?<name>.*?)\\//\n        : /\\/refine\\/packages\\/(?<name>.*?)\\//;\n","import { REFINE_PACKAGE_FILEPATH_REGEXP } from \"./constants\";\n\nexport const isRefineStack = (filename?: string) => {\n    if (!filename) return false;\n\n    const match = filename.match(REFINE_PACKAGE_FILEPATH_REGEXP);\n\n    return !!match;\n};\n","import { REFINE_PACKAGE_FILEPATH_REGEXP } from \"./constants\";\n\nexport const getPackageNameFromFilename = (filename?: string) => {\n    if (!filename) return;\n\n    const match = filename.match(REFINE_PACKAGE_FILEPATH_REGEXP);\n\n    const name = match?.groups?.name;\n\n    if (!name) return;\n\n    return `@refinedev/${name}`;\n};\n","import {\n    DevtoolsEvent,\n    DevtoolsEventPayloads,\n    RefineHook,\n    scopes,\n} from \"@refinedev/devtools-shared\";\n\nexport type Activity =\n    DevtoolsEventPayloads[DevtoolsEvent.DEVTOOLS_ACTIVITY_UPDATE][\"updatedActivities\"][number];\n\nexport const getResourcePath = (\n    hookName: RefineHook,\n    legacyKey: boolean,\n): string | null => {\n    if (scopes[hookName] === \"auth\") {\n        return null;\n    }\n    if (hookName === \"useCan\") {\n        if (legacyKey) {\n            return \"key[1].resource\";\n        } else {\n            return \"key[1]\";\n        }\n    }\n    if (scopes[hookName] === \"audit-log\") {\n        if (hookName === \"useLog\") {\n            return \"variables.resource\";\n        }\n        return \"key[1]\";\n    }\n    if (scopes[hookName] === \"data\") {\n        if (hookName === \"useCustom\" || hookName === \"useCustomMutation\") {\n            return null;\n        }\n        switch (hookName) {\n            case \"useList\":\n            case \"useInfiniteList\":\n            case \"useOne\":\n            case \"useMany\":\n                if (legacyKey) {\n                    return \"key[1]\";\n                } else {\n                    return \"key[2]\";\n                }\n            case \"useCreate\":\n            case \"useCreateMany\":\n            case \"useDelete\":\n            case \"useDeleteMany\":\n            case \"useUpdate\":\n            case \"useUpdateMany\":\n                return \"variables.resource\";\n        }\n    }\n    return null;\n};\n","import { RefineHook, TraceType } from \"@refinedev/devtools-shared\";\nimport { getTrace } from \"./get-trace\";\nimport { getResourcePath } from \"./get-resource-path\";\n\nexport type XRayResponse = {\n    hookName: string;\n    trace: TraceType[];\n    resourcePath: string | null;\n    legacyKey: boolean;\n};\n\nexport function getXRay(hookName: string, legacyKey: boolean): XRayResponse {\n    if (__DEV_CONDITION__ !== \"development\") {\n        return {\n            hookName: \"\",\n            trace: [],\n            resourcePath: null,\n            legacyKey: false,\n        };\n    } else {\n        const trace = getTrace().slice(1);\n\n        const resourcePath = getResourcePath(hookName as RefineHook, legacyKey);\n\n        return {\n            hookName,\n            trace,\n            resourcePath,\n            legacyKey,\n        };\n    }\n}\n","import { DevToolsContext } from \"@refinedev/devtools-shared\";\nimport { QueryClient } from \"@tanstack/react-query\";\nimport React, { useContext } from \"react\";\nimport { createQueryListener, createMutationListener } from \"./listeners\";\n\nexport const useQuerySubscription =\n    __DEV_CONDITION__ !== \"development\"\n        ? () => ({})\n        : (queryClient: QueryClient) => {\n              const { ws } = useContext(DevToolsContext);\n              const queryCacheSubscription = React.useRef<() => void>();\n              const mutationCacheSubscription = React.useRef<() => void>();\n\n              React.useEffect(() => {\n                  if (!ws) return () => 0;\n\n                  const queryCache = queryClient.getQueryCache();\n\n                  const queryListener = createQueryListener(ws);\n\n                  queryCache.getAll().forEach(queryListener);\n\n                  queryCacheSubscription.current = queryCache.subscribe(\n                      ({ query, type }) =>\n                          (type === \"added\" || type === \"updated\") &&\n                          queryListener(query),\n                  );\n\n                  return () => {\n                      queryCacheSubscription.current?.();\n                  };\n              }, [ws, queryClient]);\n\n              React.useEffect(() => {\n                  if (!ws) return () => 0;\n\n                  const mutationCache = queryClient.getMutationCache();\n\n                  const mutationListener = createMutationListener(ws);\n\n                  mutationCache.getAll().forEach(mutationListener);\n\n                  mutationCacheSubscription.current = mutationCache.subscribe(\n                      ({ mutation, type }) =>\n                          (type === \"added\" || type === \"updated\") &&\n                          mutationListener(mutation),\n                  );\n\n                  return () => {\n                      mutationCacheSubscription.current?.();\n                  };\n              }, [ws, queryClient]);\n\n              return {};\n          };\n","import { DevtoolsEvent, send } from \"@refinedev/devtools-shared\";\nimport { Mutation, Query } from \"@tanstack/react-query\";\n\nimport { createIdentifier } from \"./create-identifier\";\nimport { XRayResponse } from \"./get-xray\";\n\nexport const createMutationListener =\n    (ws: WebSocket) => (mutation?: Mutation) => {\n        if (!mutation?.meta?.trace) return;\n\n        const meta: XRayResponse = mutation?.meta as any;\n\n        new Promise<void>((resolve) => {\n            send(ws, DevtoolsEvent.ACTIVITY, {\n                type: \"mutation\",\n                identifier: createIdentifier(\n                    mutation?.options.mutationKey,\n                    mutation?.meta?.trace as any,\n                ),\n                key: mutation?.options.mutationKey as any,\n                status: mutation?.state.status,\n                state: mutation?.state,\n                variables: mutation?.state?.variables,\n                ...meta,\n            });\n            resolve();\n        });\n\n        // console.table({\n        //     type: \"mutation\",\n        //     key: mutation?.options.mutationKey,\n        //     id: mutation?.mutationId,\n        //     status: mutation?.state.status,\n        //     trace: mutation?.meta?.trace,\n        //     state: mutation?.state,\n        //     variables: mutation?.state?.variables,\n        // });\n    };\n\nexport const createQueryListener = (ws: WebSocket) => (query: Query) => {\n    if (!query?.meta?.trace) return;\n\n    const meta: XRayResponse = query?.meta as any;\n\n    new Promise<void>((resolve) => {\n        send(ws, DevtoolsEvent.ACTIVITY, {\n            type: \"query\",\n            identifier: createIdentifier(\n                query.queryKey,\n                query.meta?.trace as any,\n            ),\n            key: query.queryKey as any,\n            status: query.state.status,\n            state: query.state,\n            ...meta,\n        });\n        resolve();\n    });\n\n    // console.table({\n    //     type: \"query\",\n    //     key: query.queryKey,\n    //     status: query.state.status,\n    //     trace: query.meta?.trace,\n    //     state: query.state,\n    // });\n};\n","import { TraceType } from \"@refinedev/devtools-shared\";\nimport { MutationKey, QueryKey } from \"@tanstack/react-query\";\n\nexport const createIdentifier = (\n    key?: QueryKey | MutationKey,\n    trace?: TraceType[],\n) => {\n    const simpleTrace = trace?.map(\n        (t) =>\n            `${t.file}:${t.line}:${t.column}#${t.function}-${t.packageName}-${\n                t.isRefine ? 1 : 0\n            }`,\n    );\n    const str = JSON.stringify([...(key ?? []), ...(simpleTrace ?? [])]);\n\n    return str;\n};\n","export * from \"./components\";\nexport * from \"./hooks\";\n\nexport {\n    Action,\n    ActionWithPage,\n    AccessControlProvider,\n    AuditLogProvider,\n    LegacyAuthProvider,\n    AuthBindings,\n    BaseKey,\n    BaseRecord,\n    CanParams,\n    CanReturnType,\n    ConditionalFilter,\n    CreateManyResponse,\n    CreateResponse,\n    CrudFilter,\n    CrudFilters,\n    CrudOperators,\n    CrudSort,\n    CrudSorting,\n    CustomResponse,\n    DeleteManyResponse,\n    DeleteOneResponse,\n    FormAction,\n    GetListResponse,\n    GetManyResponse,\n    GetOneResponse,\n    HttpError,\n    LayoutProps,\n    LiveEvent,\n    LiveModeProps,\n    LogicalFilter,\n    LogParams,\n    MapDataFn,\n    MetaQuery,\n    MetaDataQuery,\n    MutationMode,\n    NotificationProvider,\n    OpenNotificationParams,\n    Option,\n    BaseOption,\n    Pagination,\n    PromptProps,\n    RedirectionTypes,\n    RedirectAction,\n    ResourceErrorRouterParams,\n    ResourceProps,\n    ResourceRouterParams,\n    RouteAction,\n    SortOrder,\n    SuccessErrorNotification,\n    TitleProps,\n    TranslationProvider,\n    UpdateManyResponse,\n    UpdateResponse,\n    I18nProvider,\n    IAccessControlContext,\n    ILegacyAuthContext,\n    IDataContextProvider as DataProvider,\n    ILiveContext as LiveProvider,\n    ILog,\n    ILogData,\n    ILoginForm,\n    INotificationContext,\n    IResourceComponents,\n    IResourceComponentsProps,\n    IResourceContext as ResourceProvider,\n    ITranslationContext,\n    IResourceItem,\n    IRouterProvider,\n    ITreeMenu,\n    IQueryKeys,\n    AccessControlBindings,\n    DataBindings,\n    i18nBindings,\n    LiveBindings,\n    NotificationsBindings,\n    ResourceBindings,\n    RouterBindings,\n    ParseResponse,\n    ParsedParams,\n    GoConfig,\n    BackFunction,\n    GoFunction,\n    ParseFunction,\n    Prettify,\n    FormWithSyncWithLocationParams,\n    AutoSaveIndicatorProps,\n    AutoSaveProps,\n    GetListParams,\n    GetManyParams,\n    GetOneParams,\n    CreateParams,\n    CreateManyParams,\n    UpdateParams,\n    UpdateManyParams,\n    DeleteOneParams,\n    DeleteManyParams,\n    CustomParams,\n} from \"./interfaces\";\n\n// all auth types\nexport * from \"./interfaces/auth\";\n\nexport {\n    getDefaultFilter,\n    getDefaultSortOrder,\n    parseTableParams,\n    parseTableParamsFromQuery,\n    setInitialFilters,\n    setInitialSorters,\n    stringifyTableParams,\n    unionFilters,\n    unionSorters,\n} from \"./definitions/table\";\nexport {\n    createTreeView,\n    handleUseParams,\n    importCSVMapper,\n    routeGenerator,\n    userFriendlyResourceName,\n    getNextPageParam,\n    getPreviousPageParam,\n    pickNotDeprecated,\n    legacyResourceTransform,\n    matchResourceFromRoute,\n    useActiveAuthProvider,\n    useUserFriendlyName,\n    queryKeys,\n    pickDataProvider,\n    keys,\n    KeyBuilder,\n    flattenObjectKeys,\n    propertyPathToArray,\n} from \"./definitions/helpers\";\nexport { file2Base64 } from \"./definitions/upload\";\nexport { generateDefaultDocumentTitle } from \"./definitions\";\n\nexport { ResourceContext } from \"./contexts/resource/index\";\nexport { TranslationContext } from \"./contexts/translation/index\";\nexport { AccessControlContext } from \"./contexts/accessControl/index\";\n","import React, { useEffect, useState } from \"react\";\n\nimport {\n    useNavigation,\n    useTranslate,\n    useResource,\n    useGo,\n    useRouterType,\n} from \"@hooks\";\n\n/**\n * When the app is navigated to a non-existent route, refine shows a default error page.\n * A custom error component can be used for this error page.\n *\n * @see {@link https://refine.dev/docs/packages/documentation/routers/} for more details.\n */\nexport const ErrorComponent: React.FC = () => {\n    const [errorMessage, setErrorMessage] = useState<string>();\n    const translate = useTranslate();\n    const { push } = useNavigation();\n    const go = useGo();\n    const routerType = useRouterType();\n\n    const { resource, action } = useResource();\n\n    useEffect(() => {\n        if (resource && action) {\n            setErrorMessage(\n                translate(\n                    \"pages.error.info\",\n                    {\n                        action: action,\n                        resource: resource.name,\n                    },\n                    `You may have forgotten to add the \"${action}\" component to \"${resource.name}\" resource.`,\n                ),\n            );\n        }\n    }, [resource, action]);\n\n    return (\n        <>\n            <h1>\n                {translate(\n                    \"pages.error.404\",\n                    undefined,\n                    \"Sorry, the page you visited does not exist.\",\n                )}\n            </h1>\n            {errorMessage && <p>{errorMessage}</p>}\n            <button\n                onClick={() => {\n                    if (routerType === \"legacy\") {\n                        push(\"/\");\n                    } else {\n                        go({ to: \"/\" });\n                    }\n                }}\n            >\n                {translate(\"pages.error.backHome\", undefined, \"Back Home\")}\n            </button>\n        </>\n    );\n};\n","import {\n    useQuery,\n    UseQueryResult,\n    UseQueryOptions,\n} from \"@tanstack/react-query\";\nimport { getXRay } from \"@refinedev/devtools-internal\";\n\nimport { useKeys } from \"@hooks/useKeys\";\n\nimport { useAuthBindingsContext, useLegacyAuthContext } from \"@contexts/auth\";\nimport { PermissionResponse } from \"../../../interfaces\";\n\nexport type UsePermissionsLegacyProps<TData = any> = {\n    v3LegacyAuthProviderCompatible: true;\n    options?: UseQueryOptions<TData>;\n};\n\nexport type UsePermissionsProps<TData = PermissionResponse> = {\n    v3LegacyAuthProviderCompatible?: false;\n    options?: UseQueryOptions<TData>;\n};\n\nexport type UsePermissionsCombinedProps<TData = any> = {\n    v3LegacyAuthProviderCompatible: boolean;\n    options?: UseQueryOptions<TData> | UseQueryOptions<PermissionResponse>;\n};\n\nexport type UsePermissionsLegacyReturnType<TData = any> = UseQueryResult<\n    TData,\n    unknown\n>;\n\nexport type UsePermissionsReturnType<TData = PermissionResponse> =\n    UseQueryResult<TData, unknown>;\n\nexport type UsePermissionsCombinedReturnType<TData = any> =\n    | UseQueryResult<TData, unknown>\n    | UseQueryResult<PermissionResponse, unknown>;\n\nexport function usePermissions<TData = any>(\n    props: UsePermissionsLegacyProps<TData>,\n): UsePermissionsLegacyReturnType<TData>;\n\nexport function usePermissions<TData = PermissionResponse>(\n    props?: UsePermissionsProps<TData>,\n): UsePermissionsReturnType<TData>;\n\nexport function usePermissions<TData = any>(\n    props?: UsePermissionsCombinedProps<TData>,\n): UsePermissionsCombinedReturnType<TData>;\n\n/**\n * `usePermissions` calls the `getPermissions` method from the {@link https://refine.dev/docs/core/providers/auth-provider `authProvider`} under the hood.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/auth/usePermissions} for more details.\n *\n * @typeParam TData - Result data of the query\n *\n */\nexport function usePermissions<TData = any>({\n    v3LegacyAuthProviderCompatible = false,\n    options,\n}: UsePermissionsProps<TData> | UsePermissionsLegacyProps<TData> = {}):\n    | UsePermissionsReturnType\n    | UsePermissionsLegacyReturnType<TData> {\n    const { getPermissions: legacyGetPermission } = useLegacyAuthContext();\n    const { getPermissions } = useAuthBindingsContext();\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const queryResponse = useQuery<TData>(\n        keys().auth().action(\"permissions\").get(preferLegacyKeys),\n        // Enabled check for `getPermissions` is enough to be sure that it's defined in the query function but TS is not smart enough to know that.\n        (getPermissions as (params?: unknown) => Promise<TData>) ??\n            (() => Promise.resolve(undefined)),\n        {\n            enabled: !v3LegacyAuthProviderCompatible && !!getPermissions,\n            ...(v3LegacyAuthProviderCompatible ? {} : options),\n            meta: {\n                ...(v3LegacyAuthProviderCompatible ? {} : options?.meta),\n                ...getXRay(\"usePermissions\", preferLegacyKeys),\n            },\n        },\n    );\n\n    const legacyQueryResponse = useQuery<TData>(\n        [\n            ...keys().auth().action(\"permissions\").get(preferLegacyKeys),\n            \"v3LegacyAuthProviderCompatible\",\n        ],\n        // Enabled check for `getPermissions` is enough to be sure that it's defined in the query function but TS is not smart enough to know that.\n        legacyGetPermission ?? (() => Promise.resolve(undefined)),\n        {\n            enabled: v3LegacyAuthProviderCompatible && !!legacyGetPermission,\n            ...(v3LegacyAuthProviderCompatible ? options : {}),\n            meta: {\n                ...(v3LegacyAuthProviderCompatible ? options?.meta : {}),\n                ...getXRay(\"usePermissions\", preferLegacyKeys),\n            },\n        },\n    );\n\n    return v3LegacyAuthProviderCompatible ? legacyQueryResponse : queryResponse;\n}\n","import qs, { IStringifyOptions } from \"qs\";\nimport unionWith from \"lodash/unionWith\";\nimport differenceWith from \"lodash/differenceWith\";\nimport warnOnce from \"warn-once\";\n\nimport {\n    CrudFilters,\n    CrudSorting,\n    CrudFilter,\n    CrudSort,\n    CrudOperators,\n    SortOrder,\n} from \"../../interfaces\";\nimport { pickNotDeprecated } from \"@definitions/helpers\";\n\nexport const parseTableParams = (url: string) => {\n    const { current, pageSize, sorter, sorters, filters } = qs.parse(\n        url.substring(1), // remove first ? character\n    );\n\n    return {\n        parsedCurrent: current && Number(current),\n        parsedPageSize: pageSize && Number(pageSize),\n        parsedSorter: (pickNotDeprecated(sorters, sorter) as CrudSorting) ?? [],\n        parsedFilters: (filters as CrudFilters) ?? [],\n    };\n};\n\nexport const parseTableParamsFromQuery = (params: any) => {\n    const url = qs.stringify(params);\n    return parseTableParams(`/${url}`);\n};\n\n/**\n * @internal This function is used to stringify table params from the useTable hook.\n */\nexport const stringifyTableParams = (params: {\n    pagination?: { current?: number; pageSize?: number };\n    sorters: CrudSorting;\n    filters: CrudFilters;\n    [key: string]: any;\n}): string => {\n    const options: IStringifyOptions = {\n        skipNulls: true,\n        arrayFormat: \"indices\",\n        encode: false,\n    };\n    const { pagination, sorter, sorters, filters, ...rest } = params;\n\n    const queryString = qs.stringify(\n        {\n            ...rest,\n            ...(pagination ? pagination : {}),\n            sorters: pickNotDeprecated(sorters, sorter),\n            filters,\n        },\n        options,\n    );\n\n    return queryString;\n};\n\nexport const compareFilters = (\n    left: CrudFilter,\n    right: CrudFilter,\n): boolean => {\n    if (\n        left.operator !== \"and\" &&\n        left.operator !== \"or\" &&\n        right.operator !== \"and\" &&\n        right.operator !== \"or\"\n    ) {\n        return (\n            (\"field\" in left ? left.field : undefined) ==\n                (\"field\" in right ? right.field : undefined) &&\n            left.operator == right.operator\n        );\n    }\n\n    return (\n        (\"key\" in left ? left.key : undefined) ==\n            (\"key\" in right ? right.key : undefined) &&\n        left.operator == right.operator\n    );\n};\n\nexport const compareSorters = (left: CrudSort, right: CrudSort): boolean =>\n    left.field == right.field;\n// Keep only one CrudFilter per type according to compareFilters\n// Items in the array that is passed first to unionWith have higher priority\n// CrudFilter items with undefined values are necessary to signify no filter\n// After union, don't keep CrudFilter items with undefined value in the result\n// Items in the arrays with higher priority are put at the end.\nexport const unionFilters = (\n    permanentFilter: CrudFilters,\n    newFilters: CrudFilters,\n    prevFilters: CrudFilters = [],\n): CrudFilters => {\n    const isKeyRequired = newFilters.filter(\n        (f) => (f.operator === \"or\" || f.operator === \"and\") && !f.key,\n    );\n\n    if (isKeyRequired.length > 1) {\n        warnOnce(\n            true,\n            `[conditionalFilters]: You have created multiple Conditional Filters at the top level, this requires the key parameter. \\nFor more information, see https://refine.dev/docs/advanced-tutorials/data-provider/handling-filters/#top-level-multiple-conditional-filters-usage`,\n        );\n    }\n\n    return unionWith(\n        permanentFilter,\n        newFilters,\n        prevFilters,\n        compareFilters,\n    ).filter(\n        (crudFilter) =>\n            crudFilter.value !== undefined &&\n            crudFilter.value !== null &&\n            (crudFilter.operator !== \"or\" ||\n                (crudFilter.operator === \"or\" &&\n                    crudFilter.value.length !== 0)) &&\n            (crudFilter.operator !== \"and\" ||\n                (crudFilter.operator === \"and\" &&\n                    crudFilter.value.length !== 0)),\n    );\n};\n\nexport const unionSorters = (\n    permanentSorter: CrudSorting,\n    newSorters: CrudSorting,\n): CrudSorting =>\n    unionWith(permanentSorter, newSorters, compareSorters).filter(\n        (crudSorter) =>\n            crudSorter.order !== undefined && crudSorter.order !== null,\n    );\n// Prioritize filters in the permanentFilter and put it at the end of result array\nexport const setInitialFilters = (\n    permanentFilter: CrudFilters,\n    defaultFilter: CrudFilters,\n): CrudFilters => [\n    ...differenceWith(defaultFilter, permanentFilter, compareFilters),\n    ...permanentFilter,\n];\n\nexport const setInitialSorters = (\n    permanentSorter: CrudSorting,\n    defaultSorter: CrudSorting,\n): CrudSorting => [\n    ...differenceWith(defaultSorter, permanentSorter, compareSorters),\n    ...permanentSorter,\n];\n\nexport const getDefaultSortOrder = (\n    columnName: string,\n    sorter?: CrudSorting,\n): SortOrder | undefined => {\n    if (!sorter) {\n        return undefined;\n    }\n\n    const sortItem = sorter.find((item) => item.field === columnName);\n\n    if (sortItem) {\n        return sortItem.order as SortOrder;\n    }\n\n    return undefined;\n};\n\nexport const getDefaultFilter = (\n    columnName: string,\n    filters?: CrudFilters,\n    operatorType: CrudOperators = \"eq\",\n): CrudFilter[\"value\"] | undefined => {\n    const filter = filters?.find((filter) => {\n        if (\n            filter.operator !== \"or\" &&\n            filter.operator !== \"and\" &&\n            \"field\" in filter\n        ) {\n            const { operator, field } = filter;\n            return field === columnName && operator === operatorType;\n        }\n        return undefined;\n    });\n\n    if (filter) {\n        return filter.value || [];\n    }\n\n    return undefined;\n};\n","export const userFriendlySecond = (miliseconds: number): number => {\n    return miliseconds / 1000; //convert to seconds\n};\n","import zip from \"lodash/zip\";\nimport fromPairs from \"lodash/fromPairs\";\nimport { MapDataFn } from \"../../../interfaces\";\n\nexport const importCSVMapper = <TItem = any, TVariables = any>(\n    data: any[][],\n    mapData: MapDataFn<TItem, TVariables> = (item) => item as any,\n): TVariables[] => {\n    const [headers, ...body] = data;\n    return body\n        .map((entry) => fromPairs(zip(headers, entry)))\n        .map((item: any, index, array: any) =>\n            mapData.call(undefined, item, index, array),\n        );\n};\n","import pluralize from \"pluralize\";\nimport { humanizeString } from \"@definitions\";\n\n/**\n * A method that the internal uses\n * @internal\n * @deprecated use `useUserFriendlyName` instead.\n */\nexport const userFriendlyResourceName = (\n    resource = \"\",\n    type: \"singular\" | \"plural\",\n): string => {\n    const humanizeResource = humanizeString(resource);\n    if (type === \"singular\") {\n        return pluralize.singular(humanizeResource);\n    }\n    return pluralize.plural(humanizeResource);\n};\n","export const handleUseParams = (params: any = {}): any => {\n    if (params?.id) {\n        return {\n            ...params,\n            id: decodeURIComponent(params.id),\n        };\n    }\n    return params;\n};\n","/*\n * Returns first value that is not undefined.\n * @internal This is an internal helper function. Please do not use externally.\n */\nexport const pickNotDeprecated = <T extends unknown[]>(\n    ...args: T\n): T[never] => {\n    return args.find((arg) => typeof arg !== \"undefined\");\n};\n","import { BaseKey } from \"src/interfaces\";\n\ntype ParametrizedDataActions = \"list\" | \"infinite\";\ntype IdRequiredDataActions = \"one\";\ntype IdsRequiredDataActions = \"many\";\ntype DataMutationActions =\n    | \"custom\"\n    | \"customMutation\"\n    | \"create\"\n    | \"createMany\"\n    | \"update\"\n    | \"updateMany\"\n    | \"delete\"\n    | \"deleteMany\";\n\ntype AuthActionType =\n    | \"login\"\n    | \"logout\"\n    | \"identity\"\n    | \"register\"\n    | \"forgotPassword\"\n    | \"check\"\n    | \"onError\"\n    | \"permissions\"\n    | \"updatePassword\";\n\ntype AuditActionType = \"list\" | \"log\" | \"rename\";\n\ntype IdType = BaseKey;\ntype IdsType = IdType[];\n\ntype ParamsType = any;\n\ntype KeySegment = string | IdType | IdsType | ParamsType;\n\nexport function arrayFindIndex<T>(array: T[], slice: T[]): number {\n    return array.findIndex(\n        (item, index) =>\n            index <= array.length - slice.length &&\n            slice.every(\n                (sliceItem, sliceIndex) =>\n                    array[index + sliceIndex] === sliceItem,\n            ),\n    );\n}\n\nexport function arrayReplace<T>(\n    array: T[],\n    partToBeReplaced: T[],\n    newPart: T[],\n): T[] {\n    const newArray: T[] = [...array];\n    const startIndex = arrayFindIndex(array, partToBeReplaced);\n\n    if (startIndex !== -1) {\n        newArray.splice(startIndex, partToBeReplaced.length, ...newPart);\n    }\n\n    return newArray;\n}\n\nexport function stripUndefined(segments: KeySegment[]) {\n    return segments.filter((segment) => segment !== undefined);\n}\n\nfunction convertToLegacy(segments: KeySegment[]) {\n    // for `list`, `many` and `one`\n    if (segments[0] === \"data\") {\n        // [data, dpName, resource, action, ...];\n        const newSegments = segments.slice(1);\n\n        if (newSegments[2] === \"many\") {\n            newSegments[2] = \"getMany\";\n        } else if (newSegments[2] === \"infinite\") {\n            newSegments[2] = \"list\";\n        } else if (newSegments[2] === \"one\") {\n            newSegments[2] = \"detail\";\n        } else if (newSegments[1] === \"custom\") {\n            const newParams = {\n                ...newSegments[2],\n            };\n            delete newParams.method;\n            delete newParams.url;\n\n            return [\n                newSegments[0],\n                newSegments[1],\n                newSegments[2].method,\n                newSegments[2].url,\n                newParams,\n            ];\n        }\n\n        return newSegments;\n    }\n    // for `audit` -> `logList`\n    if (segments[0] === \"audit\") {\n        // [audit, resource, action, params] (for log and list)\n        // or\n        // [audit, action, params] (for rename)\n        if (segments[2] === \"list\") {\n            return [\"logList\", segments[1], segments[3]];\n        }\n    }\n    // for `access` -> `useCan`\n    if (segments[0] === \"access\") {\n        // [access, resource, action, params]\n        if (segments.length === 4) {\n            return [\n                \"useCan\",\n                {\n                    resource: segments[1],\n                    action: segments[2],\n                    ...segments[3], // params: { params, enabled }\n                },\n            ];\n        }\n    }\n    // for `auth`\n    if (segments[0] === \"auth\") {\n        if (arrayFindIndex(segments, [\"auth\", \"login\"]) !== -1) {\n            return [\"useLogin\"];\n        }\n        if (arrayFindIndex(segments, [\"auth\", \"logout\"]) !== -1) {\n            return [\"useLogout\"];\n        }\n        if (arrayFindIndex(segments, [\"auth\", \"identity\"]) !== -1) {\n            return [\"getUserIdentity\"];\n        }\n        if (arrayFindIndex(segments, [\"auth\", \"register\"]) !== -1) {\n            return [\"useRegister\"];\n        }\n        if (arrayFindIndex(segments, [\"auth\", \"forgotPassword\"]) !== -1) {\n            return [\"useForgotPassword\"];\n        }\n        if (arrayFindIndex(segments, [\"auth\", \"check\"]) !== -1) {\n            return [\"useAuthenticated\", segments[2]]; // [auth, check, params]\n        }\n        if (arrayFindIndex(segments, [\"auth\", \"onError\"]) !== -1) {\n            return [\"useCheckError\"];\n        }\n        if (arrayFindIndex(segments, [\"auth\", \"permissions\"]) !== -1) {\n            return [\"usePermissions\"];\n        }\n        if (arrayFindIndex(segments, [\"auth\", \"updatePassword\"]) !== -1) {\n            return [\"useUpdatePassword\"];\n        }\n    }\n    return segments;\n}\n\nclass BaseKeyBuilder {\n    segments: KeySegment[] = [];\n\n    constructor(segments: KeySegment[] = []) {\n        this.segments = segments;\n    }\n\n    key() {\n        return this.segments;\n    }\n\n    legacy() {\n        return convertToLegacy(this.segments);\n    }\n\n    get(legacy?: boolean) {\n        return legacy ? this.legacy() : this.segments;\n    }\n}\n\nclass ParamsKeyBuilder extends BaseKeyBuilder {\n    constructor(segments: KeySegment[]) {\n        super(segments);\n    }\n\n    params(paramsValue?: ParamsType) {\n        return new BaseKeyBuilder([...this.segments, paramsValue]);\n    }\n}\n\nclass DataIdRequiringKeyBuilder extends BaseKeyBuilder {\n    constructor(segments: KeySegment[]) {\n        super(segments);\n    }\n\n    id(idValue?: IdType) {\n        return new ParamsKeyBuilder([\n            ...this.segments,\n            idValue ? String(idValue) : undefined,\n        ]);\n    }\n}\n\nclass DataIdsRequiringKeyBuilder extends BaseKeyBuilder {\n    constructor(segments: KeySegment[]) {\n        super(segments);\n    }\n\n    ids(...idsValue: IdsType) {\n        return new ParamsKeyBuilder([\n            ...this.segments,\n            ...(idsValue.length ? [idsValue.map((el) => String(el))] : []),\n        ]);\n    }\n}\n\nclass DataResourceKeyBuilder extends BaseKeyBuilder {\n    constructor(segments: KeySegment[]) {\n        super(segments);\n    }\n\n    action(actionType: ParametrizedDataActions): ParamsKeyBuilder;\n    action(actionType: IdRequiredDataActions): DataIdRequiringKeyBuilder;\n    action(actionType: IdsRequiredDataActions): DataIdsRequiringKeyBuilder;\n    action(\n        actionType:\n            | ParametrizedDataActions\n            | IdRequiredDataActions\n            | IdsRequiredDataActions,\n    ):\n        | ParamsKeyBuilder\n        | DataIdRequiringKeyBuilder\n        | DataIdsRequiringKeyBuilder {\n        if (actionType === \"one\") {\n            return new DataIdRequiringKeyBuilder([\n                ...this.segments,\n                actionType,\n            ]);\n        } else if (actionType === \"many\") {\n            return new DataIdsRequiringKeyBuilder([\n                ...this.segments,\n                actionType,\n            ]);\n        } else if ([\"list\", \"infinite\"].includes(actionType)) {\n            return new ParamsKeyBuilder([...this.segments, actionType]);\n        } else {\n            throw new Error(\"Invalid action type\");\n        }\n    }\n}\n\nclass DataKeyBuilder extends BaseKeyBuilder {\n    constructor(segments: KeySegment[]) {\n        super(segments);\n    }\n\n    resource(resourceName?: string) {\n        return new DataResourceKeyBuilder([...this.segments, resourceName]);\n    }\n\n    mutation(mutationName: DataMutationActions) {\n        return new ParamsKeyBuilder([\n            ...(mutationName === \"custom\" ? this.segments : [this.segments[0]]),\n            mutationName,\n        ]);\n    }\n}\n\nclass AuthKeyBuilder extends BaseKeyBuilder {\n    constructor(segments: KeySegment[]) {\n        super(segments);\n    }\n\n    action(actionType: AuthActionType) {\n        return new ParamsKeyBuilder([...this.segments, actionType]);\n    }\n}\n\nclass AccessResourceKeyBuilder extends BaseKeyBuilder {\n    constructor(segments: KeySegment[]) {\n        super(segments);\n    }\n\n    action(resourceName: string) {\n        return new ParamsKeyBuilder([...this.segments, resourceName]);\n    }\n}\n\nclass AccessKeyBuilder extends BaseKeyBuilder {\n    constructor(segments: KeySegment[]) {\n        super(segments);\n    }\n\n    resource(resourceName?: string) {\n        return new AccessResourceKeyBuilder([...this.segments, resourceName]);\n    }\n}\n\nclass AuditActionKeyBuilder extends BaseKeyBuilder {\n    constructor(segments: KeySegment[]) {\n        super(segments);\n    }\n\n    action(actionType: Extract<AuditActionType, \"list\">) {\n        return new ParamsKeyBuilder([...this.segments, actionType]);\n    }\n}\n\nclass AuditKeyBuilder extends BaseKeyBuilder {\n    constructor(segments: KeySegment[]) {\n        super(segments);\n    }\n\n    resource(resourceName?: string) {\n        return new AuditActionKeyBuilder([...this.segments, resourceName]);\n    }\n\n    action(actionType: Extract<AuditActionType, \"rename\" | \"log\">) {\n        return new ParamsKeyBuilder([...this.segments, actionType]);\n    }\n}\n\nexport class KeyBuilder extends BaseKeyBuilder {\n    constructor(segments: KeySegment[]) {\n        super(segments);\n    }\n\n    data(name?: string) {\n        return new DataKeyBuilder([\"data\", name || \"default\"]);\n    }\n\n    auth() {\n        return new AuthKeyBuilder([\"auth\"]);\n    }\n\n    access() {\n        return new AccessKeyBuilder([\"access\"]);\n    }\n\n    audit() {\n        return new AuditKeyBuilder([\"audit\"]);\n    }\n}\n\nexport const keys = () => new KeyBuilder([]);\n","import { IQueryKeys } from \"src/interfaces\";\nimport { QueryKey } from \"@tanstack/react-query\";\n\nimport { MetaQuery } from \"src/interfaces\";\nimport { pickNotDeprecated } from \"../pickNotDeprecated\";\nimport { keys as newKeys } from \"../keys\";\n\n/**\n * @deprecated `queryKeys` is deprecated. Please use `keys` instead.\n */\nexport const queryKeys = (\n    resource?: string,\n    dataProviderName?: string,\n    meta?: MetaQuery,\n    /**\n     * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n     */\n    metaData?: MetaQuery | undefined,\n): IQueryKeys => {\n    const providerName = dataProviderName || \"default\";\n    const keys: IQueryKeys = {\n        all: [providerName],\n        resourceAll: [providerName, resource || \"\"],\n        list: (config) => [\n            ...keys.resourceAll,\n            \"list\",\n            {\n                ...config,\n                ...(pickNotDeprecated(meta, metaData) || {}),\n            } as QueryKey,\n        ],\n        many: (ids) =>\n            [\n                ...keys.resourceAll,\n                \"getMany\",\n                (ids && ids.map(String)) as QueryKey,\n                { ...(pickNotDeprecated(meta, metaData) || {}) } as QueryKey,\n            ].filter((item) => item !== undefined),\n        detail: (id) => [\n            ...keys.resourceAll,\n            \"detail\",\n            id?.toString(),\n            { ...(pickNotDeprecated(meta, metaData) || {}) } as QueryKey,\n        ],\n        logList: (meta) =>\n            [\"logList\", resource, meta as any, metaData as QueryKey].filter(\n                (item) => item !== undefined,\n            ),\n    };\n    return keys;\n};\n\nexport const queryKeysReplacement = (preferLegacyKeys?: boolean) => {\n    return (\n        resource?: string,\n        dataProviderName?: string,\n        meta?: MetaQuery,\n        /**\n         * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n         */\n        metaData?: MetaQuery | undefined,\n    ): IQueryKeys => {\n        const providerName = dataProviderName || \"default\";\n\n        const keys: IQueryKeys = {\n            all: newKeys().data(providerName).get(preferLegacyKeys),\n            resourceAll: newKeys()\n                .data(dataProviderName)\n                .resource(resource ?? \"\")\n                .get(preferLegacyKeys),\n            list: (config) =>\n                newKeys()\n                    .data(dataProviderName)\n                    .resource(resource ?? \"\")\n                    .action(\"list\")\n                    .params({\n                        ...config,\n                        ...(pickNotDeprecated(meta, metaData) || {}),\n                    })\n                    .get(preferLegacyKeys),\n            many: (ids) =>\n                newKeys()\n                    .data(dataProviderName)\n                    .resource(resource ?? \"\")\n                    .action(\"many\")\n                    .ids(...(ids ?? []))\n                    .params({\n                        ...(pickNotDeprecated(meta, metaData) || {}),\n                    })\n                    .get(preferLegacyKeys),\n            detail: (id) =>\n                newKeys()\n                    .data(dataProviderName)\n                    .resource(resource ?? \"\")\n                    .action(\"one\")\n                    .id(id ?? \"\")\n                    .params({\n                        ...(pickNotDeprecated(meta, metaData) || {}),\n                    })\n                    .get(preferLegacyKeys),\n            logList: (meta) =>\n                [\n                    ...newKeys()\n                        .audit()\n                        .resource(resource)\n                        .action(\"list\")\n                        .params(meta)\n                        .get(preferLegacyKeys),\n                    metaData as QueryKey,\n                ].filter((item) => item !== undefined),\n        };\n\n        return keys;\n    };\n};\n","export const hasPermission = (\n    permissions: string[] | undefined,\n    action: string | undefined,\n): boolean => {\n    if (!permissions || !action) {\n        return false;\n    }\n    return !!permissions.find((i) => i === action);\n};\n","/**\n * Check if a segment is a parameter. (e.g. :id)\n */\nexport const isParameter = (segment: string) => {\n    return segment.startsWith(\":\");\n};\n","/**\n * Split a path to segments.\n */\nexport const splitToSegments = (path: string) => {\n    const segments = path.split(\"/\").filter((segment) => segment !== \"\");\n    return segments;\n};\n","import { splitToSegments } from \"./split-to-segments\";\n\n/**\n * Checks if the both routes have the same number of segments.\n */\nexport const isSegmentCountsSame = (route: string, resourceRoute: string) => {\n    const routeSegments = splitToSegments(route);\n    const resourceRouteSegments = splitToSegments(resourceRoute);\n\n    return routeSegments.length === resourceRouteSegments.length;\n};\n","/**\n * Remove leading and trailing slashes from a route.\n */\nexport const removeLeadingTrailingSlashes = (route: string) => {\n    return route.replace(/^\\/|\\/$/g, \"\");\n};\n","import { isParameter } from \"./is-parameter\";\nimport { isSegmentCountsSame } from \"./is-segment-counts-same\";\nimport { removeLeadingTrailingSlashes } from \"./remove-leading-trailing-slashes\";\nimport { splitToSegments } from \"./split-to-segments\";\n\n/**\n * This function if the route and resourceRoute match by segments.\n * - First, trailing and leading slashes are removed\n * - Then, the route and resourceRoute are split to segments and checked if they have the same number of segments\n * - Then, each segment is checked if it is a parameter or if it matches the resourceRoute segment\n * - If all segments match, the function returns true, otherwise false\n */\nexport const checkBySegments = (route: string, resourceRoute: string) => {\n    const stdRoute = removeLeadingTrailingSlashes(route);\n    const stdResourceRoute = removeLeadingTrailingSlashes(resourceRoute);\n    // we need to check if the route and resourceRoute have the same number of segments\n    // if not, we can't match them\n    if (!isSegmentCountsSame(stdRoute, stdResourceRoute)) {\n        return false;\n    }\n\n    const routeSegments = splitToSegments(stdRoute);\n    const resourceRouteSegments = splitToSegments(stdResourceRoute);\n\n    return resourceRouteSegments.every((segment, index) => {\n        return isParameter(segment) || segment === routeSegments[index];\n    });\n};\n","import { Action } from \"src/interfaces\";\nimport { removeLeadingTrailingSlashes } from \"./remove-leading-trailing-slashes\";\n\n/**\n * This helper function returns the default path for a given action and resource.\n * It also applies the parentPrefix if provided.\n * This is used by the legacy router and the new router if the resource doesn't provide a custom path.\n */\nexport const getDefaultActionPath = (\n    resourceName: string,\n    action: Action,\n    parentPrefix?: string,\n): string => {\n    const cleanParentPrefix = removeLeadingTrailingSlashes(parentPrefix || \"\");\n\n    let path = `${cleanParentPrefix}${\n        cleanParentPrefix ? \"/\" : \"\"\n    }${resourceName}`;\n\n    if (action === \"list\") {\n        path = `${path}`;\n    } else if (action === \"create\") {\n        path = `${path}/create`;\n    } else if (action === \"edit\") {\n        path = `${path}/edit/:id`;\n    } else if (action === \"show\") {\n        path = `${path}/show/:id`;\n    } else if (action === \"clone\") {\n        path = `${path}/clone/:id`;\n    }\n\n    return `/${path.replace(/^\\//, \"\")}`;\n};\n","import { IResourceItem } from \"src/interfaces\";\nimport { pickNotDeprecated } from \"../pickNotDeprecated\";\n\n/**\n * Returns the parent resource of the given resource.\n * Works both with the deprecated `parentName` and the new `parent` property.\n */\nexport const getParentResource = (\n    resource: IResourceItem,\n    resources: IResourceItem[],\n): IResourceItem | undefined => {\n    const parentName = pickNotDeprecated(\n        resource.meta?.parent,\n        resource.options?.parent,\n        resource.parentName,\n    );\n\n    if (!parentName) {\n        return undefined;\n    }\n\n    const parentResource = resources.find(\n        (resource) => (resource.identifier ?? resource.name) === parentName,\n    );\n\n    /**\n     * If the parent resource is not found, we return a resource object with the name of the parent resource.\n     * Because we still want to have nesting and prefixing for the resource even if the parent is not explicitly defined.\n     */\n    return parentResource ?? { name: parentName };\n};\n","import { ResourceProps } from \"src/interfaces/bindings/resource\";\nimport { getParentResource } from \"./get-parent-resource\";\nimport { removeLeadingTrailingSlashes } from \"./remove-leading-trailing-slashes\";\n\n/**\n * Returns the parent prefix for a resource\n * - If `legacy` is provided, the computation is based on the `route` option of the resource\n */\nexport const getParentPrefixForResource = (\n    resource: ResourceProps,\n    resources: ResourceProps[],\n    /**\n     * Uses legacy route if true (`options.route`)\n     */\n    legacy?: boolean,\n): string | undefined => {\n    const parents: ResourceProps[] = [];\n\n    let parent = getParentResource(resource, resources);\n\n    while (parent) {\n        parents.push(parent);\n        parent = getParentResource(parent, resources);\n    }\n\n    if (parents.length === 0) {\n        return undefined;\n    }\n\n    return `/${parents\n        .reverse()\n        .map((parent) => {\n            const v = legacy\n                ? parent.options?.route ?? parent.name\n                : parent.name;\n            return removeLeadingTrailingSlashes(v);\n        })\n        .join(\"/\")}`;\n};\n","import { Action, IResourceItem } from \"src/interfaces\";\nimport { getDefaultActionPath } from \"./get-default-action-path\";\nimport { getParentPrefixForResource } from \"./get-parent-prefix-for-resource\";\n\nexport type ResourceActionRoute = {\n    action: Action;\n    resource: IResourceItem;\n    route: string;\n};\n\n/**\n * This function returns all the routes for available actions for a resource.\n * - If the action is a function, it means we're fallbacking to default path for the action\n * - If the action is a string, it means we don't have the component, but we have the route\n * - If the action is an object, it means we have the component and the route\n * - It will return an array of objects with the action, the resource and the route\n */\nexport const getActionRoutesFromResource = (\n    resource: IResourceItem,\n    resources: IResourceItem[],\n    /**\n     * Uses legacy route if true (`options.route`)\n     */\n    legacy?: boolean,\n) => {\n    const actions: ResourceActionRoute[] = [];\n\n    const actionList: Action[] = [\"list\", \"show\", \"edit\", \"create\", \"clone\"];\n\n    const parentPrefix = getParentPrefixForResource(\n        resource,\n        resources,\n        legacy,\n    );\n\n    actionList.forEach((action) => {\n        const item =\n            legacy && action === \"clone\" ? resource.create : resource[action];\n\n        let route: string | undefined = undefined;\n\n        if (typeof item === \"function\" || legacy) {\n            // means we're fallbacking to default path for the action\n            route = getDefaultActionPath(\n                legacy\n                    ? resource.meta?.route ??\n                          resource.options?.route ??\n                          resource.name\n                    : resource.name,\n                action,\n                legacy ? parentPrefix : undefined,\n            );\n        } else if (typeof item === \"string\") {\n            // means we don't have the component, but we have the route\n            route = item;\n        } else if (typeof item === \"object\") {\n            // means we have the component and the route\n            route = item.path;\n        }\n\n        if (route) {\n            actions.push({\n                action,\n                resource,\n                route: `/${route.replace(/^\\//, \"\")}`,\n            });\n        }\n    });\n\n    return actions;\n};\n","import { ResourceActionRoute } from \"./get-action-routes-from-resource\";\nimport { isParameter } from \"./is-parameter\";\nimport { removeLeadingTrailingSlashes } from \"./remove-leading-trailing-slashes\";\nimport { splitToSegments } from \"./split-to-segments\";\n\n/**\n * Picks the most eligible route from the given matched routes.\n * - If there's only one route, it returns it.\n * - If there's more than one route, it picks the best non-greedy match.\n */\nexport const pickMatchedRoute = (\n    routes: ResourceActionRoute[],\n): ResourceActionRoute | undefined => {\n    // these routes are all matched, we should pick the least parametrized one\n\n    // no routes, no match\n    if (routes.length === 0) {\n        return undefined;\n    }\n\n    // no need to calculate the route segments if there's only one route\n    if (routes.length === 1) {\n        return routes[0];\n    }\n\n    // remove trailing and leading slashes\n    // split them to segments\n    const sanitizedRoutes = routes.map((route) => ({\n        ...route,\n        splitted: splitToSegments(removeLeadingTrailingSlashes(route.route)),\n    }));\n\n    // at this point, before calling this function, we already checked for segment lenghts and expect all of them to be the same\n    const segmentsCount = sanitizedRoutes[0]?.splitted.length ?? 0;\n\n    let eligibleRoutes: Array<(typeof sanitizedRoutes)[number]> = [\n        ...sanitizedRoutes,\n    ];\n\n    // loop through the segments\n    for (let i = 0; i < segmentsCount; i++) {\n        const nonParametrizedRoutes = eligibleRoutes.filter(\n            (route) => !isParameter(route.splitted[i]),\n        );\n\n        if (nonParametrizedRoutes.length === 0) {\n            // keep the eligible routes as they are\n            continue;\n        }\n        if (nonParametrizedRoutes.length === 1) {\n            // no need to continue, we found the route\n            eligibleRoutes = nonParametrizedRoutes;\n            break;\n        }\n\n        // we have more than one non-parametrized route, we need to check the next segment\n        eligibleRoutes = nonParametrizedRoutes;\n    }\n\n    return eligibleRoutes[0];\n};\n","import { Action, IResourceItem } from \"../../../interfaces\";\nimport { checkBySegments } from \"./check-by-segments\";\nimport { getActionRoutesFromResource } from \"./get-action-routes-from-resource\";\nimport { pickMatchedRoute } from \"./pick-matched-route\";\n\n/**\n * Match the resource from the route\n * - It will calculate all possible routes for resources and their actions\n * - It will check if the route matches any of the possible routes\n * - It will return the most eligible resource and action\n */\nexport const matchResourceFromRoute = (\n    route: string,\n    resources: IResourceItem[],\n): {\n    found: boolean;\n    resource?: IResourceItem;\n    action?: Action;\n    matchedRoute?: string;\n} => {\n    const allActionRoutes = resources.flatMap((resource) => {\n        return getActionRoutesFromResource(resource, resources);\n    });\n\n    const allFound = allActionRoutes.filter((actionRoute) => {\n        return checkBySegments(route, actionRoute.route);\n    });\n\n    const mostEligible = pickMatchedRoute(allFound);\n\n    return {\n        found: !!mostEligible,\n        resource: mostEligible?.resource,\n        action: mostEligible?.action,\n        matchedRoute: mostEligible?.route,\n    };\n};\n","import { ResourceProps } from \"src/interfaces/bindings/resource\";\nimport { getParentPrefixForResource } from \"../router\";\nimport { pickNotDeprecated } from \"../pickNotDeprecated\";\n\n/**\n * generates route for the resource based on parents and custom routes\n * @deprecated this is a **legacy** function and works only with the old resource definition\n */\nexport const routeGenerator = (\n    item: ResourceProps,\n    resourcesFromProps: ResourceProps[],\n): string | undefined => {\n    let route;\n\n    const parentPrefix = getParentPrefixForResource(\n        item,\n        resourcesFromProps,\n        true,\n    );\n\n    if (parentPrefix) {\n        const meta = pickNotDeprecated(item.meta, item.options);\n        route = `${parentPrefix}/${meta?.route ?? item.name}`;\n    } else {\n        route = item.options?.route ?? item.name;\n    }\n\n    return `/${route.replace(/^\\//, \"\")}`;\n};\n","import { pickNotDeprecated } from \"@definitions/helpers/pickNotDeprecated\";\nimport { IResourceItem, ITreeMenu, IMenuItem } from \"src/interfaces\";\n\n/**\n * @deprecated This helper is deprecated. Please use `createTree` instead.\n */\nexport const createTreeView = (\n    resources: IResourceItem[] | IMenuItem[],\n): ITreeMenu[] | ITreeMenu[] => {\n    const tree = [];\n    const resourcesRouteObject: { [key: string]: any } = {};\n    const resourcesNameObject: { [key: string]: any } = {};\n    let parent: IResourceItem | IMenuItem;\n    let child: ITreeMenu;\n\n    for (let i = 0; i < resources.length; i++) {\n        parent = resources[i];\n\n        const route =\n            parent.route ??\n            pickNotDeprecated(parent?.meta, parent.options)?.route ??\n            \"\";\n\n        resourcesRouteObject[route] = parent;\n        resourcesRouteObject[route][\"children\"] = [];\n\n        resourcesNameObject[parent.name] = parent;\n        resourcesNameObject[parent.name][\"children\"] = [];\n    }\n\n    for (const name in resourcesRouteObject) {\n        if (resourcesRouteObject.hasOwnProperty(name)) {\n            child = resourcesRouteObject[name];\n\n            if (child.parentName && resourcesNameObject[child.parentName]) {\n                resourcesNameObject[child.parentName][\"children\"].push(child);\n            } else {\n                tree.push(child);\n            }\n        }\n    }\n\n    return tree;\n};\n","export const humanizeString = (text: string): string => {\n    text = text.replace(/([a-z]{1})([A-Z]{1})/g, \"$1-$2\");\n    text = text.replace(/([A-Z]{1})([A-Z]{1})([a-z]{1})/g, \"$1-$2$3\");\n\n    text = text\n        .toLowerCase()\n        .replace(/[_-]+/g, \" \")\n        .replace(/\\s{2,}/g, \" \")\n        .trim();\n    text = text.charAt(0).toUpperCase() + text.slice(1);\n\n    return text;\n};\n// https://www.npmjs.com/package/humanize-string\n","import React from \"react\";\nimport pluralize from \"pluralize\";\nimport { humanizeString } from \"../../definitions/helpers/humanizeString\";\n\nimport {\n    IRefineContextOptions,\n    IRefineContext,\n    IRefineContextProvider,\n} from \"./IRefineContext\";\nimport { DefaultLayout } from \"@components/layoutWrapper/defaultLayout\";\n\nimport { LoginPage as DefaultLoginPage } from \"@components/pages\";\n\nexport const defaultRefineOptions: IRefineContextOptions = {\n    mutationMode: \"pessimistic\",\n    syncWithLocation: false,\n    undoableTimeout: 5000,\n    warnWhenUnsavedChanges: false,\n    liveMode: \"off\",\n    redirect: {\n        afterCreate: \"list\",\n        afterClone: \"list\",\n        afterEdit: \"list\",\n    },\n    overtime: {\n        interval: 1000,\n    },\n    textTransformers: {\n        humanize: humanizeString,\n        plural: pluralize.plural,\n        singular: pluralize.singular,\n    },\n    disableServerSideValidation: false,\n};\n\nexport const RefineContext = React.createContext<IRefineContext>({\n    hasDashboard: false,\n    mutationMode: \"pessimistic\",\n    warnWhenUnsavedChanges: false,\n    syncWithLocation: false,\n    undoableTimeout: 5000,\n    Title: undefined,\n    Sider: undefined,\n    Header: undefined,\n    Footer: undefined,\n    Layout: DefaultLayout,\n    OffLayoutArea: undefined,\n    liveMode: \"off\",\n    onLiveEvent: undefined,\n    options: defaultRefineOptions,\n});\n\nexport const RefineContextProvider: React.FC<IRefineContextProvider> = ({\n    hasDashboard,\n    mutationMode,\n    warnWhenUnsavedChanges,\n    syncWithLocation,\n    undoableTimeout,\n    children,\n    DashboardPage,\n    Title,\n    Layout = DefaultLayout,\n    Header,\n    Sider,\n    Footer,\n    OffLayoutArea,\n    LoginPage = DefaultLoginPage,\n    catchAll,\n    liveMode = \"off\",\n    onLiveEvent,\n    options,\n}) => {\n    return (\n        <RefineContext.Provider\n            value={{\n                hasDashboard,\n                mutationMode,\n                warnWhenUnsavedChanges,\n                syncWithLocation,\n                Title,\n                undoableTimeout,\n                Layout,\n                Header,\n                Sider,\n                Footer,\n                OffLayoutArea,\n                DashboardPage,\n                LoginPage,\n                catchAll,\n                liveMode,\n                onLiveEvent,\n                options,\n            }}\n        >\n            {children}\n        </RefineContext.Provider>\n    );\n};\n","import React from \"react\";\n\nimport { LayoutProps } from \"../../../interfaces\";\n\nexport const DefaultLayout: React.FC<LayoutProps> = ({ children }) => {\n    return <div>{children}</div>;\n};\n","import { QueryClient, QueryClientConfig } from \"@tanstack/react-query\";\n\nimport { defaultRefineOptions } from \"@contexts/refine\";\nimport {\n    IRefineContextOptions,\n    IRefineOptions,\n    LiveModeProps,\n    MutationMode,\n} from \"src/interfaces\";\n\ntype HandleRefineOptionsProps = {\n    options?: IRefineOptions;\n    mutationMode?: MutationMode;\n    syncWithLocation?: boolean;\n    warnWhenUnsavedChanges?: boolean;\n    undoableTimeout?: number;\n    liveMode?: LiveModeProps[\"liveMode\"];\n    disableTelemetry?: boolean;\n    reactQueryClientConfig?: QueryClientConfig;\n    reactQueryDevtoolConfig?: any | false;\n};\n\ntype HandleRefineOptionsReturnValues = {\n    optionsWithDefaults: IRefineContextOptions;\n    disableTelemetryWithDefault: boolean;\n    reactQueryWithDefaults: {\n        clientConfig: QueryClientConfig | InstanceType<typeof QueryClient>;\n        devtoolConfig: false | any;\n    };\n};\n\nexport const handleRefineOptions = ({\n    options,\n    disableTelemetry,\n    liveMode,\n    mutationMode,\n    reactQueryClientConfig,\n    reactQueryDevtoolConfig,\n    syncWithLocation,\n    undoableTimeout,\n    warnWhenUnsavedChanges,\n}: HandleRefineOptionsProps = {}): HandleRefineOptionsReturnValues => {\n    const optionsWithDefaults: IRefineContextOptions = {\n        breadcrumb: options?.breadcrumb,\n        mutationMode:\n            options?.mutationMode ??\n            mutationMode ??\n            defaultRefineOptions.mutationMode,\n        undoableTimeout:\n            options?.undoableTimeout ??\n            undoableTimeout ??\n            defaultRefineOptions.undoableTimeout,\n        syncWithLocation:\n            options?.syncWithLocation ??\n            syncWithLocation ??\n            defaultRefineOptions.syncWithLocation,\n        warnWhenUnsavedChanges:\n            options?.warnWhenUnsavedChanges ??\n            warnWhenUnsavedChanges ??\n            defaultRefineOptions.warnWhenUnsavedChanges,\n        liveMode:\n            options?.liveMode ?? liveMode ?? defaultRefineOptions.liveMode,\n        redirect: {\n            afterCreate:\n                options?.redirect?.afterCreate ??\n                defaultRefineOptions.redirect.afterCreate,\n            afterClone:\n                options?.redirect?.afterClone ??\n                defaultRefineOptions.redirect.afterClone,\n            afterEdit:\n                options?.redirect?.afterEdit ??\n                defaultRefineOptions.redirect.afterEdit,\n        },\n        overtime: options?.overtime ?? defaultRefineOptions.overtime,\n        textTransformers: {\n            humanize:\n                options?.textTransformers?.humanize ??\n                defaultRefineOptions.textTransformers.humanize,\n            plural:\n                options?.textTransformers?.plural ??\n                defaultRefineOptions.textTransformers.plural,\n            singular:\n                options?.textTransformers?.singular ??\n                defaultRefineOptions.textTransformers.singular,\n        },\n        disableServerSideValidation:\n            options?.disableServerSideValidation ??\n            defaultRefineOptions.disableServerSideValidation,\n        projectId: options?.projectId,\n        useNewQueryKeys: options?.useNewQueryKeys,\n    };\n\n    const disableTelemetryWithDefault =\n        options?.disableTelemetry ?? disableTelemetry ?? false;\n\n    const reactQueryWithDefaults = {\n        clientConfig:\n            options?.reactQuery?.clientConfig ?? reactQueryClientConfig ?? {},\n        devtoolConfig:\n            options?.reactQuery?.devtoolConfig ?? reactQueryDevtoolConfig ?? {},\n    };\n\n    return {\n        optionsWithDefaults,\n        disableTelemetryWithDefault,\n        reactQueryWithDefaults,\n    };\n};\n","import { Action, IRefineContextOptions, RedirectAction } from \"src/interfaces\";\n\ntype RedirectPageProps = {\n    redirectFromProps?: RedirectAction;\n    action: Action;\n    redirectOptions: IRefineContextOptions[\"redirect\"];\n};\n\nexport const redirectPage = ({\n    redirectFromProps,\n    action,\n    redirectOptions,\n}: RedirectPageProps): RedirectAction => {\n    if (redirectFromProps || redirectFromProps === false) {\n        return redirectFromProps;\n    }\n\n    switch (action) {\n        case \"clone\":\n            return redirectOptions.afterClone;\n        case \"create\":\n            return redirectOptions.afterCreate;\n        case \"edit\":\n            return redirectOptions.afterEdit;\n        default:\n            return false;\n    }\n};\n","type EachResolve<TResolve, Response> = (\n    result: TResolve,\n    index: number,\n) => Response;\ntype EachReject<TReject, Response> = (\n    error: TReject,\n    index: number,\n) => Response;\n\nexport const sequentialPromises = async <\n    TResolve = unknown,\n    TReject = unknown,\n    TResolveResponse = unknown,\n    TRejectResponse = unknown,\n>(\n    promises: (() => Promise<TResolve>)[],\n    onEachResolve: EachResolve<TResolve, TResolveResponse>,\n    onEachReject: EachReject<TReject, TRejectResponse>,\n): Promise<(TResolveResponse | TRejectResponse)[]> => {\n    const results = [];\n    // @ts-expect-error Remove this when we enable `downLevelIterations`\n    for (const [index, promise] of promises.entries()) {\n        try {\n            const result = await promise();\n\n            results.push(onEachResolve(result, index));\n        } catch (error) {\n            results.push(onEachReject(error as TReject, index));\n        }\n    }\n    return results;\n};\n","import { IResourceItem } from \"src/interfaces/bindings/resource\";\nimport { removeLeadingTrailingSlashes } from \"../router/remove-leading-trailing-slashes\";\n\n/**\n * Picks the resource based on the provided identifier.\n * Identifier fallbacks to `name` if `identifier` is not explicitly provided to the resource.\n * If legacy is true, then resource is matched by `route` first and then by `name`.\n */\nexport const pickResource = (\n    identifier?: string,\n    resources: IResourceItem[] = [],\n    /**\n     * If true, the identifier will be checked for `route` and `name` properties\n     */\n    legacy = false,\n): IResourceItem | undefined => {\n    if (!identifier) {\n        return undefined;\n    }\n\n    if (legacy) {\n        const resourceByRoute = resources.find(\n            (r) =>\n                removeLeadingTrailingSlashes(r.route ?? \"\") ===\n                removeLeadingTrailingSlashes(identifier),\n        );\n\n        const resource = resourceByRoute\n            ? resourceByRoute\n            : resources.find((r) => r.name === identifier);\n\n        return resource;\n    }\n\n    let resource = resources.find((r) => r.identifier === identifier);\n    if (!resource) {\n        resource = resources.find((r) => r.name === identifier);\n    }\n\n    return resource;\n};\n","import { IResourceItem } from \"src/interfaces/bindings/resource\";\nimport { pickResource } from \"../pick-resource\";\nimport { pickNotDeprecated } from \"../pickNotDeprecated\";\n\n/**\n * Picks the data provider name based on the provided name or fallbacks to resource definition, or `default`.\n */\nexport const pickDataProvider = (\n    resourceName?: string,\n    dataProviderName?: string,\n    resources?: IResourceItem[],\n) => {\n    if (dataProviderName) {\n        return dataProviderName;\n    }\n\n    /**\n     * In this helper, we don't do `route` based matching therefore there's no need to check for `legacy` behaviors.\n     */\n    const resource = pickResource(resourceName, resources);\n\n    const meta = pickNotDeprecated(resource?.meta, resource?.options);\n\n    if (meta?.dataProviderName) {\n        return meta.dataProviderName;\n    }\n\n    return \"default\";\n};\n","export const handleMultiple = async <TData = unknown>(\n    promises: Promise<{ data: TData }>[],\n): Promise<{ data: TData[] }> => {\n    return {\n        data: (await Promise.all(promises)).map((res) => res.data),\n    };\n};\n","import { GetListResponse } from \"../../../interfaces\";\n\nexport const getNextPageParam = (lastPage: GetListResponse) => {\n    const { pagination, cursor } = lastPage;\n\n    // cursor pagination\n    if (cursor?.next) {\n        return cursor.next;\n    }\n\n    const current = pagination?.current || 1;\n\n    const pageSize = pagination?.pageSize || 10;\n    const totalPages = Math.ceil((lastPage.total || 0) / pageSize);\n\n    return current < totalPages ? Number(current) + 1 : undefined;\n};\n\nexport const getPreviousPageParam = (lastPage: GetListResponse) => {\n    const { pagination, cursor } = lastPage;\n\n    // cursor pagination\n    if (cursor?.prev) {\n        return cursor.prev;\n    }\n\n    const current = pagination?.current || 1;\n\n    return current === 1 ? undefined : current - 1;\n};\n","import {\n    IResourceItem,\n    ResourceProps,\n} from \"../../../interfaces/bindings/resource\";\n\nimport { routeGenerator } from \"../routeGenerator\";\n\n/**\n * For the legacy definition of resources, we did a basic transformation for provided resources\n * - This is meant to provide an easier way to access properties.\n * - In the new definition, we don't need to do transformations and properties can be accessed via helpers or manually.\n * This is kept for backward compability\n */\nexport const legacyResourceTransform = (resources: ResourceProps[]) => {\n    const _resources: IResourceItem[] = [];\n\n    resources.forEach((resource) => {\n        _resources.push({\n            ...resource,\n            label: resource.meta?.label ?? resource.options?.label,\n            route: routeGenerator(resource, resources),\n            canCreate: !!resource.create,\n            canEdit: !!resource.edit,\n            canShow: !!resource.show,\n            canDelete: resource.canDelete,\n        });\n    });\n\n    return _resources;\n};\n","import { splitToSegments } from \"./split-to-segments\";\nimport { removeLeadingTrailingSlashes } from \"./remove-leading-trailing-slashes\";\nimport { isParameter } from \"./is-parameter\";\n\n/**\n * Picks the route parameters from the given route.\n * (e.g. /users/:id/posts/:postId => ['id', 'postId'])\n */\nexport const pickRouteParams = (route: string) => {\n    const segments = splitToSegments(removeLeadingTrailingSlashes(route));\n\n    return segments.flatMap((s) => {\n        if (isParameter(s)) {\n            return [s.slice(1)];\n        }\n\n        return [];\n    });\n};\n","/**\n * Prepares the route params by checking the existing params and meta data.\n * Meta data is prioritized over params.\n * Params are prioritized over predetermined id, action and resource.\n * This means, we can use `meta` for user supplied params (both manually or from the query string)\n */\nexport const prepareRouteParams = <\n    TRouteParams extends Record<string, unknown> = Record<string, unknown>,\n>(\n    routeParams: (keyof TRouteParams)[],\n    meta: Record<string, unknown> = {},\n): Partial<TRouteParams> => {\n    return routeParams.reduce((acc, key) => {\n        const value = meta[key as string];\n        if (typeof value !== \"undefined\") {\n            acc[key] = value as TRouteParams[keyof TRouteParams];\n        }\n        return acc;\n    }, {} as Partial<TRouteParams>);\n};\n","import { MetaQuery, ParseResponse } from \"src/interfaces\";\nimport { pickRouteParams } from \"./pick-route-params\";\nimport { prepareRouteParams } from \"./prepare-route-params\";\n\n/**\n * This function will compose a route with the given params and meta.\n * - A route can have parameters like (eg: /users/:id)\n * - First we pick the route params from the route (eg: [id])\n * - Then we prepare the route params with the given params and meta (eg: { id: 1 })\n * - Then we replace the route params with the prepared route params (eg: /users/1)\n */\nexport const composeRoute = (\n    designatedRoute: string,\n    resourceMeta: MetaQuery = {},\n    parsed: ParseResponse = {},\n    meta: Record<string, unknown> = {},\n): string => {\n    // pickRouteParams (from the route)\n    const routeParams = pickRouteParams(designatedRoute);\n    // prepareRouteParams (from route params, params and meta)\n    const preparedRouteParams = prepareRouteParams(routeParams, {\n        ...resourceMeta,\n        ...(typeof parsed?.id !== \"undefined\" ? { id: parsed.id } : {}),\n        ...(typeof parsed?.action !== \"undefined\"\n            ? { action: parsed.action }\n            : {}),\n        ...(typeof parsed?.resource !== \"undefined\"\n            ? { resource: parsed.resource }\n            : {}),\n        ...parsed?.params,\n        ...meta,\n    });\n    // replace route params with prepared route params\n    return designatedRoute.replace(/:([^\\/]+)/g, (match, key) => {\n        const fromParams = preparedRouteParams[key];\n        if (typeof fromParams !== \"undefined\") {\n            return `${fromParams}`;\n        }\n        return match;\n    });\n};\n","import React, { PropsWithChildren } from \"react\";\n\nimport { useNavigation } from \"@hooks\";\nimport { ILegacyAuthContext, IAuthBindingsContext } from \"../../interfaces\";\n\n/**\n * @deprecated `LegacyAuthContext` is deprecated with refine@4, use `AuthBindingsContext` instead, however, we still support `LegacyAuthContext` for backward compatibility.\n */\nexport const LegacyAuthContext = React.createContext<ILegacyAuthContext>({});\n\n/**\n * @deprecated `LegacyAuthContextProvider` is deprecated with refine@4, use `AuthBindingsContextProvider` instead, however, we still support `LegacyAuthContextProvider` for backward compatibility.\n */\nexport const LegacyAuthContextProvider: React.FC<\n    ILegacyAuthContext & {\n        children?: React.ReactNode;\n    }\n> = ({ children, isProvided, ...authOperations }) => {\n    const { replace } = useNavigation();\n\n    const loginFunc = async (params: any) => {\n        try {\n            const result = await authOperations.login?.(params);\n\n            return result;\n        } catch (error) {\n            return Promise.reject(error);\n        }\n    };\n\n    const registerFunc = async (params: any) => {\n        try {\n            const result = await authOperations.register?.(params);\n\n            return result;\n        } catch (error) {\n            return Promise.reject(error);\n        }\n    };\n\n    const logoutFunc = async (params: any) => {\n        try {\n            const redirectPath = await authOperations.logout?.(params);\n\n            return redirectPath;\n        } catch (error) {\n            return Promise.reject(error);\n        }\n    };\n\n    const checkAuthFunc = async (params: any) => {\n        try {\n            await authOperations.checkAuth?.(params);\n            return Promise.resolve();\n        } catch (error) {\n            if ((error as { redirectPath?: string })?.redirectPath) {\n                replace((error as { redirectPath: string }).redirectPath);\n            }\n\n            return Promise.reject(error);\n        }\n    };\n\n    return (\n        <LegacyAuthContext.Provider\n            value={{\n                ...authOperations,\n                login: loginFunc,\n                logout: logoutFunc,\n                checkAuth: checkAuthFunc,\n                register: registerFunc,\n                isProvided,\n            }}\n        >\n            {children}\n        </LegacyAuthContext.Provider>\n    );\n};\n\nexport const AuthBindingsContext = React.createContext<\n    Partial<IAuthBindingsContext>\n>({});\n\nexport const AuthBindingsContextProvider: React.FC<\n    PropsWithChildren<IAuthBindingsContext>\n> = ({ children, isProvided, ...authBindings }) => {\n    const handleLogin = async (params: unknown) => {\n        try {\n            const result = await authBindings.login?.(params);\n\n            return result;\n        } catch (error) {\n            console.warn(\n                \"Unhandled Error in login: refine always expects a resolved promise.\",\n                error,\n            );\n            return Promise.reject(error);\n        }\n    };\n\n    const handleRegister = async (params: unknown) => {\n        try {\n            const result = await authBindings.register?.(params);\n\n            return result;\n        } catch (error) {\n            console.warn(\n                \"Unhandled Error in register: refine always expects a resolved promise.\",\n                error,\n            );\n            return Promise.reject(error);\n        }\n    };\n\n    const handleLogout = async (params: unknown) => {\n        try {\n            const result = await authBindings.logout?.(params);\n\n            return result;\n        } catch (error) {\n            console.warn(\n                \"Unhandled Error in logout: refine always expects a resolved promise.\",\n                error,\n            );\n            return Promise.reject(error);\n        }\n    };\n\n    const handleCheck = async (params: unknown) => {\n        try {\n            const result = await authBindings.check?.(params);\n\n            return Promise.resolve(result);\n        } catch (error) {\n            console.warn(\n                \"Unhandled Error in check: refine always expects a resolved promise.\",\n                error,\n            );\n            return Promise.reject(error);\n        }\n    };\n\n    const handleForgotPassword = async (params: unknown) => {\n        try {\n            const result = await authBindings.forgotPassword?.(params);\n\n            return Promise.resolve(result);\n        } catch (error) {\n            console.warn(\n                \"Unhandled Error in forgotPassword: refine always expects a resolved promise.\",\n                error,\n            );\n            return Promise.reject(error);\n        }\n    };\n\n    const handleUpdatePassword = async (params: unknown) => {\n        try {\n            const result = await authBindings.updatePassword?.(params);\n            return Promise.resolve(result);\n        } catch (error) {\n            console.warn(\n                \"Unhandled Error in updatePassword: refine always expects a resolved promise.\",\n                error,\n            );\n            return Promise.reject(error);\n        }\n    };\n\n    return (\n        <AuthBindingsContext.Provider\n            value={{\n                ...authBindings,\n                login: handleLogin as IAuthBindingsContext[\"login\"],\n                logout: handleLogout as IAuthBindingsContext[\"logout\"],\n                check: handleCheck as IAuthBindingsContext[\"check\"],\n                register: handleRegister as IAuthBindingsContext[\"register\"],\n                forgotPassword:\n                    handleForgotPassword as IAuthBindingsContext[\"forgotPassword\"],\n                updatePassword:\n                    handleUpdatePassword as IAuthBindingsContext[\"updatePassword\"],\n                isProvided,\n            }}\n        >\n            {children}\n        </AuthBindingsContext.Provider>\n    );\n};\n\n/**\n * @deprecated `useLegacyAuthContext` is deprecated with refine@4, use `useAuthBindingsContext` instead, however, we still support `useLegacyAuthContext` for backward compatibility.\n */\nexport const useLegacyAuthContext = () => {\n    const context = React.useContext(LegacyAuthContext);\n\n    return context;\n};\n\nexport const useAuthBindingsContext = () => {\n    const context = React.useContext(AuthBindingsContext);\n\n    return context;\n};\n","import { useAuthBindingsContext, useLegacyAuthContext } from \"@contexts/auth\";\n\n/**\n * @returns authProvider or legacyAuthProvider if provided, otherwise null\n * @internal\n * NOTE: Will be removed in v5\n */\nexport const useActiveAuthProvider = () => {\n    const legacyAuthProvider = useLegacyAuthContext();\n    const authProvider = useAuthBindingsContext();\n\n    if (authProvider.isProvided) {\n        return { isLegacy: false, ...authProvider };\n    }\n\n    if (legacyAuthProvider.isProvided) {\n        // legacyAuthProvider interface is different from authProvider interface\n        // we need to convert it to authProvider interface for simple usage\n        // in the future, we will remove legacyAuthProvider\n        return {\n            isLegacy: true,\n            ...legacyAuthProvider,\n            check: legacyAuthProvider.checkAuth,\n            onError: legacyAuthProvider.checkError,\n            getIdentity: legacyAuthProvider.getUserIdentity,\n        };\n    }\n\n    return null;\n};\n","import { Pagination } from \"../../../interfaces\";\nimport { pickNotDeprecated } from \"../pickNotDeprecated\";\n\ntype HandlePaginationParamsProps = {\n    hasPagination?: boolean;\n    pagination?: Pagination;\n    configPagination?: Pagination;\n};\n\nexport const handlePaginationParams = ({\n    hasPagination,\n    pagination,\n    configPagination,\n}: HandlePaginationParamsProps = {}): Required<Pagination> => {\n    const hasPaginationString = hasPagination === false ? \"off\" : \"server\";\n    const mode = pagination?.mode ?? hasPaginationString;\n\n    const current =\n        pickNotDeprecated(pagination?.current, configPagination?.current) ?? 1;\n\n    const pageSize =\n        pickNotDeprecated(pagination?.pageSize, configPagination?.pageSize) ??\n        10;\n\n    return {\n        current,\n        pageSize,\n        mode,\n    };\n};\n","import { useState, useEffect } from \"react\";\n\nexport const useMediaQuery = (query: string) => {\n    const [matches, setMatches] = useState(false);\n\n    useEffect(() => {\n        const media = window.matchMedia(query);\n        if (media.matches !== matches) {\n            setMatches(media.matches);\n        }\n        const listener = () => setMatches(media.matches);\n        window.addEventListener(\"resize\", listener);\n        return () => window.removeEventListener(\"resize\", listener);\n    }, [matches, query]);\n\n    return matches;\n};\n","import type { useTranslate } from \"@hooks/translate\";\n\nexport const safeTranslate = (\n    translate: ReturnType<typeof useTranslate>,\n    key: string,\n    defaultMessage?: string,\n    options?: any,\n) => {\n    const translated = options\n        ? translate(key, options, defaultMessage)\n        : translate(key, defaultMessage);\n\n    const fallback = defaultMessage ?? key;\n\n    if (translated === key || typeof translated === \"undefined\") {\n        return fallback;\n    }\n\n    return translated;\n};\n","import { IResourceItem } from \"@contexts/resource\";\nimport { userFriendlyResourceName } from \"../userFriendlyResourceName\";\nimport type { useTranslate } from \"@hooks/translate\";\nimport { safeTranslate } from \"../safe-translate\";\n\n/**\n * Generates document title for the given resource and action.\n */\nexport function generateDefaultDocumentTitle(\n    translate: ReturnType<typeof useTranslate>,\n    resource?: IResourceItem,\n    action?: string,\n    id?: string,\n    resourceName?: string,\n) {\n    const actionPrefixMatcher = {\n        create: \"Create new \",\n        clone: `#${id ?? \"\"} Clone `,\n        edit: `#${id ?? \"\"} Edit `,\n        show: `#${id ?? \"\"} Show `,\n        list: \"\",\n    };\n\n    const identifier = resource?.identifier ?? resource?.name;\n\n    const resourceNameFallback =\n        resource?.label ??\n        resource?.meta?.label ??\n        userFriendlyResourceName(\n            identifier,\n            action === \"list\" ? \"plural\" : \"singular\",\n        );\n\n    const resourceNameWithFallback = resourceName ?? resourceNameFallback;\n\n    const defaultTitle = safeTranslate(\n        translate,\n        \"documentTitle.default\",\n        \"refine\",\n    );\n    const suffix = safeTranslate(\n        translate,\n        \"documentTitle.suffix\",\n        \" | refine\",\n    );\n    let autoGeneratedTitle = defaultTitle;\n\n    if (action && identifier) {\n        autoGeneratedTitle = safeTranslate(\n            translate,\n            `documentTitle.${identifier}.${action}`,\n            `${\n                actionPrefixMatcher[\n                    action as keyof typeof actionPrefixMatcher\n                ] ?? \"\"\n            }${resourceNameWithFallback}${suffix}`,\n            { id },\n        );\n    }\n\n    return autoGeneratedTitle;\n}\n","import { useContext } from \"react\";\n\nimport { RefineContext } from \"@contexts/refine\";\nimport { IRefineContextOptions } from \"../../interfaces\";\n\ntype UseMutationModeType = () => {\n    mutationMode: IRefineContextOptions[\"mutationMode\"];\n    undoableTimeout: IRefineContextOptions[\"undoableTimeout\"];\n};\n\n/**\n * Mutation mode determines which mode the mutation runs with.\n * Mutations can run under three different modes: `pessimistic`, `optimistic` and `undoable`.\n * Each mode corresponds to a different type of user experience.\n *\n * @see {@link https://refine.dev/docs/guides-and-concepts/mutation-mode} for more details.\n */\nexport const useMutationMode: UseMutationModeType = () => {\n    const { mutationMode, undoableTimeout } = useContext(RefineContext);\n\n    return { mutationMode, undoableTimeout };\n};\n","import { useContext } from \"react\";\n\nimport { RefineContext } from \"@contexts/refine\";\nimport { UnsavedWarnContext } from \"@contexts/unsavedWarn\";\nimport {\n    IRefineContextOptions,\n    IUnsavedWarnContext,\n} from \"../../../interfaces\";\n\ntype UseWarnAboutChangeType = () => {\n    warnWhenUnsavedChanges: IRefineContextOptions[\"warnWhenUnsavedChanges\"];\n    warnWhen: NonNullable<IUnsavedWarnContext[\"warnWhen\"]>;\n    setWarnWhen: NonNullable<IUnsavedWarnContext[\"setWarnWhen\"]>;\n};\n\n/**\n * When you have unsaved changes and try to leave the current page, **refine** shows a confirmation modal box.\n * To activate this feature, set the `warnWhenUnsavedChanges` to `true`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/components/refine-config#warnwhenunsavedchanges} for more details.\n */\nexport const useWarnAboutChange: UseWarnAboutChangeType = () => {\n    const { warnWhenUnsavedChanges } = useContext(RefineContext);\n\n    const { warnWhen, setWarnWhen } = useContext(UnsavedWarnContext);\n\n    return {\n        warnWhenUnsavedChanges,\n        warnWhen: Boolean(warnWhen),\n        setWarnWhen: setWarnWhen ?? (() => undefined),\n    };\n};\n","import React, { ReactNode, useState } from \"react\";\n\nimport { IUnsavedWarnContext } from \"./IUnsavedWarnContext\";\n\nexport const UnsavedWarnContext = React.createContext<IUnsavedWarnContext>({});\n\nexport const UnsavedWarnContextProvider: React.FC<{ children: ReactNode }> = ({\n    children,\n}) => {\n    const [warnWhen, setWarnWhen] = useState(false);\n\n    return (\n        <UnsavedWarnContext.Provider value={{ warnWhen, setWarnWhen }}>\n            {children}\n        </UnsavedWarnContext.Provider>\n    );\n};\n","import { useContext } from \"react\";\n\nimport { RefineContext } from \"@contexts/refine\";\nimport { IRefineContextOptions } from \"../../interfaces\";\n\ntype UseSyncWithLocationType = () => {\n    syncWithLocation: IRefineContextOptions[\"syncWithLocation\"];\n};\n\n/**\n * List query parameter values can be edited manually by typing directly in the URL.\n * To activate this feature `syncWithLocation` needs to be set to `true`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/components/refine-config/#syncwithlocation} for more details.\n */\nexport const useSyncWithLocation: UseSyncWithLocationType = () => {\n    const { syncWithLocation } = useContext(RefineContext);\n\n    return { syncWithLocation };\n};\n","import { useContext } from \"react\";\nimport { RefineContext } from \"@contexts/refine\";\nimport { TitleProps } from \"../../interfaces\";\n\n/**\n * `useTitle` returns a component that calls the `<Title>` passed to the `<Refine>`.\n * In this way, it becomes easier for us to access this component in various parts of the application.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/refine/useTitle} for more details.\n */\nexport const useTitle: () => React.FC<TitleProps> | undefined = () => {\n    const { Title } = useContext(RefineContext);\n\n    return Title;\n};\n","import { useContext } from \"react\";\n\nimport { RefineContext } from \"@contexts/refine\";\n\nexport const useRefineContext = () => {\n    const {\n        Footer,\n        Header,\n        Layout,\n        OffLayoutArea,\n        Sider,\n        Title,\n        hasDashboard,\n        mutationMode,\n        syncWithLocation,\n        undoableTimeout,\n        warnWhenUnsavedChanges,\n        DashboardPage,\n        LoginPage,\n        catchAll,\n        options,\n    } = useContext(RefineContext);\n\n    return {\n        Footer,\n        Header,\n        Layout,\n        OffLayoutArea,\n        Sider,\n        Title,\n        hasDashboard,\n        mutationMode,\n        syncWithLocation,\n        undoableTimeout,\n        warnWhenUnsavedChanges,\n        DashboardPage,\n        LoginPage,\n        catchAll,\n        options,\n    };\n};\n","import { useRefineContext } from \"@hooks/refine\";\n\n/**\n * A method that the internal uses\n * @internal\n */\nexport const useUserFriendlyName = () => {\n    const {\n        options: { textTransformers },\n    } = useRefineContext();\n\n    const getFriendlyName = (\n        name = \"\",\n        type: \"singular\" | \"plural\",\n    ): string => {\n        const humanizeName = textTransformers.humanize(name);\n        if (type === \"singular\") {\n            return textTransformers.singular(humanizeName);\n        }\n        return textTransformers.plural(humanizeName);\n    };\n\n    return getFriendlyName;\n};\n","const isNested = (obj: any) => typeof obj === \"object\" && obj !== null;\nconst isArray = (obj: any) => Array.isArray(obj);\n\nexport const flattenObjectKeys = (obj: any, prefix = \"\") => {\n    if (!isNested(obj)) {\n        return {\n            [prefix]: obj,\n        };\n    }\n\n    return Object.keys(obj).reduce((acc, key) => {\n        const currentPrefix = prefix.length ? prefix + \".\" : \"\";\n\n        if (isNested(obj[key]) && Object.keys(obj[key]).length) {\n            if (isArray(obj[key]) && obj[key].length) {\n                obj[key].forEach((item: unknown[], index: number) => {\n                    Object.assign(\n                        acc,\n                        flattenObjectKeys(\n                            item,\n                            currentPrefix + key + \".\" + index,\n                        ),\n                    );\n                });\n            } else {\n                Object.assign(\n                    acc,\n                    flattenObjectKeys(obj[key], currentPrefix + key),\n                );\n            }\n        } else {\n            acc[currentPrefix + key] = obj[key];\n        }\n        return acc;\n    }, {} as Record<string, unknown>);\n};\n","export const propertyPathToArray = (propertyPath: string) => {\n    return propertyPath\n        .split(\".\")\n        .map((item) => (!isNaN(Number(item)) ? Number(item) : item));\n};\n","export const file2Base64 = (file: any): Promise<string> => {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n\n        const resultHandler = () => {\n            if (reader.result) {\n                reader.removeEventListener(\"load\", resultHandler, false);\n\n                resolve(reader.result as string);\n            }\n        };\n\n        reader.addEventListener(\"load\", resultHandler, false);\n\n        reader.readAsDataURL(file.originFileObj as Blob);\n        reader.onerror = (error) => {\n            reader.removeEventListener(\"load\", resultHandler, false);\n            return reject(error);\n        };\n    });\n};\n","import { useRefineContext } from \"..\";\nimport { keys } from \"@definitions/index\";\n\nexport const useKeys = () => {\n    const {\n        options: { useNewQueryKeys },\n    } = useRefineContext();\n\n    return {\n        keys,\n        preferLegacyKeys: !useNewQueryKeys,\n    };\n};\n","import {\n    useQuery,\n    UseQueryResult,\n    UseQueryOptions,\n} from \"@tanstack/react-query\";\nimport { getXRay } from \"@refinedev/devtools-internal\";\n\nimport { useAuthBindingsContext, useLegacyAuthContext } from \"@contexts/auth\";\nimport { IdentityResponse } from \"../../../interfaces\";\nimport { useKeys } from \"@hooks/useKeys\";\n\nexport type UseGetIdentityLegacyProps<TData> = {\n    v3LegacyAuthProviderCompatible: true;\n    queryOptions?: UseQueryOptions<TData>;\n};\n\nexport type UseGetIdentityProps<TData = IdentityResponse> = {\n    v3LegacyAuthProviderCompatible?: false;\n    queryOptions?: UseQueryOptions<TData>;\n};\n\nexport type UseGetIdentityCombinedProps<TData = any> = {\n    v3LegacyAuthProviderCompatible: boolean;\n    queryOptions?: UseQueryOptions<TData> | UseQueryOptions<IdentityResponse>;\n};\n\nexport type UseGetIdentityLegacyReturnType<TData> = UseQueryResult<\n    TData,\n    unknown\n>;\n\nexport type UseGetIdentityReturnType<TData = IdentityResponse> = UseQueryResult<\n    TData,\n    unknown\n>;\n\nexport type UsePermissionsCombinedReturnType<TData = any> =\n    | UseQueryResult<TData, unknown>\n    | UseQueryResult<IdentityResponse, unknown>;\n\nexport function useGetIdentity<TData = any>(\n    props: UseGetIdentityLegacyProps<TData>,\n): UseGetIdentityLegacyReturnType<TData>;\n\nexport function useGetIdentity<TData = IdentityResponse>(\n    props?: UseGetIdentityProps<TData>,\n): UseGetIdentityReturnType<TData>;\n\nexport function useGetIdentity<TData = any>(\n    props?: UseGetIdentityCombinedProps<TData>,\n): UsePermissionsCombinedReturnType<TData>;\n\n/**\n * `useGetIdentity` calls the `getUserIdentity` method from the {@link https://refine.dev/docs/core/providers/auth-provider `authProvider`} under the hood.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/auth/useGetIdentity} for more details.\n *\n * @typeParam TData - Result data of the query\n *\n */\nexport function useGetIdentity<TData = any>({\n    v3LegacyAuthProviderCompatible = false,\n    queryOptions,\n}: UseGetIdentityProps<TData> | UseGetIdentityLegacyProps<TData> = {}):\n    | UseGetIdentityReturnType<TData>\n    | UseGetIdentityLegacyReturnType<TData> {\n    const { getUserIdentity: legacyGetUserIdentity } = useLegacyAuthContext();\n    const { getIdentity } = useAuthBindingsContext();\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const queryResponse = useQuery<TData>(\n        keys().auth().action(\"identity\").get(preferLegacyKeys),\n        // Enabled check for `getIdentity` is enough to be sure that it's defined in the query function but TS is not smart enough to know that.\n        (getIdentity as (params?: unknown) => Promise<TData>) ??\n            (() => Promise.resolve({})),\n        {\n            enabled: !v3LegacyAuthProviderCompatible && !!getIdentity,\n            retry: false,\n            ...(v3LegacyAuthProviderCompatible === true ? {} : queryOptions),\n            meta: {\n                ...(v3LegacyAuthProviderCompatible === true\n                    ? {}\n                    : queryOptions?.meta),\n                ...getXRay(\"useGetIdentity\", preferLegacyKeys),\n            },\n        },\n    );\n\n    const legacyQueryResponse = useQuery<TData>(\n        [\n            ...keys().auth().action(\"identity\").get(preferLegacyKeys),\n            \"v3LegacyAuthProviderCompatible\",\n        ],\n        // Enabled check for `getUserIdentity` is enough to be sure that it's defined in the query function but TS is not smart enough to know that.\n        legacyGetUserIdentity ?? (() => Promise.resolve({})),\n        {\n            enabled: v3LegacyAuthProviderCompatible && !!legacyGetUserIdentity,\n            retry: false,\n            ...(v3LegacyAuthProviderCompatible ? queryOptions : {}),\n            meta: {\n                ...(v3LegacyAuthProviderCompatible ? queryOptions?.meta : {}),\n                ...getXRay(\"useGetIdentity\", preferLegacyKeys),\n            },\n        },\n    );\n\n    return v3LegacyAuthProviderCompatible ? legacyQueryResponse : queryResponse;\n}\n","import {\n    useMutation,\n    UseMutationOptions,\n    UseMutationResult,\n} from \"@tanstack/react-query\";\nimport { getXRay } from \"@refinedev/devtools-internal\";\n\nimport { useGo, useNavigation, useNotification, useRouterType } from \"@hooks\";\nimport { useAuthBindingsContext, useLegacyAuthContext } from \"@contexts/auth\";\nimport {\n    RefineError,\n    OpenNotificationParams,\n    TLogoutData,\n} from \"../../../interfaces\";\nimport { AuthActionResponse } from \"src/interfaces/bindings/auth\";\nimport { useInvalidateAuthStore } from \"../useInvalidateAuthStore\";\nimport { useKeys } from \"@hooks/useKeys\";\n\ntype Variables = {\n    redirectPath?: string | false;\n};\n\nexport type UseLogoutLegacyProps<TVariables> = {\n    v3LegacyAuthProviderCompatible: true;\n    mutationOptions?: Omit<\n        UseMutationOptions<\n            TLogoutData,\n            Error | RefineError,\n            (TVariables & Variables) | void,\n            unknown\n        >,\n        \"mutationFn\" | \"onError\" | \"onSuccess\"\n    >;\n};\n\nexport type UseLogoutProps<TVariables> = {\n    v3LegacyAuthProviderCompatible?: false;\n    mutationOptions?: Omit<\n        UseMutationOptions<\n            AuthActionResponse,\n            Error | RefineError,\n            (TVariables & Variables) | void,\n            unknown\n        >,\n        \"mutationFn\"\n    >;\n};\n\nexport type UseLogoutCombinedProps<TVariables> = {\n    v3LegacyAuthProviderCompatible: boolean;\n    mutationOptions?: Omit<\n        UseMutationOptions<\n            AuthActionResponse | TLogoutData,\n            Error | RefineError,\n            (TVariables & Variables) | void,\n            unknown\n        >,\n        \"mutationFn\"\n    >;\n};\n\nexport type UseLogoutLegacyReturnType<TVariables> = UseMutationResult<\n    TLogoutData,\n    Error | RefineError,\n    (TVariables & Variables) | void,\n    unknown\n>;\n\nexport type UseLogoutReturnType<TVariables> = UseMutationResult<\n    AuthActionResponse,\n    Error | RefineError,\n    (TVariables & Variables) | void,\n    unknown\n>;\n\nexport type UseLogoutCombinedReturnType<TVariables> = UseMutationResult<\n    AuthActionResponse | TLogoutData,\n    Error | RefineError,\n    (TVariables & Variables) | void,\n    unknown\n>;\n\nexport function useLogout<TVariables = {}>(\n    props: UseLogoutLegacyProps<TVariables>,\n): UseLogoutLegacyReturnType<TVariables>;\n\nexport function useLogout<TVariables = {}>(\n    props?: UseLogoutProps<TVariables>,\n): UseLogoutReturnType<TVariables>;\n\nexport function useLogout<TVariables = {}>(\n    props?: UseLogoutCombinedProps<TVariables>,\n): UseLogoutCombinedReturnType<TVariables>;\n\n/**\n * `useLogout` calls the `logout` method from the {@link https://refine.dev/docs/api-reference/core/providers/auth-provider `authProvider`} under the hood.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/auth/useLogout} for more details.\n *\n */\nexport function useLogout<TVariables = {}>({\n    v3LegacyAuthProviderCompatible,\n    mutationOptions,\n}: UseLogoutProps<TVariables> | UseLogoutLegacyProps<TVariables> = {}):\n    | UseLogoutLegacyReturnType<TVariables>\n    | UseLogoutReturnType<TVariables> {\n    const invalidateAuthStore = useInvalidateAuthStore();\n    const routerType = useRouterType();\n    const go = useGo();\n    const { push } = useNavigation();\n    const { open, close } = useNotification();\n    const { logout: legacyLogoutFromContext } = useLegacyAuthContext();\n    const { logout: logoutFromContext } = useAuthBindingsContext();\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const mutation = useMutation<\n        AuthActionResponse,\n        Error | RefineError,\n        (TVariables & Variables) | void,\n        unknown\n    >(keys().auth().action(\"logout\").get(preferLegacyKeys), logoutFromContext, {\n        onSuccess: async (data, variables) => {\n            const { success, error, redirectTo } = data;\n            const { redirectPath } = variables ?? {};\n\n            const redirect = redirectPath ?? redirectTo;\n\n            if (success) {\n                close?.(\"useLogout-error\");\n            }\n\n            if (error || !success) {\n                open?.(buildNotification(error));\n            }\n\n            await invalidateAuthStore();\n\n            if (redirect !== false) {\n                if (routerType === \"legacy\") {\n                    push(redirect ?? \"/login\");\n                } else {\n                    if (redirect) {\n                        go({ to: redirect });\n                    }\n                }\n            }\n        },\n        onError: (error: any) => {\n            open?.(buildNotification(error));\n        },\n        ...(v3LegacyAuthProviderCompatible === true ? {} : mutationOptions),\n        meta: {\n            ...(v3LegacyAuthProviderCompatible === true\n                ? {}\n                : mutationOptions?.meta),\n            ...getXRay(\"useLogout\", preferLegacyKeys),\n        },\n    });\n\n    const v3LegacyAuthProviderCompatibleMutation = useMutation<\n        TLogoutData,\n        Error | RefineError,\n        (TVariables & Variables) | void,\n        unknown\n    >(\n        [\n            ...keys().auth().action(\"logout\").get(preferLegacyKeys),\n            \"v3LegacyAuthProviderCompatible\",\n        ],\n        legacyLogoutFromContext,\n        {\n            onSuccess: async (data, variables) => {\n                const redirectPath = variables?.redirectPath ?? data;\n\n                await invalidateAuthStore();\n\n                if (redirectPath === false) {\n                    return;\n                }\n\n                if (redirectPath) {\n                    if (routerType === \"legacy\") {\n                        push(redirectPath);\n                    } else {\n                        go({ to: redirectPath });\n                    }\n                    return;\n                }\n\n                if (routerType === \"legacy\") {\n                    push(\"/login\");\n                } else {\n                    go({ to: \"/login\" });\n                }\n            },\n            onError: (error: any) => {\n                open?.(buildNotification(error));\n            },\n            ...(v3LegacyAuthProviderCompatible ? mutationOptions : {}),\n            meta: {\n                ...(v3LegacyAuthProviderCompatible\n                    ? mutationOptions?.meta\n                    : {}),\n                ...getXRay(\"useLogout\", preferLegacyKeys),\n            },\n        },\n    );\n\n    return v3LegacyAuthProviderCompatible\n        ? v3LegacyAuthProviderCompatibleMutation\n        : mutation;\n}\n\nconst buildNotification = (\n    error?: Error | RefineError,\n): OpenNotificationParams => {\n    return {\n        key: \"useLogout-error\",\n        type: \"error\",\n        message: error?.name || \"Logout Error\",\n        description: error?.message || \"Something went wrong during logout\",\n    };\n};\n","import { useKeys } from \"@hooks/useKeys\";\nimport { useQueryClient } from \"@tanstack/react-query\";\n\nexport const useInvalidateAuthStore = () => {\n    const queryClient = useQueryClient();\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const invalidate = async () => {\n        await Promise.all(\n            ([\"check\", \"identity\", \"permissions\"] as const).map((action) =>\n                queryClient.invalidateQueries(\n                    keys().auth().action(action).get(preferLegacyKeys),\n                ),\n            ),\n        );\n    };\n\n    return invalidate;\n};\n","import React from \"react\";\nimport {\n    useMutation,\n    UseMutationOptions,\n    UseMutationResult,\n} from \"@tanstack/react-query\";\nimport { getXRay } from \"@refinedev/devtools-internal\";\nimport qs from \"qs\";\n\nimport {\n    useNavigation,\n    useRouterContext,\n    useNotification,\n    useRouterType,\n    useParsed,\n    useGo,\n} from \"@hooks\";\nimport { useAuthBindingsContext, useLegacyAuthContext } from \"@contexts/auth\";\n\nimport {\n    RefineError,\n    OpenNotificationParams,\n    TLoginData,\n} from \"../../../interfaces\";\nimport { AuthActionResponse } from \"src/interfaces/bindings/auth\";\nimport { useInvalidateAuthStore } from \"../useInvalidateAuthStore\";\nimport { useKeys } from \"@hooks/useKeys\";\n\nexport type UseLoginLegacyProps<TVariables> = {\n    v3LegacyAuthProviderCompatible: true;\n    mutationOptions?: Omit<\n        UseMutationOptions<\n            TLoginData,\n            Error | RefineError,\n            TVariables,\n            unknown\n        >,\n        \"mutationFn\" | \"onError\" | \"onSuccess\"\n    >;\n};\n\nexport type UseLoginProps<TVariables> = {\n    v3LegacyAuthProviderCompatible?: false;\n    mutationOptions?: Omit<\n        UseMutationOptions<\n            AuthActionResponse,\n            Error | RefineError,\n            TVariables,\n            unknown\n        >,\n        \"mutationFn\"\n    >;\n};\n\nexport type UseLoginCombinedProps<TVariables> = {\n    v3LegacyAuthProviderCompatible: boolean;\n    mutationOptions?: Omit<\n        UseMutationOptions<\n            AuthActionResponse | TLoginData,\n            Error | RefineError,\n            TVariables,\n            unknown\n        >,\n        \"mutationFn\"\n    >;\n};\n\nexport type UseLoginLegacyReturnType<TVariables> = UseMutationResult<\n    TLoginData,\n    Error | RefineError,\n    TVariables,\n    unknown\n>;\n\nexport type UseLoginReturnType<TVariables> = UseMutationResult<\n    AuthActionResponse,\n    Error | RefineError,\n    TVariables,\n    unknown\n>;\n\nexport type UseLoginCombinedReturnType<TVariables> = UseMutationResult<\n    AuthActionResponse | TLoginData,\n    Error | RefineError,\n    TVariables,\n    unknown\n>;\n\nexport function useLogin<TVariables = {}>(\n    props: UseLoginLegacyProps<TVariables>,\n): UseLoginLegacyReturnType<TVariables>;\n\nexport function useLogin<TVariables = {}>(\n    props?: UseLoginProps<TVariables>,\n): UseLoginReturnType<TVariables>;\n\nexport function useLogin<TVariables = {}>(\n    props?: UseLoginCombinedProps<TVariables>,\n): UseLoginCombinedReturnType<TVariables>;\n\n/**\n * `useLogin` calls `login` method from {@link https://refine.dev/docs/api-reference/core/providers/auth-provider `authProvider`} under the hood.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/auth/useLogin} for more details.\n *\n * @typeParam TData - Result data of the query\n * @typeParam TVariables - Values for mutation function. default `{}`\n *\n */\nexport function useLogin<TVariables = {}>({\n    v3LegacyAuthProviderCompatible,\n    mutationOptions,\n}: UseLoginProps<TVariables> | UseLoginLegacyProps<TVariables> = {}):\n    | UseLoginLegacyReturnType<TVariables>\n    | UseLoginReturnType<TVariables> {\n    const invalidateAuthStore = useInvalidateAuthStore();\n    const routerType = useRouterType();\n\n    const go = useGo();\n    const { replace } = useNavigation();\n\n    const parsed = useParsed();\n\n    const { useLocation } = useRouterContext();\n    const { search } = useLocation();\n\n    const { close, open } = useNotification();\n    const { login: legacyLoginFromContext } = useLegacyAuthContext();\n    const { login: loginFromContext } = useAuthBindingsContext();\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const to = React.useMemo(() => {\n        if (routerType === \"legacy\") {\n            const legacySearch = qs.parse(search, {\n                ignoreQueryPrefix: true,\n            });\n            return legacySearch.to;\n        } else {\n            return parsed.params?.to;\n        }\n    }, [routerType, parsed.params, search]);\n\n    const mutation = useMutation<\n        AuthActionResponse,\n        Error | RefineError,\n        TVariables,\n        unknown\n    >(keys().auth().action(\"login\").get(preferLegacyKeys), loginFromContext, {\n        onSuccess: async ({ success, redirectTo, error }) => {\n            if (success) {\n                close?.(\"login-error\");\n            }\n\n            if (error || !success) {\n                open?.(buildNotification(error));\n            }\n\n            await invalidateAuthStore();\n\n            if (to && success) {\n                if (routerType === \"legacy\") {\n                    replace(to as string);\n                } else {\n                    go({ to: to as string, type: \"replace\" });\n                }\n            } else if (redirectTo) {\n                if (routerType === \"legacy\") {\n                    replace(redirectTo);\n                } else {\n                    go({ to: redirectTo, type: \"replace\" });\n                }\n            } else {\n                if (routerType === \"legacy\") {\n                    replace(\"/\");\n                }\n            }\n        },\n        onError: (error: any) => {\n            open?.(buildNotification(error));\n        },\n        ...(v3LegacyAuthProviderCompatible === true ? {} : mutationOptions),\n        meta: {\n            ...(v3LegacyAuthProviderCompatible === true\n                ? {}\n                : mutationOptions?.meta),\n            ...getXRay(\"useLogin\", preferLegacyKeys),\n        },\n    });\n\n    const v3LegacyAuthProviderCompatibleMutation = useMutation<\n        TLoginData,\n        Error | RefineError,\n        TVariables,\n        unknown\n    >(\n        [\n            ...keys().auth().action(\"login\").get(preferLegacyKeys),\n            \"v3LegacyAuthProviderCompatible\",\n        ],\n        legacyLoginFromContext,\n        {\n            onSuccess: async (redirectPathFromAuth) => {\n                await invalidateAuthStore();\n\n                if (to) {\n                    replace(to as string);\n                }\n\n                if (redirectPathFromAuth !== false && !to) {\n                    if (typeof redirectPathFromAuth === \"string\") {\n                        if (routerType === \"legacy\") {\n                            replace(redirectPathFromAuth);\n                        } else {\n                            go({ to: redirectPathFromAuth, type: \"replace\" });\n                        }\n                    } else {\n                        if (routerType === \"legacy\") {\n                            replace(\"/\");\n                        } else {\n                            go({ to: \"/\", type: \"replace\" });\n                        }\n                    }\n                }\n\n                close?.(\"login-error\");\n            },\n            onError: (error: any) => {\n                open?.(buildNotification(error));\n            },\n            ...(v3LegacyAuthProviderCompatible ? mutationOptions : {}),\n            meta: {\n                ...(v3LegacyAuthProviderCompatible\n                    ? mutationOptions?.meta\n                    : {}),\n                ...getXRay(\"useLogin\", preferLegacyKeys),\n            },\n        },\n    );\n\n    return v3LegacyAuthProviderCompatible\n        ? v3LegacyAuthProviderCompatibleMutation\n        : mutation;\n}\n\nconst buildNotification = (\n    error?: Error | RefineError,\n): OpenNotificationParams => {\n    return {\n        message: error?.name || \"Login Error\",\n        description: error?.message || \"Invalid credentials\",\n        key: \"login-error\",\n        type: \"error\",\n    };\n};\n","import {\n    useMutation,\n    UseMutationOptions,\n    UseMutationResult,\n} from \"@tanstack/react-query\";\nimport { getXRay } from \"@refinedev/devtools-internal\";\n\nimport { useNavigation, useRouterType, useGo, useNotification } from \"@hooks\";\nimport { useAuthBindingsContext, useLegacyAuthContext } from \"@contexts/auth\";\n\nimport {\n    AuthActionResponse,\n    RefineError,\n    OpenNotificationParams,\n    TLoginData,\n    TRegisterData,\n} from \"../../../interfaces\";\nimport { useInvalidateAuthStore } from \"../useInvalidateAuthStore\";\nimport { useKeys } from \"@hooks/useKeys\";\n\nexport type UseRegisterLegacyProps<TVariables> = {\n    v3LegacyAuthProviderCompatible: true;\n    mutationOptions?: Omit<\n        UseMutationOptions<\n            TRegisterData,\n            Error | RefineError,\n            TVariables,\n            unknown\n        >,\n        \"mutationFn\" | \"onError\" | \"onSuccess\"\n    >;\n};\n\nexport type UseRegisterProps<TVariables> = {\n    v3LegacyAuthProviderCompatible?: false;\n    mutationOptions?: Omit<\n        UseMutationOptions<\n            AuthActionResponse,\n            Error | RefineError,\n            TVariables,\n            unknown\n        >,\n        \"mutationFn\"\n    >;\n};\n\nexport type UseRegisterCombinedProps<TVariables> = {\n    v3LegacyAuthProviderCompatible: boolean;\n    mutationOptions?: Omit<\n        UseMutationOptions<\n            AuthActionResponse | TRegisterData,\n            Error | RefineError,\n            TVariables,\n            unknown\n        >,\n        \"mutationFn\"\n    >;\n};\n\nexport type UseRegisterLegacyReturnType<TVariables> = UseMutationResult<\n    TRegisterData,\n    Error | RefineError,\n    TVariables,\n    unknown\n>;\n\nexport type UseRegisterReturnType<TVariables> = UseMutationResult<\n    AuthActionResponse,\n    Error | RefineError,\n    TVariables,\n    unknown\n>;\n\nexport type UseRegisterCombinedReturnType<TVariables> = UseMutationResult<\n    AuthActionResponse | TLoginData,\n    Error | RefineError,\n    TVariables,\n    unknown\n>;\n\nexport function useRegister<TVariables = {}>(\n    props: UseRegisterLegacyProps<TVariables>,\n): UseRegisterLegacyReturnType<TVariables>;\n\nexport function useRegister<TVariables = {}>(\n    props?: UseRegisterProps<TVariables>,\n): UseRegisterReturnType<TVariables>;\n\nexport function useRegister<TVariables = {}>(\n    props?: UseRegisterCombinedProps<TVariables>,\n): UseRegisterCombinedReturnType<TVariables>;\n\n/**\n * `useRegister` calls `register` method from {@link https://refine.dev/docs/api-reference/core/providers/auth-provider `authProvider`} under the hood.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/auth/useRegister} for more details.\n *\n * @typeParam TData - Result data of the query\n * @typeParam TVariables - Values for mutation function. default `{}`\n *\n */\nexport function useRegister<TVariables = {}>({\n    v3LegacyAuthProviderCompatible,\n    mutationOptions,\n}: UseRegisterProps<TVariables> | UseRegisterLegacyProps<TVariables> = {}):\n    | UseRegisterReturnType<TVariables>\n    | UseRegisterLegacyReturnType<TVariables> {\n    const invalidateAuthStore = useInvalidateAuthStore();\n    const routerType = useRouterType();\n    const go = useGo();\n    const { replace } = useNavigation();\n    const { register: legacyRegisterFromContext } = useLegacyAuthContext();\n    const { register: registerFromContext } = useAuthBindingsContext();\n    const { close, open } = useNotification();\n\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const mutation = useMutation<\n        AuthActionResponse,\n        Error | RefineError,\n        TVariables,\n        unknown\n    >(\n        keys().auth().action(\"register\").get(preferLegacyKeys),\n        registerFromContext,\n        {\n            onSuccess: async ({ success, redirectTo, error }) => {\n                if (success) {\n                    close?.(\"register-error\");\n                }\n\n                if (error || !success) {\n                    open?.(buildNotification(error));\n                }\n\n                await invalidateAuthStore();\n\n                if (redirectTo) {\n                    if (routerType === \"legacy\") {\n                        replace(redirectTo);\n                    } else {\n                        go({ to: redirectTo, type: \"replace\" });\n                    }\n                } else {\n                    if (routerType === \"legacy\") {\n                        replace(\"/\");\n                    }\n                }\n            },\n            onError: (error: any) => {\n                open?.(buildNotification(error));\n            },\n            ...(v3LegacyAuthProviderCompatible === true ? {} : mutationOptions),\n            meta: {\n                ...(v3LegacyAuthProviderCompatible === true\n                    ? {}\n                    : mutationOptions?.meta),\n                ...getXRay(\"useRegister\", preferLegacyKeys),\n            },\n        },\n    );\n\n    const v3LegacyAuthProviderCompatibleMutation = useMutation<\n        TRegisterData,\n        Error | RefineError,\n        TVariables,\n        unknown\n    >(\n        [\n            ...keys().auth().action(\"register\").get(preferLegacyKeys),\n            \"v3LegacyAuthProviderCompatible\",\n        ],\n        legacyRegisterFromContext,\n        {\n            onSuccess: async (redirectPathFromAuth) => {\n                await invalidateAuthStore();\n\n                if (redirectPathFromAuth !== false) {\n                    if (redirectPathFromAuth) {\n                        if (routerType === \"legacy\") {\n                            replace(redirectPathFromAuth);\n                        } else {\n                            go({ to: redirectPathFromAuth, type: \"replace\" });\n                        }\n                    } else {\n                        if (routerType === \"legacy\") {\n                            replace(\"/\");\n                        } else {\n                            go({ to: \"/\", type: \"replace\" });\n                        }\n                    }\n                    close?.(\"register-error\");\n                }\n            },\n            onError: (error: any) => {\n                open?.(buildNotification(error));\n            },\n            ...(v3LegacyAuthProviderCompatible ? mutationOptions : {}),\n            meta: {\n                ...(v3LegacyAuthProviderCompatible\n                    ? mutationOptions?.meta\n                    : {}),\n                ...getXRay(\"useRegister\", preferLegacyKeys),\n            },\n        },\n    );\n\n    return v3LegacyAuthProviderCompatible\n        ? v3LegacyAuthProviderCompatibleMutation\n        : mutation;\n}\n\nconst buildNotification = (\n    error?: Error | RefineError,\n): OpenNotificationParams => {\n    return {\n        message: error?.name || \"Register Error\",\n        description: error?.message || \"Error while registering\",\n        key: \"register-error\",\n        type: \"error\",\n    };\n};\n","import {\n    useMutation,\n    UseMutationOptions,\n    UseMutationResult,\n} from \"@tanstack/react-query\";\nimport { getXRay } from \"@refinedev/devtools-internal\";\n\nimport { useGo, useNavigation, useNotification, useRouterType } from \"@hooks\";\nimport { useAuthBindingsContext, useLegacyAuthContext } from \"@contexts/auth\";\n\nimport {\n    AuthActionResponse,\n    RefineError,\n    OpenNotificationParams,\n    TForgotPasswordData,\n} from \"../../../interfaces\";\nimport { useKeys } from \"@hooks/useKeys\";\n\nexport type UseForgotPasswordLegacyProps<TVariables> = {\n    v3LegacyAuthProviderCompatible: true;\n    mutationOptions?: Omit<\n        UseMutationOptions<\n            TForgotPasswordData,\n            Error | RefineError,\n            TVariables,\n            unknown\n        >,\n        \"mutationFn\" | \"onError\" | \"onSuccess\"\n    >;\n};\n\nexport type UseForgotPasswordProps<TVariables> = {\n    v3LegacyAuthProviderCompatible?: false;\n    mutationOptions?: Omit<\n        UseMutationOptions<\n            AuthActionResponse,\n            Error | RefineError,\n            TVariables,\n            unknown\n        >,\n        \"mutationFn\"\n    >;\n};\n\nexport type UseForgotPasswordCombinedProps<TVariables> = {\n    v3LegacyAuthProviderCompatible: boolean;\n    mutationOptions?: Omit<\n        UseMutationOptions<\n            AuthActionResponse | TForgotPasswordData,\n            Error | RefineError,\n            TVariables,\n            unknown\n        >,\n        \"mutationFn\"\n    >;\n};\n\nexport type UseForgotPasswordLegacyReturnType<TVariables> = UseMutationResult<\n    TForgotPasswordData,\n    Error | RefineError,\n    TVariables,\n    unknown\n>;\n\nexport type UseForgotPasswordReturnType<TVariables> = UseMutationResult<\n    AuthActionResponse,\n    Error | RefineError,\n    TVariables,\n    unknown\n>;\n\nexport type UseForgotPasswordCombinedReturnType<TVariables> = UseMutationResult<\n    AuthActionResponse | TForgotPasswordData,\n    Error | RefineError,\n    TVariables,\n    unknown\n>;\n\nexport function useForgotPassword<TVariables = {}>(\n    props: UseForgotPasswordLegacyProps<TVariables>,\n): UseForgotPasswordLegacyReturnType<TVariables>;\n\nexport function useForgotPassword<TVariables = {}>(\n    props?: UseForgotPasswordProps<TVariables>,\n): UseForgotPasswordReturnType<TVariables>;\n\nexport function useForgotPassword<TVariables = {}>(\n    props?: UseForgotPasswordCombinedProps<TVariables>,\n): UseForgotPasswordCombinedReturnType<TVariables>;\n\n/**\n * `useForgotPassword` calls `forgotPassword` method from {@link https://refine.dev/docs/api-reference/core/providers/auth-provider `authProvider`} under the hood.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/auth/useForgotPassword} for more details.\n *\n * @typeParam TData - Result data of the query\n * @typeParam TVariables - Values for mutation function. default `{}`\n *\n */\nexport function useForgotPassword<TVariables = {}>({\n    v3LegacyAuthProviderCompatible,\n    mutationOptions,\n}:\n    | UseForgotPasswordProps<TVariables>\n    | UseForgotPasswordLegacyProps<TVariables> = {}):\n    | UseForgotPasswordReturnType<TVariables>\n    | UseForgotPasswordLegacyReturnType<TVariables> {\n    const routerType = useRouterType();\n    const go = useGo();\n    const { replace } = useNavigation();\n    const {\n        forgotPassword: v3LegacyAuthProviderCompatibleForgotPasswordFromContext,\n    } = useLegacyAuthContext();\n    const { forgotPassword: forgotPasswordFromContext } =\n        useAuthBindingsContext();\n    const { close, open } = useNotification();\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const mutation = useMutation<\n        AuthActionResponse,\n        Error | RefineError,\n        TVariables,\n        unknown\n    >(\n        keys().auth().action(\"forgotPassword\").get(preferLegacyKeys),\n        forgotPasswordFromContext,\n        {\n            onSuccess: ({ success, redirectTo, error }) => {\n                if (success) {\n                    close?.(\"forgot-password-error\");\n                }\n\n                if (error || !success) {\n                    open?.(buildNotification(error));\n                }\n\n                if (redirectTo) {\n                    if (routerType === \"legacy\") {\n                        replace(redirectTo);\n                    } else {\n                        go({ to: redirectTo, type: \"replace\" });\n                    }\n                }\n            },\n            onError: (error: any) => {\n                open?.(buildNotification(error));\n            },\n            ...(v3LegacyAuthProviderCompatible === true ? {} : mutationOptions),\n            meta: {\n                ...(v3LegacyAuthProviderCompatible === true\n                    ? {}\n                    : mutationOptions?.meta),\n                ...getXRay(\"useForgotPassword\", preferLegacyKeys),\n            },\n        },\n    );\n\n    const v3LegacyAuthProviderCompatibleMutation = useMutation<\n        TForgotPasswordData,\n        Error | RefineError,\n        TVariables,\n        unknown\n    >(\n        [\n            ...keys().auth().action(\"forgotPassword\").get(preferLegacyKeys),\n            \"v3LegacyAuthProviderCompatible\",\n        ],\n        v3LegacyAuthProviderCompatibleForgotPasswordFromContext,\n        {\n            onSuccess: (redirectPathFromAuth) => {\n                if (redirectPathFromAuth !== false) {\n                    if (redirectPathFromAuth) {\n                        if (routerType === \"legacy\") {\n                            replace(redirectPathFromAuth);\n                        } else {\n                            go({ to: redirectPathFromAuth, type: \"replace\" });\n                        }\n                    }\n                }\n                close?.(\"forgot-password-error\");\n            },\n            onError: (error: any) => {\n                open?.(buildNotification(error));\n            },\n            ...(v3LegacyAuthProviderCompatible ? mutationOptions : {}),\n            meta: {\n                ...(v3LegacyAuthProviderCompatible\n                    ? mutationOptions?.meta\n                    : {}),\n                ...getXRay(\"useForgotPassword\", preferLegacyKeys),\n            },\n        },\n    );\n\n    return v3LegacyAuthProviderCompatible\n        ? v3LegacyAuthProviderCompatibleMutation\n        : mutation;\n}\n\nconst buildNotification = (\n    error?: Error | RefineError,\n): OpenNotificationParams => {\n    return {\n        message: error?.name || \"Forgot Password Error\",\n        description: error?.message || \"Error while resetting password\",\n        key: \"forgot-password-error\",\n        type: \"error\",\n    };\n};\n","import React from \"react\";\nimport {\n    useMutation,\n    UseMutationOptions,\n    UseMutationResult,\n} from \"@tanstack/react-query\";\nimport { getXRay } from \"@refinedev/devtools-internal\";\nimport qs from \"qs\";\n\nimport {\n    useNavigation,\n    useRouterType,\n    useGo,\n    useParsed,\n    useNotification,\n    useRouterContext,\n} from \"@hooks\";\nimport { useAuthBindingsContext, useLegacyAuthContext } from \"@contexts/auth\";\nimport {\n    AuthActionResponse,\n    RefineError,\n    OpenNotificationParams,\n    TUpdatePasswordData,\n    UpdatePasswordFormTypes,\n} from \"../../../interfaces\";\nimport { useKeys } from \"@hooks/useKeys\";\n\nexport type UseUpdatePasswordLegacyProps<\n    TVariables extends UpdatePasswordFormTypes,\n> = {\n    v3LegacyAuthProviderCompatible: true;\n    mutationOptions?: Omit<\n        UseMutationOptions<\n            TUpdatePasswordData,\n            Error | RefineError,\n            TVariables,\n            unknown\n        >,\n        \"mutationFn\" | \"onError\" | \"onSuccess\"\n    >;\n};\n\nexport type UseUpdatePasswordProps<TVariables extends UpdatePasswordFormTypes> =\n    {\n        v3LegacyAuthProviderCompatible?: false;\n        mutationOptions?: Omit<\n            UseMutationOptions<\n                AuthActionResponse,\n                Error | RefineError,\n                TVariables,\n                unknown\n            >,\n            \"mutationFn\"\n        >;\n    };\n\nexport type UseUpdatePasswordCombinedProps<\n    TVariables extends UpdatePasswordFormTypes,\n> = {\n    v3LegacyAuthProviderCompatible: boolean;\n    mutationOptions?: Omit<\n        UseMutationOptions<\n            AuthActionResponse | TUpdatePasswordData,\n            Error | RefineError,\n            TVariables,\n            unknown\n        >,\n        \"mutationFn\"\n    >;\n};\n\nexport type UseUpdatePasswordLegacyReturnType<\n    TVariables extends UpdatePasswordFormTypes,\n> = UseMutationResult<\n    TUpdatePasswordData,\n    Error | RefineError,\n    TVariables,\n    unknown\n>;\n\nexport type UseUpdatePasswordReturnType<\n    TVariables extends UpdatePasswordFormTypes,\n> = UseMutationResult<\n    AuthActionResponse,\n    Error | RefineError,\n    TVariables,\n    unknown\n>;\n\nexport type UseUpdatePasswordCombinedReturnType<\n    TVariables extends UpdatePasswordFormTypes,\n> = UseMutationResult<\n    AuthActionResponse | TUpdatePasswordData,\n    Error | RefineError,\n    TVariables,\n    unknown\n>;\n\nexport function useUpdatePassword<TVariables extends UpdatePasswordFormTypes>(\n    props: UseUpdatePasswordLegacyProps<TVariables>,\n): UseUpdatePasswordLegacyReturnType<TVariables>;\n\nexport function useUpdatePassword<TVariables extends UpdatePasswordFormTypes>(\n    props?: UseUpdatePasswordProps<TVariables>,\n): UseUpdatePasswordReturnType<TVariables>;\n\nexport function useUpdatePassword<TVariables extends UpdatePasswordFormTypes>(\n    props?: UseUpdatePasswordCombinedProps<TVariables>,\n): UseUpdatePasswordCombinedReturnType<TVariables>;\n\n/**\n * `useUpdatePassword` calls `updatePassword` method from {@link https://refine.dev/docs/api-reference/core/providers/auth-provider `authProvider`} under the hood.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/auth/useUpdatePassword} for more details.\n *\n * @typeParam TData - Result data of the query\n * @typeParam TVariables - Values for mutation function. default `{}`\n *\n */\nexport function useUpdatePassword<\n    TVariables extends UpdatePasswordFormTypes = {},\n>({\n    v3LegacyAuthProviderCompatible,\n    mutationOptions,\n}:\n    | UseUpdatePasswordProps<TVariables>\n    | UseUpdatePasswordLegacyProps<TVariables> = {}):\n    | UseUpdatePasswordReturnType<TVariables>\n    | UseUpdatePasswordLegacyReturnType<TVariables> {\n    const routerType = useRouterType();\n\n    const go = useGo();\n    const { replace } = useNavigation();\n    const { updatePassword: legacyUpdatePasswordFromContext } =\n        useLegacyAuthContext();\n    const { updatePassword: updatePasswordFromContext } =\n        useAuthBindingsContext();\n    const { close, open } = useNotification();\n\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const parsed = useParsed();\n    const { useLocation } = useRouterContext();\n    const { search } = useLocation();\n\n    const params = React.useMemo(() => {\n        if (routerType === \"legacy\") {\n            const queryStrings = qs.parse(search, {\n                ignoreQueryPrefix: true,\n            });\n            return queryStrings ?? {};\n        } else {\n            return parsed.params ?? {};\n        }\n    }, [search, parsed, routerType]);\n\n    const mutation = useMutation<\n        AuthActionResponse,\n        Error,\n        TVariables,\n        unknown\n    >(\n        keys().auth().action(\"updatePassword\").get(preferLegacyKeys),\n        async (variables) => {\n            return updatePasswordFromContext?.({\n                ...params,\n                ...variables,\n            }) as Promise<AuthActionResponse>;\n        },\n        {\n            onSuccess: ({ success, redirectTo, error }) => {\n                if (success) {\n                    close?.(\"update-password-error\");\n                }\n\n                if (error || !success) {\n                    open?.(buildNotification(error));\n                }\n\n                if (redirectTo) {\n                    if (routerType === \"legacy\") {\n                        replace(redirectTo);\n                    } else {\n                        go({ to: redirectTo, type: \"replace\" });\n                    }\n                }\n            },\n            onError: (error: any) => {\n                open?.(buildNotification(error));\n            },\n            ...(v3LegacyAuthProviderCompatible === true ? {} : mutationOptions),\n            meta: {\n                ...(v3LegacyAuthProviderCompatible === true\n                    ? {}\n                    : mutationOptions?.meta),\n                ...getXRay(\"useUpdatePassword\", preferLegacyKeys),\n            },\n        },\n    );\n\n    const v3LegacyAuthProviderCompatibleMutation = useMutation<\n        TUpdatePasswordData,\n        Error | RefineError,\n        TVariables,\n        unknown\n    >(\n        [\n            ...keys().auth().action(\"updatePassword\").get(preferLegacyKeys),\n            \"v3LegacyAuthProviderCompatible\",\n        ],\n        async (variables) => {\n            return legacyUpdatePasswordFromContext?.({\n                ...params,\n                ...variables,\n            });\n        },\n        {\n            onSuccess: (redirectPathFromAuth) => {\n                if (redirectPathFromAuth !== false) {\n                    if (redirectPathFromAuth) {\n                        if (routerType === \"legacy\") {\n                            replace(redirectPathFromAuth);\n                        } else {\n                            go({ to: redirectPathFromAuth, type: \"replace\" });\n                        }\n                    }\n                }\n                close?.(\"update-password-error\");\n            },\n            onError: (error: any) => {\n                open?.(buildNotification(error));\n            },\n            ...(v3LegacyAuthProviderCompatible ? mutationOptions : {}),\n            meta: {\n                ...(v3LegacyAuthProviderCompatible\n                    ? mutationOptions?.meta\n                    : {}),\n                ...getXRay(\"useUpdatePassword\", preferLegacyKeys),\n            },\n        },\n    );\n\n    return v3LegacyAuthProviderCompatible\n        ? v3LegacyAuthProviderCompatibleMutation\n        : mutation;\n}\n\nconst buildNotification = (\n    error?: Error | RefineError,\n): OpenNotificationParams => {\n    return {\n        message: error?.name || \"Update Password Error\",\n        description: error?.message || \"Error while updating password\",\n        key: \"update-password-error\",\n        type: \"error\",\n    };\n};\n","import { useQuery, UseQueryResult } from \"@tanstack/react-query\";\nimport { getXRay } from \"@refinedev/devtools-internal\";\n\nimport { useAuthBindingsContext, useLegacyAuthContext } from \"@contexts/auth\";\nimport { CheckResponse } from \"../../../interfaces\";\nimport { useKeys } from \"@hooks/useKeys\";\n\nexport type UseIsAuthenticatedLegacyProps = {\n    v3LegacyAuthProviderCompatible: true;\n    params?: any;\n};\n\nexport type UseIsAuthenticatedProps = {\n    v3LegacyAuthProviderCompatible?: false;\n    params?: any;\n};\n\nexport type UseIsAuthenticatedCombinedProps = {\n    v3LegacyAuthProviderCompatible: boolean;\n    params?: any;\n};\n\nexport type UseIsAuthenticatedLegacyReturnType = UseQueryResult<any, any>;\n\nexport type UseIsAuthenticatedReturnType = UseQueryResult<CheckResponse, any>;\n\nexport type UseIsAuthenticatedCombinedReturnType = UseQueryResult<\n    CheckResponse | any,\n    any\n>;\n\nexport function useIsAuthenticated(\n    props: UseIsAuthenticatedLegacyProps,\n): UseIsAuthenticatedLegacyReturnType;\n\nexport function useIsAuthenticated(\n    props?: UseIsAuthenticatedProps,\n): UseIsAuthenticatedReturnType;\n\nexport function useIsAuthenticated(\n    props?: UseIsAuthenticatedCombinedProps,\n): UseIsAuthenticatedCombinedReturnType;\n\n/**\n *  `useIsAuthenticated` calls the `checkAuth` method from the {@link https://refine.dev/docs/core/providers/auth-provider `authProvider`} under the hood.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/auth/useAuthenticated} for more details.\n */\nexport function useIsAuthenticated({\n    v3LegacyAuthProviderCompatible = false,\n    params,\n}: UseIsAuthenticatedProps | UseIsAuthenticatedLegacyProps = {}):\n    | UseIsAuthenticatedReturnType\n    | UseIsAuthenticatedLegacyReturnType {\n    const { checkAuth } = useLegacyAuthContext();\n    const { check } = useAuthBindingsContext();\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const queryResponse = useQuery(\n        keys().auth().action(\"check\").params(params).get(preferLegacyKeys),\n        async () => (await check?.(params)) ?? {},\n        {\n            retry: false,\n            enabled: !v3LegacyAuthProviderCompatible,\n            meta: {\n                ...getXRay(\"useIsAuthenticated\", preferLegacyKeys),\n            },\n        },\n    );\n\n    const legacyQueryResponse = useQuery(\n        [\n            ...keys()\n                .auth()\n                .action(\"check\")\n                .params(params)\n                .get(preferLegacyKeys),\n            \"v3LegacyAuthProviderCompatible\",\n        ],\n        async () => (await checkAuth?.(params)) ?? {},\n        {\n            retry: false,\n            enabled: v3LegacyAuthProviderCompatible,\n            meta: {\n                ...getXRay(\"useIsAuthenticated\", preferLegacyKeys),\n            },\n        },\n    );\n\n    return v3LegacyAuthProviderCompatible ? legacyQueryResponse : queryResponse;\n}\n\n/**\n * @deprecated `useAuthenticated` is deprecated with refine@4, use `useIsAuthenticated` instead, however, we still support `useAuthenticated` for backward compatibility.\n */\nexport const useAuthenticated = useIsAuthenticated;\n","import { useMutation, UseMutationResult } from \"@tanstack/react-query\";\nimport { getXRay } from \"@refinedev/devtools-internal\";\n\nimport { useAuthBindingsContext, useLegacyAuthContext } from \"@contexts/auth\";\nimport { OnErrorResponse } from \"../../../interfaces\";\nimport { useGo, useLogout, useNavigation, useRouterType } from \"@hooks\";\nimport { useKeys } from \"@hooks/useKeys\";\n\nexport type UseOnErrorLegacyProps = {\n    v3LegacyAuthProviderCompatible: true;\n};\n\nexport type UseOnErrorProps = {\n    v3LegacyAuthProviderCompatible?: false;\n};\n\nexport type UseOnErrorCombinedProps = {\n    v3LegacyAuthProviderCompatible: boolean;\n};\n\nexport type UseOnErrorLegacyReturnType = UseMutationResult<\n    void,\n    string | undefined,\n    any,\n    unknown\n>;\n\nexport type UseOnErrorReturnType = UseMutationResult<\n    OnErrorResponse,\n    unknown,\n    unknown,\n    unknown\n>;\nexport type UseOnErrorCombinedReturnType = UseMutationResult<\n    OnErrorResponse | void,\n    unknown,\n    unknown,\n    unknown\n>;\n\nexport function useOnError(\n    props: UseOnErrorLegacyProps,\n): UseOnErrorLegacyReturnType;\n\nexport function useOnError(props?: UseOnErrorProps): UseOnErrorReturnType;\n\nexport function useOnError(\n    props?: UseOnErrorCombinedProps,\n): UseOnErrorCombinedReturnType;\n\n/**\n * `useOnError` calls the `checkError` method from the {@link https://refine.dev/docs/core/providers/auth-provider `authProvider`} under the hood.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/auth/useCheckError} for more details.\n *\n */\nexport function useOnError({\n    v3LegacyAuthProviderCompatible = false,\n}: UseOnErrorProps | UseOnErrorLegacyProps = {}):\n    | UseOnErrorReturnType\n    | UseOnErrorLegacyReturnType {\n    const routerType = useRouterType();\n    const go = useGo();\n    const { replace } = useNavigation();\n\n    const { checkError: legacyCheckErrorFromContext } = useLegacyAuthContext();\n    const { onError: onErrorFromContext } = useAuthBindingsContext();\n\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const { mutate: legacyLogout } = useLogout({\n        v3LegacyAuthProviderCompatible: Boolean(v3LegacyAuthProviderCompatible),\n    });\n    const { mutate: logout } = useLogout({\n        v3LegacyAuthProviderCompatible: Boolean(v3LegacyAuthProviderCompatible),\n    });\n\n    const mutation = useMutation(\n        keys().auth().action(\"onError\").get(preferLegacyKeys),\n        onErrorFromContext,\n        {\n            onSuccess: ({ logout: shouldLogout, redirectTo }) => {\n                if (shouldLogout) {\n                    logout({ redirectPath: redirectTo });\n                    return;\n                }\n\n                if (redirectTo) {\n                    if (routerType === \"legacy\") {\n                        replace(redirectTo);\n                    } else {\n                        go({ to: redirectTo, type: \"replace\" });\n                    }\n                    return;\n                }\n            },\n            meta: {\n                ...getXRay(\"useOnError\", preferLegacyKeys),\n            },\n        },\n    );\n\n    const v3LegacyAuthProviderCompatibleMutation = useMutation(\n        [\n            ...keys().auth().action(\"onError\").get(preferLegacyKeys),\n            \"v3LegacyAuthProviderCompatible\",\n        ],\n        legacyCheckErrorFromContext,\n        {\n            onError: (redirectPath?: string) => {\n                legacyLogout({ redirectPath });\n            },\n            meta: {\n                ...getXRay(\"useOnError\", preferLegacyKeys),\n            },\n        },\n    );\n\n    return v3LegacyAuthProviderCompatible\n        ? v3LegacyAuthProviderCompatibleMutation\n        : mutation;\n}\n\n/**\n * @deprecated `useCheckError` is deprecated with refine@4, use `useOnError` instead, however, we still support `useCheckError` for backward compatibility.\n */\nexport const useCheckError = useOnError;\n","import { useAuthBindingsContext, useLegacyAuthContext } from \"@contexts/auth\";\n\n/**\n * A hook that the UI uses\n * @internal\n */\nexport const useIsExistAuthentication = (): boolean => {\n    const { isProvided: legacyIsProvided } = useLegacyAuthContext();\n    const { isProvided } = useAuthBindingsContext();\n\n    return Boolean(isProvided || legacyIsProvided);\n};\n","import { getXRay } from \"@refinedev/devtools-internal\";\nimport {\n    QueryObserverResult,\n    useQuery,\n    UseQueryOptions,\n} from \"@tanstack/react-query\";\n\nimport {\n    handlePaginationParams,\n    pickDataProvider,\n    pickNotDeprecated,\n    useActiveAuthProvider,\n} from \"@definitions/helpers\";\nimport {\n    useDataProvider,\n    useHandleNotification,\n    useMeta,\n    useOnError,\n    useResource,\n    useResourceSubscription,\n    useTranslate,\n} from \"@hooks\";\nimport { useKeys } from \"@hooks/useKeys\";\nimport {\n    BaseRecord,\n    CrudFilters,\n    CrudSorting,\n    GetListResponse,\n    HttpError,\n    LiveModeProps,\n    MetaQuery,\n    Pagination,\n    Prettify,\n    SuccessErrorNotification,\n} from \"../../interfaces\";\nimport {\n    useLoadingOvertime,\n    UseLoadingOvertimeOptionsProps,\n    UseLoadingOvertimeReturnType,\n} from \"../useLoadingOvertime\";\n\nexport interface UseListConfig {\n    pagination?: Pagination;\n    hasPagination?: boolean;\n    sort?: CrudSorting;\n    filters?: CrudFilters;\n}\n\nexport type BaseListProps = {\n    /**\n     * Configuration for pagination, sorting and filtering\n     * @type [`UseListConfig`](/docs/api-reference/core/hooks/data/useList/#config-parameters)\n     * @deprecated `config` property is deprecated. Use `pagination`, `hasPagination`, `sorters` and `filters` instead.\n     */\n    config?: UseListConfig;\n    /**\n     * Pagination properties\n     */\n    pagination?: Pagination;\n    /**\n     * Whether to use server-side pagination or not\n     * @deprecated `hasPagination` property is deprecated. Use `pagination.mode` instead.\n     */\n    hasPagination?: boolean;\n    /**\n     * Sorter parameters\n     */\n    sorters?: CrudSorting;\n    /**\n     * Filter parameters\n     */\n    filters?: CrudFilters;\n    /**\n     * Meta data query for `dataProvider`\n     */\n    meta?: MetaQuery;\n    /**\n     * Meta data query for `dataProvider`\n     * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n     */\n    metaData?: MetaQuery;\n    /**\n     * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use\n     */\n    dataProviderName?: string;\n};\n\nexport type UseListProps<TQueryFnData, TError, TData> = {\n    /**\n     * Resource name for API data interactions\n     */\n    resource?: string;\n\n    /**\n     * Tanstack Query's [useQuery](https://tanstack.com/query/v4/docs/reference/useQuery) options\n     */\n    queryOptions?: UseQueryOptions<\n        GetListResponse<TQueryFnData>,\n        TError,\n        GetListResponse<TData>\n    >;\n} & BaseListProps &\n    SuccessErrorNotification<\n        GetListResponse<TData>,\n        TError,\n        Prettify<BaseListProps>\n    > &\n    LiveModeProps &\n    UseLoadingOvertimeOptionsProps;\n\n/**\n * `useList` is a modified version of `react-query`'s {@link https://react-query.tanstack.com/guides/queries `useQuery`} used for retrieving items from a `resource` with pagination, sort, and filter configurations.\n *\n * It uses the `getList` method as the query function from the `dataProvider` which is passed to `<Refine>`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/data/useList} for more details.\n *\n * @typeParam TQueryFnData - Result data returned by the query function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TData - Result data returned by the `select` function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}. Defaults to `TQueryFnData`\n *\n */\n\nexport const useList = <\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TData extends BaseRecord = TQueryFnData,\n>({\n    resource: resourceFromProp,\n    config,\n    filters,\n    hasPagination,\n    pagination,\n    sorters,\n    queryOptions,\n    successNotification,\n    errorNotification,\n    meta,\n    metaData,\n    liveMode,\n    onLiveEvent,\n    liveParams,\n    dataProviderName,\n    overtimeOptions,\n}: UseListProps<TQueryFnData, TError, TData> = {}): QueryObserverResult<\n    GetListResponse<TData>,\n    TError\n> &\n    UseLoadingOvertimeReturnType => {\n    const { resources, resource, identifier } = useResource(resourceFromProp);\n\n    const dataProvider = useDataProvider();\n    const translate = useTranslate();\n    const authProvider = useActiveAuthProvider();\n    const { mutate: checkError } = useOnError({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n    const handleNotification = useHandleNotification();\n    const getMeta = useMeta();\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const pickedDataProvider = pickDataProvider(\n        identifier,\n        dataProviderName,\n        resources,\n    );\n    const preferredMeta = pickNotDeprecated(meta, metaData);\n    const prefferedFilters = pickNotDeprecated(filters, config?.filters);\n    const prefferedSorters = pickNotDeprecated(sorters, config?.sort);\n    const prefferedHasPagination = pickNotDeprecated(\n        hasPagination,\n        config?.hasPagination,\n    );\n    const prefferedPagination = handlePaginationParams({\n        pagination,\n        configPagination: config?.pagination,\n        hasPagination: prefferedHasPagination,\n    });\n    const isServerPagination = prefferedPagination.mode === \"server\";\n\n    const combinedMeta = getMeta({ resource, meta: preferredMeta });\n\n    const notificationValues = {\n        meta: combinedMeta,\n        metaData: combinedMeta,\n        filters: prefferedFilters,\n        hasPagination: isServerPagination,\n        pagination: prefferedPagination,\n        sorters: prefferedSorters,\n        config: {\n            ...config,\n            sort: prefferedSorters,\n        },\n    };\n\n    const isEnabled =\n        queryOptions?.enabled === undefined || queryOptions?.enabled === true;\n\n    const { getList } = dataProvider(pickedDataProvider);\n\n    useResourceSubscription({\n        resource: identifier,\n        types: [\"*\"],\n        params: {\n            meta: combinedMeta,\n            metaData: combinedMeta,\n            pagination: prefferedPagination,\n            hasPagination: isServerPagination,\n            sort: prefferedSorters,\n            sorters: prefferedSorters,\n            filters: prefferedFilters,\n            subscriptionType: \"useList\",\n            ...liveParams,\n        },\n        channel: `resources/${resource?.name}`,\n        enabled: isEnabled,\n        liveMode,\n        onLiveEvent,\n        dataProviderName: pickedDataProvider,\n        meta: {\n            ...meta,\n            dataProviderName,\n        },\n    });\n\n    const queryResponse = useQuery<\n        GetListResponse<TQueryFnData>,\n        TError,\n        GetListResponse<TData>\n    >(\n        keys()\n            .data(pickedDataProvider)\n            .resource(identifier ?? \"\")\n            .action(\"list\")\n            .params({\n                ...(preferredMeta || {}),\n                filters: prefferedFilters,\n                hasPagination: isServerPagination,\n                ...(isServerPagination && {\n                    pagination: prefferedPagination,\n                }),\n                ...(sorters && {\n                    sorters,\n                }),\n                ...(config?.sort && {\n                    sort: config?.sort,\n                }),\n            })\n            .get(preferLegacyKeys),\n        ({ queryKey, pageParam, signal }) => {\n            return getList<TQueryFnData>({\n                resource: resource?.name ?? \"\",\n                pagination: prefferedPagination,\n                hasPagination: isServerPagination,\n                filters: prefferedFilters,\n                sort: prefferedSorters,\n                sorters: prefferedSorters,\n                meta: {\n                    ...combinedMeta,\n                    queryContext: {\n                        queryKey,\n                        pageParam,\n                        signal,\n                    },\n                },\n                metaData: {\n                    ...combinedMeta,\n                    queryContext: {\n                        queryKey,\n                        pageParam,\n                        signal,\n                    },\n                },\n            });\n        },\n        {\n            ...queryOptions,\n            enabled:\n                typeof queryOptions?.enabled !== \"undefined\"\n                    ? queryOptions?.enabled\n                    : !!resource?.name,\n            select: (rawData) => {\n                let data = rawData;\n\n                const { current, mode, pageSize } = prefferedPagination;\n\n                if (mode === \"client\") {\n                    data = {\n                        ...data,\n                        data: data.data.slice(\n                            (current - 1) * pageSize,\n                            current * pageSize,\n                        ),\n                        total: data.total,\n                    };\n                }\n\n                if (queryOptions?.select) {\n                    return queryOptions?.select?.(data);\n                }\n\n                return data as unknown as GetListResponse<TData>;\n            },\n            onSuccess: (data) => {\n                queryOptions?.onSuccess?.(data);\n\n                const notificationConfig =\n                    typeof successNotification === \"function\"\n                        ? successNotification(\n                              data,\n                              notificationValues,\n                              identifier,\n                          )\n                        : successNotification;\n\n                handleNotification(notificationConfig);\n            },\n            onError: (err: TError) => {\n                checkError(err);\n                queryOptions?.onError?.(err);\n\n                const notificationConfig =\n                    typeof errorNotification === \"function\"\n                        ? errorNotification(err, notificationValues, identifier)\n                        : errorNotification;\n\n                handleNotification(notificationConfig, {\n                    key: `${identifier}-useList-notification`,\n                    message: translate(\n                        \"notifications.error\",\n                        { statusCode: err.statusCode },\n                        `Error (status code: ${err.statusCode})`,\n                    ),\n                    description: err.message,\n                    type: \"error\",\n                });\n            },\n            meta: {\n                ...queryOptions?.meta,\n                ...getXRay(\"useList\", preferLegacyKeys),\n            },\n        },\n    );\n\n    const { elapsedTime } = useLoadingOvertime({\n        isLoading: queryResponse.isFetching,\n        interval: overtimeOptions?.interval,\n        onInterval: overtimeOptions?.onInterval,\n    });\n\n    return { ...queryResponse, overtime: { elapsedTime } };\n};\n","import { useEffect, useState } from \"react\";\nimport { useRefineContext } from \"..\";\n\nexport type UseLoadingOvertimeRefineContext = Omit<\n    UseLoadingOvertimeCoreProps,\n    \"isLoading\" | \"interval\"\n> &\n    Required<Pick<UseLoadingOvertimeCoreProps, \"interval\">>;\n\nexport type UseLoadingOvertimeOptionsProps = {\n    overtimeOptions?: UseLoadingOvertimeCoreOptions;\n};\n\nexport type UseLoadingOvertimeReturnType = {\n    overtime: {\n        elapsedTime?: number;\n    };\n};\n\ntype UseLoadingOvertimeCoreOptions = Omit<\n    UseLoadingOvertimeCoreProps,\n    \"isLoading\"\n>;\n\ntype UseLoadingOvertimeCoreReturnType = {\n    elapsedTime?: number;\n};\n\nexport type UseLoadingOvertimeCoreProps = {\n    /**\n     * The loading state. If true, the elapsed time will be calculated.\n     */\n    isLoading: boolean;\n\n    /**\n     * The interval in milliseconds. If the loading time exceeds this time, the `onInterval` callback will be called.\n     * If not specified, the `interval` value from the `overtime` option of the `RefineProvider` will be used.\n     *\n     * @default: 1000 (1 second)\n     */\n    interval?: number;\n\n    /**\n     * The callback function that will be called when the loading time exceeds the specified time.\n     * If not specified, the `onInterval` value from the `overtime` option of the `RefineProvider` will be used.\n     *\n     * @param elapsedInterval The elapsed time in milliseconds.\n     */\n    onInterval?: (elapsedInterval: number) => void;\n};\n\n/**\n * if you need to do something when the loading time exceeds the specified time, refine provides the `useLoadingOvertime` hook.\n * It returns the elapsed time in milliseconds.\n *\n * @example\n * const { elapsedTime } = useLoadingOvertime({\n *    isLoading,\n *    interval: 1000,\n *    onInterval(elapsedInterval) {\n *        console.log(\"loading overtime\", elapsedInterval);\n *    },\n * });\n */\nexport const useLoadingOvertime = ({\n    isLoading,\n    interval: intervalProp,\n    onInterval: onIntervalProp,\n}: UseLoadingOvertimeCoreProps): UseLoadingOvertimeCoreReturnType => {\n    const [elapsedTime, setElapsedTime] = useState<number | undefined>(\n        undefined,\n    );\n    // get overtime options from refine context\n    const { options } = useRefineContext();\n    const { overtime } = options;\n\n    // pick props or refine context options\n    const interval = intervalProp ?? overtime.interval;\n    const onInterval = onIntervalProp ?? overtime?.onInterval;\n\n    useEffect(() => {\n        let intervalFn: ReturnType<typeof setInterval>;\n\n        if (isLoading) {\n            intervalFn = setInterval(() => {\n                // increase elapsed time\n                setElapsedTime((prevElapsedTime) => {\n                    if (prevElapsedTime === undefined) {\n                        return interval;\n                    }\n\n                    return prevElapsedTime + interval;\n                });\n            }, interval);\n        }\n\n        return () => {\n            clearInterval(intervalFn);\n            // reset elapsed time\n            setElapsedTime(undefined);\n        };\n    }, [isLoading, interval]);\n\n    useEffect(() => {\n        // call onInterval callback\n        if (onInterval && elapsedTime) {\n            onInterval(elapsedTime);\n        }\n    }, [elapsedTime]);\n\n    return {\n        elapsedTime,\n    };\n};\n","import { getXRay } from \"@refinedev/devtools-internal\";\nimport {\n    QueryObserverResult,\n    useQuery,\n    UseQueryOptions,\n} from \"@tanstack/react-query\";\n\nimport {\n    pickDataProvider,\n    pickNotDeprecated,\n    useActiveAuthProvider,\n} from \"@definitions\";\nimport {\n    useDataProvider,\n    useHandleNotification,\n    useMeta,\n    useOnError,\n    useResource,\n    useResourceSubscription,\n    useTranslate,\n} from \"@hooks\";\nimport { useKeys } from \"@hooks/useKeys\";\nimport {\n    BaseKey,\n    BaseRecord,\n    GetOneResponse,\n    HttpError,\n    LiveModeProps,\n    MetaQuery,\n    Prettify,\n    SuccessErrorNotification,\n} from \"../../interfaces\";\nimport {\n    useLoadingOvertime,\n    UseLoadingOvertimeOptionsProps,\n    UseLoadingOvertimeReturnType,\n} from \"../useLoadingOvertime\";\n\nexport type UseOneProps<TQueryFnData, TError, TData> = {\n    /**\n     * Resource name for API data interactions\n     */\n    resource?: string;\n    /**\n     * id of the item in the resource\n     * @type [`BaseKey`](/docs/api-reference/core/interfaceReferences/#basekey)\n     */\n    id?: BaseKey;\n    /**\n     * react-query's [useQuery](https://tanstack.com/query/v4/docs/reference/useQuery) options\n     */\n    queryOptions?: UseQueryOptions<\n        GetOneResponse<TQueryFnData>,\n        TError,\n        GetOneResponse<TData>\n    >;\n    /**\n     * Metadata query for `dataProvider`,\n     */\n    meta?: MetaQuery;\n    /**\n     * Meta data query for `dataProvider`,\n     * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n     */\n    metaData?: MetaQuery;\n    /**\n     * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use.\n     * @default `\"default\"``\n     */\n    dataProviderName?: string;\n} & SuccessErrorNotification<\n    GetOneResponse<TData>,\n    TError,\n    Prettify<{ id?: BaseKey } & MetaQuery>\n> &\n    LiveModeProps &\n    UseLoadingOvertimeOptionsProps;\n\n/**\n * `useOne` is a modified version of `react-query`'s {@link https://react-query.tanstack.com/guides/queries `useQuery`} used for retrieving single items from a `resource`.\n *\n * It uses `getOne` method as query function from the `dataProvider` which is passed to `<Refine>`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/data/useOne} for more details.\n *\n * @typeParam TQueryFnData - Result data returned by the query function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TData - Result data returned by the `select` function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}. Defaults to `TQueryFnData`\n *\n */\n\nexport const useOne = <\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TData extends BaseRecord = TQueryFnData,\n>({\n    resource: resourceFromProp,\n    id,\n    queryOptions,\n    successNotification,\n    errorNotification,\n    meta,\n    metaData,\n    liveMode,\n    onLiveEvent,\n    liveParams,\n    dataProviderName,\n    overtimeOptions,\n}: UseOneProps<TQueryFnData, TError, TData>): QueryObserverResult<\n    GetOneResponse<TData>\n> &\n    UseLoadingOvertimeReturnType => {\n    const { resources, resource, identifier } = useResource(resourceFromProp);\n\n    const dataProvider = useDataProvider();\n    const translate = useTranslate();\n    const authProvider = useActiveAuthProvider();\n    const { mutate: checkError } = useOnError({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n    const handleNotification = useHandleNotification();\n    const getMeta = useMeta();\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const preferredMeta = pickNotDeprecated(meta, metaData);\n    const pickedDataProvider = pickDataProvider(\n        identifier,\n        dataProviderName,\n        resources,\n    );\n\n    const { getOne } = dataProvider(pickedDataProvider);\n\n    const combinedMeta = getMeta({ resource, meta: preferredMeta });\n\n    useResourceSubscription({\n        resource: identifier,\n        types: [\"*\"],\n        channel: `resources/${resource?.name}`,\n        params: {\n            ids: id ? [id] : [],\n            id: id,\n            meta: combinedMeta,\n            metaData: combinedMeta,\n            subscriptionType: \"useOne\",\n            ...liveParams,\n        },\n        enabled:\n            typeof queryOptions?.enabled !== \"undefined\"\n                ? queryOptions?.enabled\n                : typeof resource?.name !== \"undefined\" &&\n                  typeof id !== \"undefined\",\n        liveMode,\n        onLiveEvent,\n        dataProviderName: pickedDataProvider,\n        meta: {\n            ...meta,\n            dataProviderName,\n        },\n    });\n\n    const queryResponse = useQuery<\n        GetOneResponse<TQueryFnData>,\n        TError,\n        GetOneResponse<TData>\n    >(\n        keys()\n            .data(pickedDataProvider)\n            .resource(identifier ?? \"\")\n            .action(\"one\")\n            .id(id ?? \"\")\n            .params({\n                ...(preferredMeta || {}),\n            })\n            .get(preferLegacyKeys),\n        ({ queryKey, pageParam, signal }) =>\n            getOne<TQueryFnData>({\n                resource: resource?.name ?? \"\",\n                id: id!,\n                meta: {\n                    ...combinedMeta,\n                    queryContext: {\n                        queryKey,\n                        pageParam,\n                        signal,\n                    },\n                },\n                metaData: {\n                    ...combinedMeta,\n                    queryContext: {\n                        queryKey,\n                        pageParam,\n                        signal,\n                    },\n                },\n            }),\n        {\n            ...queryOptions,\n            enabled:\n                typeof queryOptions?.enabled !== \"undefined\"\n                    ? queryOptions?.enabled\n                    : typeof id !== \"undefined\",\n            onSuccess: (data) => {\n                queryOptions?.onSuccess?.(data);\n\n                const notificationConfig =\n                    typeof successNotification === \"function\"\n                        ? successNotification(\n                              data,\n                              {\n                                  id,\n                                  ...combinedMeta,\n                              },\n                              identifier,\n                          )\n                        : successNotification;\n\n                handleNotification(notificationConfig);\n            },\n            onError: (err: TError) => {\n                checkError(err);\n                queryOptions?.onError?.(err);\n\n                const notificationConfig =\n                    typeof errorNotification === \"function\"\n                        ? errorNotification(\n                              err,\n                              {\n                                  id,\n                                  ...combinedMeta,\n                              },\n                              identifier,\n                          )\n                        : errorNotification;\n\n                handleNotification(notificationConfig, {\n                    key: `${id}-${identifier}-getOne-notification`,\n                    message: translate(\n                        \"notifications.error\",\n                        { statusCode: err.statusCode },\n                        `Error (status code: ${err.statusCode})`,\n                    ),\n                    description: err.message,\n                    type: \"error\",\n                });\n            },\n            meta: {\n                ...queryOptions?.meta,\n                ...getXRay(\"useOne\", preferLegacyKeys),\n            },\n        },\n    );\n\n    const { elapsedTime } = useLoadingOvertime({\n        isLoading: queryResponse.isFetching,\n        interval: overtimeOptions?.interval,\n        onInterval: overtimeOptions?.onInterval,\n    });\n\n    return { ...queryResponse, overtime: { elapsedTime } };\n};\n","import { getXRay } from \"@refinedev/devtools-internal\";\nimport {\n    QueryObserverResult,\n    useQuery,\n    UseQueryOptions,\n} from \"@tanstack/react-query\";\n\nimport {\n    handleMultiple,\n    pickDataProvider,\n    pickNotDeprecated,\n    useActiveAuthProvider,\n} from \"@definitions/helpers\";\nimport {\n    useDataProvider,\n    useHandleNotification,\n    useMeta,\n    useOnError,\n    useResource,\n    useResourceSubscription,\n    useTranslate,\n} from \"@hooks\";\nimport { useKeys } from \"@hooks/useKeys\";\nimport {\n    BaseKey,\n    BaseRecord,\n    GetManyResponse,\n    HttpError,\n    LiveModeProps,\n    MetaQuery,\n    SuccessErrorNotification,\n} from \"../../interfaces\";\nimport {\n    useLoadingOvertime,\n    UseLoadingOvertimeOptionsProps,\n    UseLoadingOvertimeReturnType,\n} from \"../useLoadingOvertime\";\n\nexport type UseManyProps<TQueryFnData, TError, TData> = {\n    /**\n     * Resource name for API data interactions\n     */\n    resource: string;\n    /**\n     * ids of the item in the resource\n     * @type [`BaseKey[]`](/docs/api-reference/core/interfaceReferences/#basekey)\n     */\n    ids: BaseKey[];\n    /**\n     * react-query's [useQuery](https://tanstack.com/query/v4/docs/reference/useQuery) options\n     */\n    queryOptions?: UseQueryOptions<\n        GetManyResponse<TQueryFnData>,\n        TError,\n        GetManyResponse<TData>\n    >;\n    /**\n     * Metadata query for `dataProvider`,\n     */\n    meta?: MetaQuery;\n    /**\n     * Metadata query for `dataProvider`,\n     * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n     */\n    metaData?: MetaQuery;\n    /**\n     * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use.\n     * @default \"default\"\n     */\n    dataProviderName?: string;\n} & SuccessErrorNotification<GetManyResponse<TData>, TError, BaseKey[]> &\n    LiveModeProps &\n    UseLoadingOvertimeOptionsProps;\n\n/**\n * `useMany` is a modified version of `react-query`'s {@link https://react-query.tanstack.com/guides/queries `useQuery`} used for retrieving multiple items from a `resource`.\n *\n * It uses `getMany` method as query function from the `dataProvider` which is passed to `<Refine>`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/data/useMany} for more details.\n *\n * @typeParam TQueryFnData - Result data returned by the query function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TData - Result data returned by the `select` function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}. Defaults to `TQueryFnData`\n *\n */\n\nexport const useMany = <\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TData extends BaseRecord = TQueryFnData,\n>({\n    resource: resourceFromProp,\n    ids,\n    queryOptions,\n    successNotification,\n    errorNotification,\n    meta,\n    metaData,\n    liveMode,\n    onLiveEvent,\n    liveParams,\n    dataProviderName,\n    overtimeOptions,\n}: UseManyProps<TQueryFnData, TError, TData>): QueryObserverResult<\n    GetManyResponse<TData>\n> &\n    UseLoadingOvertimeReturnType => {\n    const { resources, resource, identifier } = useResource(resourceFromProp);\n    const dataProvider = useDataProvider();\n    const translate = useTranslate();\n    const authProvider = useActiveAuthProvider();\n    const { mutate: checkError } = useOnError({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n    const handleNotification = useHandleNotification();\n    const getMeta = useMeta();\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const preferredMeta = pickNotDeprecated(meta, metaData);\n    const pickedDataProvider = pickDataProvider(\n        identifier,\n        dataProviderName,\n        resources,\n    );\n    const isEnabled =\n        queryOptions?.enabled === undefined || queryOptions?.enabled === true;\n\n    const { getMany, getOne } = dataProvider(pickedDataProvider);\n\n    const combinedMeta = getMeta({ resource, meta: preferredMeta });\n\n    useResourceSubscription({\n        resource: identifier,\n        types: [\"*\"],\n        params: {\n            ids: ids,\n            meta: combinedMeta,\n            metaData: combinedMeta,\n            subscriptionType: \"useMany\",\n            ...liveParams,\n        },\n        channel: `resources/${resource.name}`,\n        enabled: isEnabled,\n        liveMode,\n        onLiveEvent,\n        dataProviderName: pickedDataProvider,\n        meta: {\n            ...meta,\n            dataProviderName,\n        },\n    });\n\n    const queryResponse = useQuery<\n        GetManyResponse<TQueryFnData>,\n        TError,\n        GetManyResponse<TData>\n    >(\n        keys()\n            .data(pickedDataProvider)\n            .resource(identifier)\n            .action(\"many\")\n            .ids(...ids)\n            .params({\n                ...(preferredMeta || {}),\n            })\n            .get(preferLegacyKeys),\n        ({ queryKey, pageParam, signal }) => {\n            if (getMany) {\n                return getMany({\n                    resource: resource?.name,\n                    ids,\n                    meta: {\n                        ...combinedMeta,\n                        queryContext: {\n                            queryKey,\n                            pageParam,\n                            signal,\n                        },\n                    },\n                    metaData: {\n                        ...combinedMeta,\n                        queryContext: {\n                            queryKey,\n                            pageParam,\n                            signal,\n                        },\n                    },\n                });\n            } else {\n                return handleMultiple(\n                    ids.map((id) =>\n                        getOne<TQueryFnData>({\n                            resource: resource?.name,\n                            id,\n                            meta: {\n                                ...combinedMeta,\n                                queryContext: {\n                                    queryKey,\n                                    pageParam,\n                                    signal,\n                                },\n                            },\n                            metaData: {\n                                ...combinedMeta,\n                                queryContext: {\n                                    queryKey,\n                                    pageParam,\n                                    signal,\n                                },\n                            },\n                        }),\n                    ),\n                );\n            }\n        },\n        {\n            ...queryOptions,\n            onSuccess: (data) => {\n                queryOptions?.onSuccess?.(data);\n\n                const notificationConfig =\n                    typeof successNotification === \"function\"\n                        ? successNotification(data, ids, identifier)\n                        : successNotification;\n\n                handleNotification(notificationConfig);\n            },\n            onError: (err: TError) => {\n                checkError(err);\n                queryOptions?.onError?.(err);\n\n                const notificationConfig =\n                    typeof errorNotification === \"function\"\n                        ? errorNotification(err, ids, identifier)\n                        : errorNotification;\n\n                handleNotification(notificationConfig, {\n                    key: `${ids[0]}-${identifier}-getMany-notification`,\n                    message: translate(\n                        \"notifications.error\",\n                        { statusCode: err.statusCode },\n                        `Error (status code: ${err.statusCode})`,\n                    ),\n                    description: err.message,\n                    type: \"error\",\n                });\n            },\n            meta: {\n                ...queryOptions?.meta,\n                ...getXRay(\"useMany\", preferLegacyKeys),\n            },\n        },\n    );\n\n    const { elapsedTime } = useLoadingOvertime({\n        isLoading: queryResponse.isFetching,\n        interval: overtimeOptions?.interval,\n        onInterval: overtimeOptions?.onInterval,\n    });\n\n    return { ...queryResponse, overtime: { elapsedTime } };\n};\n","import { getXRay } from \"@refinedev/devtools-internal\";\nimport {\n    useMutation,\n    UseMutationOptions,\n    UseMutationResult,\n    useQueryClient,\n} from \"@tanstack/react-query\";\n\nimport { ActionTypes } from \"@contexts/undoableQueue\";\nimport {\n    pickDataProvider,\n    pickNotDeprecated,\n    queryKeysReplacement,\n    useActiveAuthProvider,\n} from \"@definitions/helpers\";\nimport {\n    useCancelNotification,\n    useDataProvider,\n    useHandleNotification,\n    useInvalidate,\n    useLog,\n    useMeta,\n    useMutationMode,\n    useOnError,\n    usePublish,\n    useRefineContext,\n    useResource,\n    useTranslate,\n} from \"@hooks\";\nimport { useKeys } from \"@hooks/useKeys\";\nimport {\n    BaseKey,\n    BaseRecord,\n    GetListResponse,\n    GetManyResponse,\n    GetOneResponse,\n    HttpError,\n    IQueryKeys,\n    MetaQuery,\n    MutationMode,\n    OptimisticUpdateMapType,\n    PrevContext as UpdateContext,\n    PreviousQuery,\n    SuccessErrorNotification,\n    UpdateResponse,\n} from \"../../interfaces\";\nimport {\n    useLoadingOvertime,\n    UseLoadingOvertimeOptionsProps,\n    UseLoadingOvertimeReturnType,\n} from \"../useLoadingOvertime\";\n\nexport type UpdateParams<TData, TError, TVariables> = {\n    /**\n     * Resource name for API data interactions\n     */\n    resource: string;\n    /**\n     * id for mutation function\n     */\n    id: BaseKey;\n    /**\n     * [Determines when mutations are executed](/advanced-tutorials/mutation-mode.md)\n     */\n    mutationMode?: MutationMode;\n    /**\n     * Duration in ms to wait before executing the mutation when `mutationMode = \"undoable\"`\n     */\n    undoableTimeout?: number;\n    /**\n     * Provides a function to cancel the mutation when `mutationMode = \"undoable\"`\n     */\n    onCancel?: (cancelMutation: () => void) => void;\n    /**\n     * Values for mutation function\n     */\n    values: TVariables;\n    /**\n     * Metadata query for dataProvider\n     */\n    meta?: MetaQuery;\n    /**\n     * Metadata query for dataProvider\n     * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n     */\n    metaData?: MetaQuery;\n    /**\n     * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use.\n     * @default \"default\"\n     */\n    dataProviderName?: string;\n    /**\n     *  You can use it to manage the invalidations that will occur at the end of the mutation.\n     */\n    invalidates?: Array<keyof IQueryKeys>;\n    /**\n     * You can use it to customize the optimistic update logic.\n     * @default {\n     *   list: true,\n     *   many: true,\n     *   detail: true,\n     * }\n     */\n    optimisticUpdateMap?: OptimisticUpdateMapType<TData, TVariables>;\n} & SuccessErrorNotification<\n    UpdateResponse<TData>,\n    TError,\n    { id: BaseKey; values: TVariables }\n>;\n\nexport type UseUpdateReturnType<\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n> = UseMutationResult<\n    UpdateResponse<TData>,\n    TError,\n    UpdateParams<TData, TError, TVariables>,\n    UpdateContext<TData>\n> &\n    UseLoadingOvertimeReturnType;\n\nexport type UseUpdateProps<\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n> = {\n    mutationOptions?: Omit<\n        UseMutationOptions<\n            UpdateResponse<TData>,\n            TError,\n            UpdateParams<TData, TError, TVariables>,\n            UpdateContext<TData>\n        >,\n        \"mutationFn\" | \"onError\" | \"onSuccess\" | \"onSettled\" | \"onMutate\"\n    >;\n} & UseLoadingOvertimeOptionsProps;\n\n/**\n * `useUpdate` is a modified version of `react-query`'s {@link https://react-query.tanstack.com/reference/useMutation `useMutation`} for update mutations.\n *\n * It uses `update` method as mutation function from the `dataProvider` which is passed to `<Refine>`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/data/useUpdate} for more details.\n *\n * @typeParam TData - Result data of the query extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences/#httperror `HttpError`}\n * @typeParam TVariables - Values for mutation function\n *\n */\nexport const useUpdate = <\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n>({\n    mutationOptions,\n    overtimeOptions,\n}: UseUpdateProps<TData, TError, TVariables> = {}): UseUpdateReturnType<\n    TData,\n    TError,\n    TVariables\n> => {\n    const { resources, select } = useResource();\n    const queryClient = useQueryClient();\n    const dataProvider = useDataProvider();\n\n    const {\n        mutationMode: mutationModeContext,\n        undoableTimeout: undoableTimeoutContext,\n    } = useMutationMode();\n    const translate = useTranslate();\n    const authProvider = useActiveAuthProvider();\n    const { mutate: checkError } = useOnError({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n    const publish = usePublish();\n    const { log } = useLog();\n    const { notificationDispatch } = useCancelNotification();\n    const handleNotification = useHandleNotification();\n    const invalidateStore = useInvalidate();\n    const getMeta = useMeta();\n    const {\n        options: { textTransformers },\n    } = useRefineContext();\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const mutation = useMutation<\n        UpdateResponse<TData>,\n        TError,\n        UpdateParams<TData, TError, TVariables>,\n        UpdateContext<TData>\n    >(\n        ({\n            id,\n            values,\n            resource: resourceName,\n            mutationMode,\n            undoableTimeout,\n            onCancel,\n            meta,\n            metaData,\n            dataProviderName,\n        }) => {\n            const { resource, identifier } = select(resourceName);\n\n            const combinedMeta = getMeta({\n                resource,\n                meta: pickNotDeprecated(meta, metaData),\n            });\n\n            const mutationModePropOrContext =\n                mutationMode ?? mutationModeContext;\n\n            const undoableTimeoutPropOrContext =\n                undoableTimeout ?? undoableTimeoutContext;\n\n            if (!(mutationModePropOrContext === \"undoable\")) {\n                return dataProvider(\n                    pickDataProvider(identifier, dataProviderName, resources),\n                ).update<TData, TVariables>({\n                    resource: resource.name,\n                    id,\n                    variables: values,\n                    meta: combinedMeta,\n                    metaData: combinedMeta,\n                });\n            }\n            const updatePromise = new Promise<UpdateResponse<TData>>(\n                (resolve, reject) => {\n                    const doMutation = () => {\n                        dataProvider(\n                            pickDataProvider(\n                                identifier,\n                                dataProviderName,\n                                resources,\n                            ),\n                        )\n                            .update<TData, TVariables>({\n                                resource: resource.name,\n                                id,\n                                variables: values,\n                                meta: combinedMeta,\n                                metaData: combinedMeta,\n                            })\n                            .then((result) => resolve(result))\n                            .catch((err) => reject(err));\n                    };\n\n                    const cancelMutation = () => {\n                        reject({ message: \"mutationCancelled\" });\n                    };\n\n                    if (onCancel) {\n                        onCancel(cancelMutation);\n                    }\n\n                    notificationDispatch({\n                        type: ActionTypes.ADD,\n                        payload: {\n                            id: id,\n                            resource: identifier,\n                            cancelMutation: cancelMutation,\n                            doMutation: doMutation,\n                            seconds: undoableTimeoutPropOrContext,\n                            isSilent: !!onCancel,\n                        },\n                    });\n                },\n            );\n            return updatePromise;\n        },\n        {\n            onMutate: async ({\n                resource: resourceName,\n                id,\n                mutationMode,\n                values,\n                dataProviderName,\n                meta,\n                metaData,\n                optimisticUpdateMap = { list: true, many: true, detail: true },\n            }) => {\n                const { identifier } = select(resourceName);\n\n                const preferredMeta = pickNotDeprecated(meta, metaData);\n\n                const queryKey = queryKeysReplacement(preferLegacyKeys)(\n                    identifier,\n                    pickDataProvider(identifier, dataProviderName, resources),\n                    preferredMeta,\n                );\n\n                const resourceKeys = keys()\n                    .data(\n                        pickDataProvider(\n                            identifier,\n                            dataProviderName,\n                            resources,\n                        ),\n                    )\n                    .resource(identifier);\n\n                const previousQueries: PreviousQuery<TData>[] =\n                    queryClient.getQueriesData(\n                        resourceKeys.get(preferLegacyKeys),\n                    );\n\n                const mutationModePropOrContext =\n                    mutationMode ?? mutationModeContext;\n\n                await queryClient.cancelQueries(\n                    resourceKeys.get(preferLegacyKeys),\n                    undefined,\n                    {\n                        silent: true,\n                    },\n                );\n\n                if (mutationModePropOrContext !== \"pessimistic\") {\n                    if (optimisticUpdateMap.list) {\n                        // Set the previous queries to the new ones:\n                        queryClient.setQueriesData(\n                            resourceKeys\n                                .action(\"list\")\n                                .params(preferredMeta ?? {})\n                                .get(preferLegacyKeys),\n                            (previous?: GetListResponse<TData> | null) => {\n                                if (\n                                    typeof optimisticUpdateMap.list ===\n                                    \"function\"\n                                ) {\n                                    return optimisticUpdateMap.list(\n                                        previous,\n                                        values,\n                                        id,\n                                    );\n                                }\n\n                                if (!previous) {\n                                    return null;\n                                }\n\n                                const data = previous.data.map(\n                                    (record: TData) => {\n                                        if (\n                                            record.id?.toString() ===\n                                            id?.toString()\n                                        ) {\n                                            return {\n                                                id,\n                                                ...record,\n                                                ...values,\n                                            } as unknown as TData;\n                                        }\n                                        return record;\n                                    },\n                                );\n\n                                return {\n                                    ...previous,\n                                    data,\n                                };\n                            },\n                        );\n                    }\n\n                    if (optimisticUpdateMap.many) {\n                        queryClient.setQueriesData(\n                            resourceKeys.action(\"many\").get(preferLegacyKeys),\n                            (previous?: GetManyResponse<TData> | null) => {\n                                if (\n                                    typeof optimisticUpdateMap.many ===\n                                    \"function\"\n                                ) {\n                                    return optimisticUpdateMap.many(\n                                        previous,\n                                        values,\n                                        id,\n                                    );\n                                }\n\n                                if (!previous) {\n                                    return null;\n                                }\n\n                                const data = previous.data.map(\n                                    (record: TData) => {\n                                        if (\n                                            record.id?.toString() ===\n                                            id?.toString()\n                                        ) {\n                                            record = {\n                                                id,\n                                                ...record,\n                                                ...values,\n                                            } as unknown as TData;\n                                        }\n                                        return record;\n                                    },\n                                );\n                                return {\n                                    ...previous,\n                                    data,\n                                };\n                            },\n                        );\n                    }\n\n                    if (optimisticUpdateMap.detail) {\n                        queryClient.setQueriesData(\n                            resourceKeys\n                                .action(\"one\")\n                                .id(id)\n                                .params(preferredMeta ?? {})\n                                .get(preferLegacyKeys),\n                            (previous?: GetOneResponse<TData> | null) => {\n                                if (\n                                    typeof optimisticUpdateMap.detail ===\n                                    \"function\"\n                                ) {\n                                    return optimisticUpdateMap.detail(\n                                        previous,\n                                        values,\n                                        id,\n                                    );\n                                }\n\n                                if (!previous) {\n                                    return null;\n                                }\n\n                                return {\n                                    ...previous,\n                                    data: {\n                                        ...previous.data,\n                                        ...values,\n                                    },\n                                };\n                            },\n                        );\n                    }\n                }\n\n                return {\n                    previousQueries,\n                    queryKey,\n                };\n            },\n            onSettled: (\n                _data,\n                _error,\n                {\n                    id,\n                    resource: resourceName,\n                    dataProviderName,\n                    invalidates = [\"list\", \"many\", \"detail\"],\n                },\n            ) => {\n                const { identifier } = select(resourceName);\n\n                invalidateStore({\n                    resource: identifier,\n                    dataProviderName: pickDataProvider(\n                        identifier,\n                        dataProviderName,\n                        resources,\n                    ),\n                    invalidates,\n                    id,\n                });\n\n                notificationDispatch({\n                    type: ActionTypes.REMOVE,\n                    payload: { id, resource: identifier },\n                });\n            },\n            onSuccess: (\n                data,\n                {\n                    id,\n                    resource: resourceName,\n                    successNotification,\n                    dataProviderName: dataProviderNameFromProp,\n                    values,\n                    meta,\n                    metaData,\n                },\n                context,\n            ) => {\n                const { resource, identifier } = select(resourceName);\n                const resourceSingular = textTransformers.singular(identifier);\n\n                const dataProviderName = pickDataProvider(\n                    identifier,\n                    dataProviderNameFromProp,\n                    resources,\n                );\n\n                const combinedMeta = getMeta({\n                    resource,\n                    meta: pickNotDeprecated(meta, metaData),\n                });\n\n                const notificationConfig =\n                    typeof successNotification === \"function\"\n                        ? successNotification(data, { id, values }, identifier)\n                        : successNotification;\n\n                handleNotification(notificationConfig, {\n                    key: `${id}-${identifier}-notification`,\n                    description: translate(\n                        \"notifications.success\",\n                        \"Successful\",\n                    ),\n                    message: translate(\n                        \"notifications.editSuccess\",\n                        {\n                            resource: translate(\n                                `${identifier}.${identifier}`,\n                                resourceSingular,\n                            ),\n                        },\n                        `Successfully updated ${resourceSingular}`,\n                    ),\n                    type: \"success\",\n                });\n\n                publish?.({\n                    channel: `resources/${resource.name}`,\n                    type: \"updated\",\n                    payload: {\n                        ids: data.data?.id ? [data.data.id] : undefined,\n                    },\n                    date: new Date(),\n                    meta: {\n                        ...combinedMeta,\n                        dataProviderName,\n                    },\n                });\n\n                let previousData: any;\n                if (context) {\n                    const queryData = queryClient.getQueryData<\n                        UpdateResponse<TData>\n                    >(context.queryKey.detail(id));\n\n                    previousData = Object.keys(values || {}).reduce<any>(\n                        (acc, item) => {\n                            acc[item] = queryData?.data?.[item];\n                            return acc;\n                        },\n                        {},\n                    );\n                }\n\n                const {\n                    fields: _fields,\n                    operation: _operation,\n                    variables: _variables,\n                    ...rest\n                } = combinedMeta || {};\n                log?.mutate({\n                    action: \"update\",\n                    resource: resource.name,\n                    data: values,\n                    previousData,\n                    meta: {\n                        id,\n                        dataProviderName,\n                        ...rest,\n                    },\n                });\n            },\n            onError: (\n                err: TError,\n                { id, resource: resourceName, errorNotification, values },\n                context,\n            ) => {\n                const { identifier } = select(resourceName);\n\n                // set back the queries to the context:\n                if (context) {\n                    for (const query of context.previousQueries) {\n                        queryClient.setQueryData(query[0], query[1]);\n                    }\n                }\n\n                if (err.message !== \"mutationCancelled\") {\n                    checkError?.(err);\n\n                    const resourceSingular =\n                        textTransformers.singular(identifier);\n\n                    const notificationConfig =\n                        typeof errorNotification === \"function\"\n                            ? errorNotification(err, { id, values }, identifier)\n                            : errorNotification;\n\n                    handleNotification(notificationConfig, {\n                        key: `${id}-${identifier}-notification`,\n                        message: translate(\n                            \"notifications.editError\",\n                            {\n                                resource: translate(\n                                    `${identifier}.${identifier}`,\n                                    resourceSingular,\n                                ),\n                                statusCode: err.statusCode,\n                            },\n                            `Error when updating ${resourceSingular} (status code: ${err.statusCode})`,\n                        ),\n                        description: err.message,\n                        type: \"error\",\n                    });\n                }\n            },\n            mutationKey: keys().data().mutation(\"update\").get(preferLegacyKeys),\n            ...mutationOptions,\n            meta: {\n                ...mutationOptions?.meta,\n                ...getXRay(\"useUpdate\", preferLegacyKeys),\n            },\n        },\n    );\n\n    const { elapsedTime } = useLoadingOvertime({\n        isLoading: mutation.isLoading,\n        interval: overtimeOptions?.interval,\n        onInterval: overtimeOptions?.onInterval,\n    });\n\n    return { ...mutation, overtime: { elapsedTime } };\n};\n","import React, { ReactNode, useReducer } from \"react\";\nimport isEqual from \"lodash/isEqual\";\n\nimport { UndoableQueue } from \"@components\";\n\nimport { IUndoableQueue, IUndoableQueueContext } from \"../../interfaces\";\nimport { ActionTypes } from \"./actionTypes\";\n\nexport const UndoableQueueContext = React.createContext<IUndoableQueueContext>({\n    notifications: [],\n    notificationDispatch: () => false,\n});\n\nconst initialState: IUndoableQueue[] = [];\n\nexport const undoableQueueReducer = (state: IUndoableQueue[], action: any) => {\n    switch (action.type) {\n        case ActionTypes.ADD:\n            const newState = state.filter(\n                (notificationItem: IUndoableQueue) => {\n                    return !(\n                        isEqual(notificationItem.id, action.payload.id) &&\n                        notificationItem.resource == action.payload.resource\n                    );\n                },\n            );\n\n            return [\n                ...newState,\n                {\n                    ...action.payload,\n                    isRunning: true,\n                },\n            ];\n        case ActionTypes.REMOVE:\n            return state.filter(\n                (notificationItem: IUndoableQueue) =>\n                    !(\n                        isEqual(notificationItem.id, action.payload.id) &&\n                        notificationItem.resource == action.payload.resource\n                    ),\n            );\n        case ActionTypes.DECREASE_NOTIFICATION_SECOND:\n            return state.map((notificationItem: IUndoableQueue) => {\n                if (\n                    isEqual(notificationItem.id, action.payload.id) &&\n                    notificationItem.resource == action.payload.resource\n                ) {\n                    return {\n                        ...notificationItem,\n                        seconds: action.payload.seconds - 1000,\n                    };\n                }\n                return notificationItem;\n            });\n        default:\n            return state;\n    }\n};\n\nexport const UndoableQueueContextProvider: React.FC<{\n    children: ReactNode;\n}> = ({ children }) => {\n    const [notifications, notificationDispatch] = useReducer(\n        undoableQueueReducer,\n        initialState,\n    );\n\n    const notificationData = { notifications, notificationDispatch };\n\n    return (\n        <UndoableQueueContext.Provider value={notificationData}>\n            {children}\n            {typeof window !== \"undefined\" &&\n                notifications.map((notification) => (\n                    <UndoableQueue\n                        key={`${notification.id}-${notification.resource}-queue`}\n                        notification={notification}\n                    />\n                ))}\n        </UndoableQueueContext.Provider>\n    );\n};\n","import {\n    pickDataProvider,\n    pickNotDeprecated,\n    useActiveAuthProvider,\n} from \"@definitions/helpers\";\nimport { getXRay } from \"@refinedev/devtools-internal\";\nimport {\n    useMutation,\n    UseMutationOptions,\n    UseMutationResult,\n} from \"@tanstack/react-query\";\n\nimport {\n    useDataProvider,\n    useHandleNotification,\n    useInvalidate,\n    useLog,\n    useMeta,\n    useOnError,\n    usePublish,\n    useRefineContext,\n    useResource,\n    useTranslate,\n} from \"@hooks\";\nimport { useKeys } from \"@hooks/useKeys\";\nimport {\n    BaseRecord,\n    CreateResponse,\n    HttpError,\n    IQueryKeys,\n    MetaQuery,\n    SuccessErrorNotification,\n} from \"../../interfaces\";\nimport {\n    useLoadingOvertime,\n    UseLoadingOvertimeOptionsProps,\n    UseLoadingOvertimeReturnType,\n} from \"../useLoadingOvertime\";\n\ntype useCreateParams<TData, TError, TVariables> = {\n    /**\n     * Resource name for API data interactions\n     */\n    resource: string;\n    /**\n     * Values for mutation function\n     */\n    values: TVariables;\n    /**\n     * Meta data for `dataProvider`\n     */\n    meta?: MetaQuery;\n    /**\n     * Meta data for `dataProvider`\n     * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n     */\n    metaData?: MetaQuery;\n    /**\n     * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use.\n     */\n    dataProviderName?: string;\n    /**\n     * You can use it to manage the invalidations that will occur at the end of the mutation.\n     */\n    invalidates?: Array<keyof IQueryKeys>;\n} & SuccessErrorNotification<CreateResponse<TData>, TError, TVariables>;\n\nexport type UseCreateReturnType<\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n> = UseMutationResult<\n    CreateResponse<TData>,\n    TError,\n    useCreateParams<TData, TError, TVariables>,\n    unknown\n>;\n\nexport type UseCreateProps<\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n> = {\n    mutationOptions?: Omit<\n        UseMutationOptions<\n            CreateResponse<TData>,\n            TError,\n            useCreateParams<TData, TError, TVariables>,\n            unknown\n        >,\n        \"mutationFn\" | \"onError\" | \"onSuccess\"\n    >;\n} & UseLoadingOvertimeOptionsProps;\n\n/**\n * `useCreate` is a modified version of `react-query`'s {@link https://react-query.tanstack.com/reference/useMutation `useMutation`} for create mutations.\n *\n * It uses `create` method as mutation function from the `dataProvider` which is passed to `<Refine>`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/data/useCreate} for more details.\n *\n * @typeParam TData - Result data of the query extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences/#httperror `HttpError`}\n * @typeParam TVariables - Values for mutation function\n *\n */\n\nexport const useCreate = <\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n>({\n    mutationOptions,\n    overtimeOptions,\n}: UseCreateProps<TData, TError, TVariables> = {}): UseCreateReturnType<\n    TData,\n    TError,\n    TVariables\n> &\n    UseLoadingOvertimeReturnType => {\n    const authProvider = useActiveAuthProvider();\n    const { mutate: checkError } = useOnError({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n    const dataProvider = useDataProvider();\n    const invalidateStore = useInvalidate();\n    const { resources, select } = useResource();\n    const translate = useTranslate();\n    const publish = usePublish();\n    const { log } = useLog();\n    const handleNotification = useHandleNotification();\n    const getMeta = useMeta();\n    const {\n        options: { textTransformers },\n    } = useRefineContext();\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const mutation = useMutation<\n        CreateResponse<TData>,\n        TError,\n        useCreateParams<TData, TError, TVariables>,\n        unknown\n    >(\n        ({\n            resource: resourceName,\n            values,\n            meta,\n            metaData,\n            dataProviderName,\n        }: useCreateParams<TData, TError, TVariables>) => {\n            const { resource, identifier } = select(resourceName);\n\n            const combinedMeta = getMeta({\n                resource,\n                meta: pickNotDeprecated(meta, metaData),\n            });\n\n            return dataProvider(\n                pickDataProvider(identifier, dataProviderName, resources),\n            ).create<TData, TVariables>({\n                resource: resource.name,\n                variables: values,\n                meta: combinedMeta,\n                metaData: combinedMeta,\n            });\n        },\n        {\n            onSuccess: (\n                data,\n                {\n                    resource: resourceName,\n                    successNotification: successNotificationFromProp,\n                    dataProviderName: dataProviderNameFromProp,\n                    invalidates = [\"list\", \"many\"],\n                    values,\n                    meta,\n                    metaData,\n                },\n            ) => {\n                const { resource, identifier } = select(resourceName);\n                const resourceSingular = textTransformers.singular(identifier);\n\n                const dataProviderName = pickDataProvider(\n                    identifier,\n                    dataProviderNameFromProp,\n                    resources,\n                );\n\n                const combinedMeta = getMeta({\n                    resource,\n                    meta: pickNotDeprecated(meta, metaData),\n                });\n\n                const notificationConfig =\n                    typeof successNotificationFromProp === \"function\"\n                        ? successNotificationFromProp(data, values, identifier)\n                        : successNotificationFromProp;\n\n                handleNotification(notificationConfig, {\n                    key: `create-${identifier}-notification`,\n                    message: translate(\n                        \"notifications.createSuccess\",\n                        {\n                            resource: translate(\n                                `${identifier}.${identifier}`,\n                                resourceSingular,\n                            ),\n                        },\n                        `Successfully created ${resourceSingular}`,\n                    ),\n                    description: translate(\"notifications.success\", \"Success\"),\n                    type: \"success\",\n                });\n\n                invalidateStore({\n                    resource: identifier,\n                    dataProviderName,\n                    invalidates,\n                });\n\n                publish?.({\n                    channel: `resources/${resource.name}`,\n                    type: \"created\",\n                    payload: {\n                        ids: data?.data?.id ? [data.data.id] : undefined,\n                    },\n                    date: new Date(),\n                    meta: {\n                        ...combinedMeta,\n                        dataProviderName,\n                    },\n                });\n\n                const {\n                    fields: _fields,\n                    operation: _operation,\n                    variables: _variables,\n                    ...rest\n                } = combinedMeta || {};\n                log?.mutate({\n                    action: \"create\",\n                    resource: resource.name,\n                    data: values,\n                    meta: {\n                        dataProviderName,\n                        id: data?.data?.id ?? undefined,\n                        ...rest,\n                    },\n                });\n            },\n            onError: (\n                err: TError,\n                {\n                    resource: resourceName,\n                    errorNotification: errorNotificationFromProp,\n                    values,\n                },\n            ) => {\n                checkError(err);\n\n                const { identifier } = select(resourceName);\n\n                const resourceSingular = textTransformers.singular(identifier);\n\n                const notificationConfig =\n                    typeof errorNotificationFromProp === \"function\"\n                        ? errorNotificationFromProp(err, values, identifier)\n                        : errorNotificationFromProp;\n\n                handleNotification(notificationConfig, {\n                    key: `create-${identifier}-notification`,\n                    description: err.message,\n                    message: translate(\n                        \"notifications.createError\",\n                        {\n                            resource: translate(\n                                `${identifier}.${identifier}`,\n                                resourceSingular,\n                            ),\n                            statusCode: err.statusCode,\n                        },\n                        `There was an error creating ${resourceSingular} (status code: ${err.statusCode})`,\n                    ),\n                    type: \"error\",\n                });\n            },\n            mutationKey: keys().data().mutation(\"create\").get(preferLegacyKeys),\n            ...mutationOptions,\n            meta: {\n                ...mutationOptions?.meta,\n                ...getXRay(\"useCreate\", preferLegacyKeys),\n            },\n        },\n    );\n\n    const { elapsedTime } = useLoadingOvertime({\n        isLoading: mutation.isLoading,\n        interval: overtimeOptions?.interval,\n        onInterval: overtimeOptions?.onInterval,\n    });\n\n    return { ...mutation, overtime: { elapsedTime } };\n};\n","import { getXRay } from \"@refinedev/devtools-internal\";\nimport {\n    useMutation,\n    UseMutationOptions,\n    UseMutationResult,\n    useQueryClient,\n} from \"@tanstack/react-query\";\n\nimport { ActionTypes } from \"@contexts/undoableQueue\";\nimport {\n    pickDataProvider,\n    pickNotDeprecated,\n    queryKeysReplacement,\n    useActiveAuthProvider,\n} from \"@definitions/helpers\";\nimport {\n    useCancelNotification,\n    useDataProvider,\n    useHandleNotification,\n    useInvalidate,\n    useLog,\n    useMeta,\n    useMutationMode,\n    useOnError,\n    usePublish,\n    useRefineContext,\n    useResource,\n    useTranslate,\n} from \"@hooks\";\nimport { useKeys } from \"@hooks/useKeys\";\nimport {\n    BaseKey,\n    BaseRecord,\n    DeleteOneResponse,\n    GetListResponse,\n    HttpError,\n    IQueryKeys,\n    MetaQuery,\n    MutationMode,\n    PrevContext as DeleteContext,\n    PreviousQuery,\n    SuccessErrorNotification,\n} from \"../../interfaces\";\nimport {\n    useLoadingOvertime,\n    UseLoadingOvertimeOptionsProps,\n    UseLoadingOvertimeReturnType,\n} from \"../useLoadingOvertime\";\n\nexport type DeleteParams<TData, TError, TVariables> = {\n    /**\n     * id for mutation function\n     */\n    id: BaseKey;\n    /**\n     * Resource name for API data interactions\n     */\n    resource: string;\n    /**\n     * [Determines when mutations are executed](/advanced-tutorials/mutation-mode.md)\n     */\n    mutationMode?: MutationMode;\n    /**\n     * Duration in ms to wait before executing the mutation when `mutationMode = \"undoable\"`\n     */\n    undoableTimeout?: number;\n    /**\n     * Provides a function to cancel the mutation when `mutationMode = \"undoable\"`\n     */\n    onCancel?: (cancelMutation: () => void) => void;\n    /**\n     * Metadata query for dataProvider\n     */\n    meta?: MetaQuery;\n    /**\n     * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n     */\n    metaData?: MetaQuery;\n    /**\n     * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use.\n     * @default \"default\"\n     */\n    dataProviderName?: string;\n    /**\n     *  You can use it to manage the invalidations that will occur at the end of the mutation.\n     */\n    invalidates?: Array<keyof IQueryKeys>;\n    /**\n     * Values for mutation function\n     */\n    values?: TVariables;\n} & SuccessErrorNotification<DeleteOneResponse<TData>, TError, BaseKey>;\n\nexport type UseDeleteReturnType<\n    TData extends BaseRecord = BaseRecord,\n    TError = HttpError,\n    TVariables = {},\n> = UseMutationResult<\n    DeleteOneResponse<TData>,\n    TError,\n    DeleteParams<TData, TError, TVariables>,\n    DeleteContext<TData>\n> &\n    UseLoadingOvertimeReturnType;\n\nexport type UseDeleteProps<\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n> = {\n    mutationOptions?: Omit<\n        UseMutationOptions<\n            DeleteOneResponse<TData>,\n            TError,\n            DeleteParams<TData, TError, TVariables>,\n            DeleteContext<TData>\n        >,\n        \"mutationFn\" | \"onError\" | \"onSuccess\" | \"onSettled\" | \"onMutate\"\n    >;\n} & UseLoadingOvertimeOptionsProps;\n\n/**\n * `useDelete` is a modified version of `react-query`'s {@link https://react-query.tanstack.com/reference/useMutation `useMutation`} for delete mutations.\n *\n * It uses `deleteOne` method as mutation function from the `dataProvider` which is passed to `<Refine>`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/data/useDelete} for more details.\n *\n * @typeParam TData - Result data of the query extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences/#httperror `HttpError`}\n * @typeParam TVariables - Values for params. default `{}`\n *\n */\nexport const useDelete = <\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n>({\n    mutationOptions,\n    overtimeOptions,\n}: UseDeleteProps<TData, TError, TVariables> = {}): UseDeleteReturnType<\n    TData,\n    TError,\n    TVariables\n> => {\n    const authProvider = useActiveAuthProvider();\n    const { mutate: checkError } = useOnError({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n    const dataProvider = useDataProvider();\n\n    const { resources, select } = useResource();\n    const queryClient = useQueryClient();\n\n    const {\n        mutationMode: mutationModeContext,\n        undoableTimeout: undoableTimeoutContext,\n    } = useMutationMode();\n\n    const { notificationDispatch } = useCancelNotification();\n    const translate = useTranslate();\n    const publish = usePublish();\n    const { log } = useLog();\n    const handleNotification = useHandleNotification();\n    const invalidateStore = useInvalidate();\n    const getMeta = useMeta();\n    const {\n        options: { textTransformers },\n    } = useRefineContext();\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const mutation = useMutation<\n        DeleteOneResponse<TData>,\n        TError,\n        DeleteParams<TData, TError, TVariables>,\n        DeleteContext<TData>\n    >(\n        ({\n            id,\n            mutationMode,\n            undoableTimeout,\n            resource: resourceName,\n            onCancel,\n            meta,\n            metaData,\n            dataProviderName,\n            values,\n        }) => {\n            const { resource, identifier } = select(resourceName);\n\n            const combinedMeta = getMeta({\n                resource,\n                meta: pickNotDeprecated(meta, metaData),\n            });\n\n            const mutationModePropOrContext =\n                mutationMode ?? mutationModeContext;\n\n            const undoableTimeoutPropOrContext =\n                undoableTimeout ?? undoableTimeoutContext;\n\n            if (!(mutationModePropOrContext === \"undoable\")) {\n                return dataProvider(\n                    pickDataProvider(identifier, dataProviderName, resources),\n                ).deleteOne<TData, TVariables>({\n                    resource: resource.name,\n                    id,\n                    meta: combinedMeta,\n                    metaData: combinedMeta,\n                    variables: values,\n                });\n            }\n\n            const deletePromise = new Promise<DeleteOneResponse<TData>>(\n                (resolve, reject) => {\n                    const doMutation = () => {\n                        dataProvider(\n                            pickDataProvider(\n                                identifier,\n                                dataProviderName,\n                                resources,\n                            ),\n                        )\n                            .deleteOne<TData, TVariables>({\n                                resource: resource.name,\n                                id,\n                                meta: combinedMeta,\n                                metaData: combinedMeta,\n                                variables: values,\n                            })\n                            .then((result) => resolve(result))\n                            .catch((err) => reject(err));\n                    };\n\n                    const cancelMutation = () => {\n                        reject({ message: \"mutationCancelled\" });\n                    };\n\n                    if (onCancel) {\n                        onCancel(cancelMutation);\n                    }\n\n                    notificationDispatch({\n                        type: ActionTypes.ADD,\n                        payload: {\n                            id,\n                            resource: identifier,\n                            cancelMutation: cancelMutation,\n                            doMutation: doMutation,\n                            seconds: undoableTimeoutPropOrContext,\n                            isSilent: !!onCancel,\n                        },\n                    });\n                },\n            );\n            return deletePromise;\n        },\n        {\n            onMutate: async ({\n                id,\n                resource: resourceName,\n                mutationMode,\n                dataProviderName,\n                meta,\n                metaData,\n            }) => {\n                const { identifier } = select(resourceName);\n\n                const preferredMeta = pickNotDeprecated(meta, metaData);\n\n                const queryKey = queryKeysReplacement(preferLegacyKeys)(\n                    identifier,\n                    pickDataProvider(identifier, dataProviderName, resources),\n                    preferredMeta,\n                );\n\n                const resourceKeys = keys()\n                    .data(\n                        pickDataProvider(\n                            identifier,\n                            dataProviderName,\n                            resources,\n                        ),\n                    )\n                    .resource(identifier);\n\n                const mutationModePropOrContext =\n                    mutationMode ?? mutationModeContext;\n\n                await queryClient.cancelQueries(\n                    resourceKeys.get(preferLegacyKeys),\n                    undefined,\n                    {\n                        silent: true,\n                    },\n                );\n\n                const previousQueries: PreviousQuery<TData>[] =\n                    queryClient.getQueriesData(\n                        resourceKeys.get(preferLegacyKeys),\n                    );\n\n                if (mutationModePropOrContext !== \"pessimistic\") {\n                    // Set the previous queries to the new ones:\n                    queryClient.setQueriesData(\n                        resourceKeys\n                            .action(\"list\")\n                            .params(preferredMeta ?? {})\n                            .get(preferLegacyKeys),\n                        (previous?: GetListResponse<TData> | null) => {\n                            if (!previous) {\n                                return null;\n                            }\n                            const data = previous.data.filter(\n                                (record: TData) =>\n                                    record.id?.toString() !== id.toString(),\n                            );\n\n                            return {\n                                data,\n                                total: previous.total - 1,\n                            };\n                        },\n                    );\n\n                    queryClient.setQueriesData(\n                        resourceKeys.action(\"many\").get(preferLegacyKeys),\n                        (previous?: GetListResponse<TData> | null) => {\n                            if (!previous) {\n                                return null;\n                            }\n                            const data = previous.data.filter(\n                                (record: TData) => {\n                                    return (\n                                        record.id?.toString() !== id?.toString()\n                                    );\n                                },\n                            );\n\n                            return {\n                                ...previous,\n                                data,\n                            };\n                        },\n                    );\n                }\n\n                return {\n                    previousQueries,\n                    queryKey,\n                };\n            },\n            onSettled: (\n                _data,\n                _error,\n                {\n                    id,\n                    resource: resourceName,\n                    dataProviderName,\n                    invalidates = [\"list\", \"many\"],\n                },\n            ) => {\n                const { identifier } = select(resourceName);\n\n                // invalidate the cache for the list and many queries:\n                invalidateStore({\n                    resource: identifier,\n                    dataProviderName: pickDataProvider(\n                        identifier,\n                        dataProviderName,\n                        resources,\n                    ),\n                    invalidates,\n                });\n\n                notificationDispatch({\n                    type: ActionTypes.REMOVE,\n                    payload: { id, resource: identifier },\n                });\n            },\n            onSuccess: (\n                _data,\n                {\n                    id,\n                    resource: resourceName,\n                    successNotification,\n                    dataProviderName: dataProviderNameFromProp,\n                    meta,\n                    metaData,\n                },\n                context,\n            ) => {\n                const { resource, identifier } = select(resourceName);\n                const resourceSingular = textTransformers.singular(identifier);\n\n                const dataProviderName = pickDataProvider(\n                    identifier,\n                    dataProviderNameFromProp,\n                    resources,\n                );\n\n                const combinedMeta = getMeta({\n                    resource,\n                    meta: pickNotDeprecated(meta, metaData),\n                });\n\n                // Remove the queries from the cache:\n                queryClient.removeQueries(context?.queryKey.detail(id));\n\n                const notificationConfig =\n                    typeof successNotification === \"function\"\n                        ? successNotification(_data, id, identifier)\n                        : successNotification;\n\n                handleNotification(notificationConfig, {\n                    key: `${id}-${identifier}-notification`,\n                    description: translate(\"notifications.success\", \"Success\"),\n                    message: translate(\n                        \"notifications.deleteSuccess\",\n                        {\n                            resource: translate(\n                                `${identifier}.${identifier}`,\n                                resourceSingular,\n                            ),\n                        },\n                        `Successfully deleted a ${resourceSingular}`,\n                    ),\n                    type: \"success\",\n                });\n\n                publish?.({\n                    channel: `resources/${resource.name}`,\n                    type: \"deleted\",\n                    payload: {\n                        ids: [id],\n                    },\n                    date: new Date(),\n                    meta: {\n                        ...combinedMeta,\n                        dataProviderName,\n                    },\n                });\n\n                const {\n                    fields: _fields,\n                    operation: _operation,\n                    variables: _variables,\n                    ...rest\n                } = combinedMeta || {};\n                log?.mutate({\n                    action: \"delete\",\n                    resource: resource.name,\n                    meta: {\n                        id,\n                        dataProviderName,\n                        ...rest,\n                    },\n                });\n\n                // Remove the queries from the cache:\n                queryClient.removeQueries(context?.queryKey.detail(id));\n            },\n            onError: (\n                err: TError,\n                { id, resource: resourceName, errorNotification },\n                context,\n            ) => {\n                const { identifier } = select(resourceName);\n\n                // set back the queries to the context:\n                if (context) {\n                    for (const query of context.previousQueries) {\n                        queryClient.setQueryData(query[0], query[1]);\n                    }\n                }\n\n                if (err.message !== \"mutationCancelled\") {\n                    checkError(err);\n\n                    const resourceSingular =\n                        textTransformers.singular(identifier);\n\n                    const notificationConfig =\n                        typeof errorNotification === \"function\"\n                            ? errorNotification(err, id, identifier)\n                            : errorNotification;\n\n                    handleNotification(notificationConfig, {\n                        key: `${id}-${identifier}-notification`,\n                        message: translate(\n                            \"notifications.deleteError\",\n                            {\n                                resource: resourceSingular,\n                                statusCode: err.statusCode,\n                            },\n                            `Error (status code: ${err.statusCode})`,\n                        ),\n                        description: err.message,\n                        type: \"error\",\n                    });\n                }\n            },\n            mutationKey: keys().data().mutation(\"delete\").get(preferLegacyKeys),\n            ...mutationOptions,\n            meta: {\n                ...mutationOptions?.meta,\n                ...getXRay(\"useDelete\", preferLegacyKeys),\n            },\n        },\n    );\n\n    const { elapsedTime } = useLoadingOvertime({\n        isLoading: mutation.isLoading,\n        interval: overtimeOptions?.interval,\n        onInterval: overtimeOptions?.onInterval,\n    });\n\n    return { ...mutation, overtime: { elapsedTime } };\n};\n","import { getXRay } from \"@refinedev/devtools-internal\";\nimport {\n    useMutation,\n    UseMutationOptions,\n    UseMutationResult,\n} from \"@tanstack/react-query\";\n\nimport {\n    handleMultiple,\n    pickDataProvider,\n    pickNotDeprecated,\n} from \"@definitions\";\nimport {\n    useDataProvider,\n    useHandleNotification,\n    useInvalidate,\n    useLog,\n    useMeta,\n    usePublish,\n    useRefineContext,\n    useResource,\n    useTranslate,\n} from \"@hooks\";\nimport { useKeys } from \"@hooks/useKeys\";\nimport {\n    BaseRecord,\n    CreateManyResponse,\n    HttpError,\n    IQueryKeys,\n    MetaQuery,\n    SuccessErrorNotification,\n} from \"../../interfaces\";\nimport {\n    useLoadingOvertime,\n    UseLoadingOvertimeOptionsProps,\n    UseLoadingOvertimeReturnType,\n} from \"../useLoadingOvertime\";\n\ntype useCreateManyParams<TData, TError, TVariables> = {\n    resource: string;\n    values: TVariables[];\n    meta?: MetaQuery;\n    metaData?: MetaQuery;\n    dataProviderName?: string;\n    invalidates?: Array<keyof IQueryKeys>;\n} & SuccessErrorNotification<CreateManyResponse<TData>, TError, TVariables[]>;\n\nexport type UseCreateManyReturnType<\n    TData extends BaseRecord = BaseRecord,\n    TError = HttpError,\n    TVariables = {},\n> = UseMutationResult<\n    CreateManyResponse<TData>,\n    TError,\n    useCreateManyParams<TData, TError, TVariables>,\n    unknown\n>;\n\nexport type UseCreateManyProps<\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n> = {\n    mutationOptions?: Omit<\n        UseMutationOptions<\n            CreateManyResponse<TData>,\n            TError,\n            useCreateManyParams<TData, TError, TVariables>\n        >,\n        \"mutationFn\" | \"onError\" | \"onSuccess\"\n    >;\n} & UseLoadingOvertimeOptionsProps;\n\n/**\n * `useCreateMany` is a modified version of `react-query`'s {@link https://react-query.tanstack.com/reference/useMutation `useMutation`} for multiple create mutations.\n *\n * It uses `createMany` method as mutation function from the `dataProvider` which is passed to `<Refine>`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/data/useCreateMany} for more details.\n *\n * @typeParam TData - Result data of the query extends {@link https://refine.dev/docs/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TVariables - Values for mutation function\n *\n */\nexport const useCreateMany = <\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n>({\n    mutationOptions,\n    overtimeOptions,\n}: UseCreateManyProps<TData, TError, TVariables> = {}): UseCreateManyReturnType<\n    TData,\n    TError,\n    TVariables\n> &\n    UseLoadingOvertimeReturnType => {\n    const dataProvider = useDataProvider();\n    const { resources, select } = useResource();\n    const translate = useTranslate();\n    const publish = usePublish();\n    const handleNotification = useHandleNotification();\n    const invalidateStore = useInvalidate();\n    const { log } = useLog();\n    const getMeta = useMeta();\n    const {\n        options: { textTransformers },\n    } = useRefineContext();\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const mutation = useMutation<\n        CreateManyResponse<TData>,\n        TError,\n        useCreateManyParams<TData, TError, TVariables>\n    >(\n        ({\n            resource: resourceName,\n            values,\n            meta,\n            metaData,\n            dataProviderName,\n        }: useCreateManyParams<TData, TError, TVariables>) => {\n            const { resource, identifier } = select(resourceName);\n\n            const combinedMeta = getMeta({\n                resource,\n                meta: pickNotDeprecated(meta, metaData),\n            });\n\n            const selectedDataProvider = dataProvider(\n                pickDataProvider(identifier, dataProviderName, resources),\n            );\n\n            if (selectedDataProvider.createMany) {\n                return selectedDataProvider.createMany<TData, TVariables>({\n                    resource: resource.name,\n                    variables: values,\n                    meta: combinedMeta,\n                    metaData: combinedMeta,\n                });\n            } else {\n                return handleMultiple(\n                    values.map((val) =>\n                        selectedDataProvider.create<TData, TVariables>({\n                            resource: resource.name,\n                            variables: val,\n                            meta: combinedMeta,\n                            metaData: combinedMeta,\n                        }),\n                    ),\n                );\n            }\n        },\n        {\n            onSuccess: (\n                response,\n                {\n                    resource: resourceName,\n                    successNotification,\n                    dataProviderName: dataProviderNameFromProp,\n                    invalidates = [\"list\", \"many\"],\n                    values,\n                    meta,\n                    metaData,\n                },\n            ) => {\n                const { resource, identifier } = select(resourceName);\n                const resourcePlural = textTransformers.plural(identifier);\n\n                const dataProviderName = pickDataProvider(\n                    identifier,\n                    dataProviderNameFromProp,\n                    resources,\n                );\n\n                const combinedMeta = getMeta({\n                    resource,\n                    meta: pickNotDeprecated(meta, metaData),\n                });\n\n                const notificationConfig =\n                    typeof successNotification === \"function\"\n                        ? successNotification(response, values, identifier)\n                        : successNotification;\n\n                handleNotification(notificationConfig, {\n                    key: `createMany-${identifier}-notification`,\n                    message: translate(\n                        \"notifications.createSuccess\",\n                        {\n                            resource: translate(\n                                `${identifier}.${identifier}`,\n                                identifier,\n                            ),\n                        },\n                        `Successfully created ${resourcePlural}`,\n                    ),\n                    description: translate(\"notifications.success\", \"Success\"),\n                    type: \"success\",\n                });\n\n                invalidateStore({\n                    resource: identifier,\n                    dataProviderName,\n                    invalidates,\n                });\n\n                const ids = response?.data\n                    .filter((item) => item?.id !== undefined)\n                    .map((item) => item.id!);\n                publish?.({\n                    channel: `resources/${resource.name}`,\n                    type: \"created\",\n                    payload: {\n                        ids,\n                    },\n                    date: new Date(),\n                    meta: {\n                        ...combinedMeta,\n                        dataProviderName,\n                    },\n                });\n\n                const {\n                    fields: _fields,\n                    operation: _operation,\n                    variables: _variables,\n                    ...rest\n                } = combinedMeta || {};\n                log?.mutate({\n                    action: \"createMany\",\n                    resource: resource.name,\n                    data: values,\n                    meta: {\n                        dataProviderName,\n                        ids,\n                        ...rest,\n                    },\n                });\n            },\n            onError: (\n                err: TError,\n                { resource: resourceName, errorNotification, values },\n            ) => {\n                const { identifier } = select(resourceName);\n\n                const notificationConfig =\n                    typeof errorNotification === \"function\"\n                        ? errorNotification(err, values, identifier)\n                        : errorNotification;\n\n                handleNotification(notificationConfig, {\n                    key: `createMany-${identifier}-notification`,\n                    description: err.message,\n                    message: translate(\n                        \"notifications.createError\",\n                        {\n                            resource: translate(\n                                `${identifier}.${identifier}`,\n                                identifier,\n                            ),\n                            statusCode: err.statusCode,\n                        },\n                        `There was an error creating ${identifier} (status code: ${err.statusCode}`,\n                    ),\n                    type: \"error\",\n                });\n            },\n            mutationKey: keys()\n                .data()\n                .mutation(\"createMany\")\n                .get(preferLegacyKeys),\n            ...mutationOptions,\n            meta: {\n                ...mutationOptions?.meta,\n                ...getXRay(\"useCreateMany\", preferLegacyKeys),\n            },\n        },\n    );\n\n    const { elapsedTime } = useLoadingOvertime({\n        isLoading: mutation.isLoading,\n        interval: overtimeOptions?.interval,\n        onInterval: overtimeOptions?.onInterval,\n    });\n\n    return { ...mutation, overtime: { elapsedTime } };\n};\n","import { getXRay } from \"@refinedev/devtools-internal\";\nimport {\n    useMutation,\n    UseMutationOptions,\n    UseMutationResult,\n    useQueryClient,\n} from \"@tanstack/react-query\";\n\nimport { ActionTypes } from \"@contexts/undoableQueue\";\nimport {\n    handleMultiple,\n    pickDataProvider,\n    pickNotDeprecated,\n    queryKeysReplacement,\n    useActiveAuthProvider,\n} from \"@definitions/helpers\";\nimport {\n    useCancelNotification,\n    useDataProvider,\n    useHandleNotification,\n    useInvalidate,\n    useLog,\n    useMeta,\n    useMutationMode,\n    useOnError,\n    usePublish,\n    useRefineContext,\n    useResource,\n    useTranslate,\n} from \"@hooks\";\nimport { useKeys } from \"@hooks/useKeys\";\nimport {\n    BaseKey,\n    BaseRecord,\n    GetListResponse,\n    GetManyResponse,\n    GetOneResponse,\n    HttpError,\n    IQueryKeys,\n    MetaQuery,\n    MutationMode,\n    OptimisticUpdateManyMapType,\n    PrevContext as UpdateContext,\n    QueryResponse,\n    SuccessErrorNotification,\n    UpdateManyResponse,\n} from \"../../interfaces\";\nimport {\n    useLoadingOvertime,\n    UseLoadingOvertimeOptionsProps,\n    UseLoadingOvertimeReturnType,\n} from \"../useLoadingOvertime\";\n\ntype UpdateManyParams<TData, TError, TVariables> = {\n    /**\n     * ids for mutation function\n     */\n    ids: BaseKey[];\n    /**\n     * Resource name for API data interactions\n     */\n    resource: string;\n    /**\n     * [Determines when mutations are executed](/advanced-tutorials/mutation-mode.md)\n     */\n    mutationMode?: MutationMode;\n    /**\n     * Duration in ms to wait before executing the mutation when `mutationMode = \"undoable\"`\n     */\n    undoableTimeout?: number;\n    /**\n     * Provides a function to cancel the mutation when `mutationMode = \"undoable\"`\n     */\n    onCancel?: (cancelMutation: () => void) => void;\n    /**\n     * Values for mutation function\n     */\n    values: TVariables;\n    /**\n     * meta data for `dataProvider`\n     */\n    meta?: MetaQuery;\n    /**\n     * meta data for `dataProvider`\n     * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n     */\n    metaData?: MetaQuery;\n    /**\n     * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use.\n     * @default \"default\"\n     */\n    dataProviderName?: string;\n    /**\n     *  You can use it to manage the invalidations that will occur at the end of the mutation.\n     */\n    invalidates?: Array<keyof IQueryKeys>;\n    /**\n     * You can use it to manage the invalidations that will occur at the end of the mutation.\n     * @default {\n     *   list: true,\n     *   many: true,\n     *   detail: true,\n     * }\n     */\n    optimisticUpdateMap?: OptimisticUpdateManyMapType<TData, TVariables>;\n} & SuccessErrorNotification<\n    UpdateManyResponse<TData>,\n    TError,\n    { ids: BaseKey[]; values: TVariables }\n>;\n\ntype UseUpdateManyReturnType<\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n> = UseMutationResult<\n    UpdateManyResponse<TData>,\n    TError,\n    UpdateManyParams<TData, TError, TVariables>,\n    UpdateContext<TData>\n> &\n    UseLoadingOvertimeReturnType;\n\nexport type UseUpdateManyProps<\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n> = {\n    mutationOptions?: Omit<\n        UseMutationOptions<\n            UpdateManyResponse<TData>,\n            TError,\n            UpdateManyParams<TData, TError, TVariables>,\n            UpdateContext<TData>\n        >,\n        \"mutationFn\" | \"onError\" | \"onSuccess\" | \"onSettled\" | \"onMutate\"\n    >;\n} & UseLoadingOvertimeOptionsProps;\n\n/**\n * `useUpdateMany` is a modified version of `react-query`'s {@link https://react-query.tanstack.com/reference/useMutation `useMutation`} for multiple update mutations.\n *\n * It uses `updateMany` method as mutation function from the `dataProvider` which is passed to `<Refine>`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/data/useUpdateMany} for more details.\n *\n * @typeParam TData - Result data of the query extends {@link https://refine.dev/docs/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TVariables - Values for mutation function\n *\n */\nexport const useUpdateMany = <\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n>({\n    mutationOptions,\n    overtimeOptions,\n}: UseUpdateManyProps<TData, TError, TVariables> = {}): UseUpdateManyReturnType<\n    TData,\n    TError,\n    TVariables\n> => {\n    const { resources, select } = useResource();\n    const queryClient = useQueryClient();\n    const dataProvider = useDataProvider();\n    const translate = useTranslate();\n    const {\n        mutationMode: mutationModeContext,\n        undoableTimeout: undoableTimeoutContext,\n    } = useMutationMode();\n    const authProvider = useActiveAuthProvider();\n    const { mutate: checkError } = useOnError({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n    const { notificationDispatch } = useCancelNotification();\n    const publish = usePublish();\n    const handleNotification = useHandleNotification();\n    const invalidateStore = useInvalidate();\n    const { log } = useLog();\n    const getMeta = useMeta();\n    const {\n        options: { textTransformers },\n    } = useRefineContext();\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const mutation = useMutation<\n        UpdateManyResponse<TData>,\n        TError,\n        UpdateManyParams<TData, TError, TVariables>,\n        UpdateContext<TData>\n    >(\n        ({\n            ids,\n            values,\n            resource: resourceName,\n            onCancel,\n            mutationMode,\n            undoableTimeout,\n            meta,\n            metaData,\n            dataProviderName,\n        }: UpdateManyParams<TData, TError, TVariables>) => {\n            const { resource, identifier } = select(resourceName);\n\n            const combinedMeta = getMeta({\n                resource,\n                meta: pickNotDeprecated(meta, metaData),\n            });\n\n            const mutationModePropOrContext =\n                mutationMode ?? mutationModeContext;\n\n            const undoableTimeoutPropOrContext =\n                undoableTimeout ?? undoableTimeoutContext;\n\n            const selectedDataProvider = dataProvider(\n                pickDataProvider(identifier, dataProviderName, resources),\n            );\n\n            const mutationFn = () => {\n                if (selectedDataProvider.updateMany) {\n                    return selectedDataProvider.updateMany<TData, TVariables>({\n                        resource: resource.name,\n                        ids,\n                        variables: values,\n                        meta: combinedMeta,\n                        metaData: combinedMeta,\n                    });\n                } else {\n                    return handleMultiple(\n                        ids.map((id) =>\n                            selectedDataProvider.update<TData, TVariables>({\n                                resource: resource.name,\n                                id,\n                                variables: values,\n                                meta: combinedMeta,\n                                metaData: combinedMeta,\n                            }),\n                        ),\n                    );\n                }\n            };\n\n            if (!(mutationModePropOrContext === \"undoable\")) {\n                return mutationFn();\n            }\n\n            const updatePromise = new Promise<UpdateManyResponse<TData>>(\n                (resolve, reject) => {\n                    const doMutation = () => {\n                        mutationFn()\n                            .then((result) => resolve(result))\n                            .catch((err) => reject(err));\n                    };\n\n                    const cancelMutation = () => {\n                        reject({ message: \"mutationCancelled\" });\n                    };\n\n                    if (onCancel) {\n                        onCancel(cancelMutation);\n                    }\n\n                    notificationDispatch({\n                        type: ActionTypes.ADD,\n                        payload: {\n                            id: ids,\n                            resource: identifier,\n                            cancelMutation: cancelMutation,\n                            doMutation: doMutation,\n                            seconds: undoableTimeoutPropOrContext,\n                            isSilent: !!onCancel,\n                        },\n                    });\n                },\n            );\n            return updatePromise;\n        },\n\n        {\n            onMutate: async ({\n                resource: resourceName,\n                ids,\n                values,\n                mutationMode,\n                dataProviderName,\n                meta,\n                metaData,\n                optimisticUpdateMap = { list: true, many: true, detail: true },\n            }) => {\n                const { identifier } = select(resourceName);\n                const preferredMeta = pickNotDeprecated(meta, metaData);\n\n                const queryKey = queryKeysReplacement(preferLegacyKeys)(\n                    identifier,\n                    pickDataProvider(identifier, dataProviderName, resources),\n                    pickNotDeprecated(meta, metaData),\n                );\n\n                const resourceKeys = keys()\n                    .data(\n                        pickDataProvider(\n                            identifier,\n                            dataProviderName,\n                            resources,\n                        ),\n                    )\n                    .resource(identifier);\n\n                const mutationModePropOrContext =\n                    mutationMode ?? mutationModeContext;\n\n                await queryClient.cancelQueries(\n                    resourceKeys.get(preferLegacyKeys),\n                    undefined,\n                    {\n                        silent: true,\n                    },\n                );\n\n                const previousQueries = queryClient.getQueriesData<\n                    QueryResponse<TData>\n                >(resourceKeys.get(preferLegacyKeys));\n\n                if (mutationModePropOrContext !== \"pessimistic\") {\n                    if (optimisticUpdateMap.list) {\n                        // Set the previous queries to the new ones:\n                        queryClient.setQueriesData(\n                            resourceKeys\n                                .action(\"list\")\n                                .params(preferredMeta ?? {})\n                                .get(preferLegacyKeys),\n                            (previous?: GetListResponse<TData> | null) => {\n                                if (\n                                    typeof optimisticUpdateMap.list ===\n                                    \"function\"\n                                ) {\n                                    return optimisticUpdateMap.list(\n                                        previous,\n                                        values,\n                                        ids,\n                                    );\n                                }\n\n                                if (!previous) {\n                                    return null;\n                                }\n\n                                const data = previous.data.map(\n                                    (record: TData) => {\n                                        if (\n                                            record.id !== undefined &&\n                                            ids\n                                                .filter(\n                                                    (id) => id !== undefined,\n                                                )\n                                                .map(String)\n                                                .includes(record.id.toString())\n                                        ) {\n                                            return {\n                                                ...record,\n                                                ...values,\n                                            };\n                                        }\n\n                                        return record;\n                                    },\n                                );\n\n                                return {\n                                    ...previous,\n                                    data,\n                                };\n                            },\n                        );\n                    }\n\n                    if (optimisticUpdateMap.many) {\n                        queryClient.setQueriesData(\n                            resourceKeys.action(\"many\").get(preferLegacyKeys),\n                            (previous?: GetManyResponse<TData> | null) => {\n                                if (\n                                    typeof optimisticUpdateMap.many ===\n                                    \"function\"\n                                ) {\n                                    return optimisticUpdateMap.many(\n                                        previous,\n                                        values,\n                                        ids,\n                                    );\n                                }\n\n                                if (!previous) {\n                                    return null;\n                                }\n\n                                const data = previous.data.map(\n                                    (record: TData) => {\n                                        if (\n                                            record.id !== undefined &&\n                                            ids\n                                                .filter(\n                                                    (id) => id !== undefined,\n                                                )\n                                                .map(String)\n                                                .includes(record.id.toString())\n                                        ) {\n                                            return {\n                                                ...record,\n                                                ...values,\n                                            };\n                                        }\n                                        return record;\n                                    },\n                                );\n                                return {\n                                    ...previous,\n                                    data,\n                                };\n                            },\n                        );\n                    }\n\n                    if (optimisticUpdateMap.detail) {\n                        for (const id of ids) {\n                            queryClient.setQueriesData(\n                                resourceKeys\n                                    .action(\"one\")\n                                    .id(id)\n                                    .params(preferredMeta ?? {})\n                                    .get(preferLegacyKeys),\n                                (previous?: GetOneResponse<TData> | null) => {\n                                    if (\n                                        typeof optimisticUpdateMap.detail ===\n                                        \"function\"\n                                    ) {\n                                        return optimisticUpdateMap.detail(\n                                            previous,\n                                            values,\n                                            id,\n                                        );\n                                    }\n\n                                    if (!previous) {\n                                        return null;\n                                    }\n\n                                    const data = {\n                                        ...previous.data,\n                                        ...values,\n                                    };\n                                    return {\n                                        ...previous,\n                                        data,\n                                    };\n                                },\n                            );\n                        }\n                    }\n                }\n\n                return {\n                    previousQueries,\n                    queryKey,\n                };\n            },\n            onSettled: (\n                _data,\n                _error,\n                { ids, resource: resourceName, dataProviderName },\n            ) => {\n                const { identifier } = select(resourceName);\n\n                // invalidate the cache for the list and many queries:\n                invalidateStore({\n                    resource: identifier,\n                    invalidates: [\"list\", \"many\"],\n                    dataProviderName: pickDataProvider(\n                        identifier,\n                        dataProviderName,\n                        resources,\n                    ),\n                });\n\n                ids.forEach((id) =>\n                    invalidateStore({\n                        resource: identifier,\n                        invalidates: [\"detail\"],\n                        dataProviderName: pickDataProvider(\n                            identifier,\n                            dataProviderName,\n                            resources,\n                        ),\n                        id,\n                    }),\n                );\n\n                notificationDispatch({\n                    type: ActionTypes.REMOVE,\n                    payload: { id: ids, resource: identifier },\n                });\n            },\n            onSuccess: (\n                data,\n                {\n                    ids,\n                    resource: resourceName,\n                    meta,\n                    metaData,\n                    dataProviderName: dataProviderNameFromProp,\n                    successNotification,\n                    values,\n                },\n                context,\n            ) => {\n                const { resource, identifier } = select(resourceName);\n                const resourceSingular = textTransformers.singular(identifier);\n\n                const dataProviderName = pickDataProvider(\n                    identifier,\n                    dataProviderNameFromProp,\n                    resources,\n                );\n\n                const combinedMeta = getMeta({\n                    resource,\n                    meta: pickNotDeprecated(meta, metaData),\n                });\n\n                const notificationConfig =\n                    typeof successNotification === \"function\"\n                        ? successNotification(data, { ids, values }, identifier)\n                        : successNotification;\n\n                handleNotification(notificationConfig, {\n                    key: `${ids}-${identifier}-notification`,\n                    description: translate(\n                        \"notifications.success\",\n                        \"Successful\",\n                    ),\n                    message: translate(\n                        \"notifications.editSuccess\",\n                        {\n                            resource: translate(\n                                `${identifier}.${identifier}`,\n                                identifier,\n                            ),\n                        },\n                        `Successfully updated ${resourceSingular}`,\n                    ),\n                    type: \"success\",\n                });\n\n                publish?.({\n                    channel: `resources/${resource.name}`,\n                    type: \"updated\",\n                    payload: {\n                        ids: ids.map(String),\n                    },\n                    date: new Date(),\n                    meta: {\n                        ...combinedMeta,\n                        dataProviderName,\n                    },\n                });\n\n                const previousData: any[] = [];\n                if (context) {\n                    ids.forEach((id) => {\n                        const queryData = queryClient.getQueryData<\n                            UpdateManyResponse<TData>\n                        >(context.queryKey.detail(id));\n\n                        previousData.push(\n                            Object.keys(values || {}).reduce<any>(\n                                (acc, item: any) => {\n                                    acc[item] = queryData?.data?.[item];\n                                    return acc;\n                                },\n                                {},\n                            ),\n                        );\n                    });\n                }\n\n                const {\n                    fields: _fields,\n                    operation: _operation,\n                    variables: _variables,\n                    ...rest\n                } = combinedMeta || {};\n                log?.mutate({\n                    action: \"updateMany\",\n                    resource: resource.name,\n                    data: values,\n                    previousData,\n                    meta: {\n                        ids,\n                        dataProviderName,\n                        ...rest,\n                    },\n                });\n            },\n            onError: (\n                err: TError,\n                { ids, resource: resourceName, errorNotification, values },\n                context,\n            ) => {\n                const { identifier } = select(resourceName);\n\n                // set back the queries to the context:\n                if (context) {\n                    for (const query of context.previousQueries) {\n                        queryClient.setQueryData(query[0], query[1]);\n                    }\n                }\n\n                if (err.message !== \"mutationCancelled\") {\n                    checkError?.(err);\n\n                    const resourceSingular =\n                        textTransformers.singular(identifier);\n\n                    const notificationConfig =\n                        typeof errorNotification === \"function\"\n                            ? errorNotification(\n                                  err,\n                                  { ids, values },\n                                  identifier,\n                              )\n                            : errorNotification;\n\n                    handleNotification(notificationConfig, {\n                        key: `${ids}-${identifier}-updateMany-error-notification`,\n                        message: translate(\n                            \"notifications.editError\",\n                            {\n                                resource: resourceSingular,\n                                statusCode: err.statusCode,\n                            },\n                            `Error when updating ${resourceSingular} (status code: ${err.statusCode})`,\n                        ),\n                        description: err.message,\n                        type: \"error\",\n                    });\n                }\n            },\n            mutationKey: keys()\n                .data()\n                .mutation(\"updateMany\")\n                .get(preferLegacyKeys),\n            ...mutationOptions,\n            meta: {\n                ...mutationOptions?.meta,\n                ...getXRay(\"useUpdateMany\", preferLegacyKeys),\n            },\n        },\n    );\n\n    const { elapsedTime } = useLoadingOvertime({\n        isLoading: mutation.isLoading,\n        interval: overtimeOptions?.interval,\n        onInterval: overtimeOptions?.onInterval,\n    });\n\n    return { ...mutation, overtime: { elapsedTime } };\n};\n","import { getXRay } from \"@refinedev/devtools-internal\";\nimport {\n    useMutation,\n    UseMutationOptions,\n    UseMutationResult,\n    useQueryClient,\n} from \"@tanstack/react-query\";\n\nimport { ActionTypes } from \"@contexts/undoableQueue\";\nimport {\n    handleMultiple,\n    pickDataProvider,\n    pickNotDeprecated,\n    queryKeysReplacement,\n    useActiveAuthProvider,\n} from \"@definitions\";\nimport {\n    useCancelNotification,\n    useDataProvider,\n    useHandleNotification,\n    useInvalidate,\n    useLog,\n    useMeta,\n    useMutationMode,\n    useOnError,\n    usePublish,\n    useRefineContext,\n    useResource,\n    useTranslate,\n} from \"@hooks\";\nimport { useKeys } from \"@hooks/useKeys\";\nimport {\n    BaseKey,\n    BaseRecord,\n    DeleteManyResponse,\n    GetListResponse,\n    HttpError,\n    IQueryKeys,\n    MetaQuery,\n    MutationMode,\n    PrevContext as DeleteContext,\n    PreviousQuery,\n    SuccessErrorNotification,\n} from \"../../interfaces\";\nimport {\n    useLoadingOvertime,\n    UseLoadingOvertimeOptionsProps,\n    UseLoadingOvertimeReturnType,\n} from \"../useLoadingOvertime\";\n\nexport type DeleteManyParams<TData, TError, TVariables> = {\n    /**\n     * ids for mutation function\n     */\n    ids: BaseKey[];\n    /**\n     * Resource name for API data interactions\n     */\n    resource: string;\n    /**\n     * [Determines when mutations are executed](/advanced-tutorials/mutation-mode.md)\n     */\n    mutationMode?: MutationMode;\n    /**\n     * Duration in ms to wait before executing the mutation when `mutationMode = \"undoable\"`\n     */\n    undoableTimeout?: number;\n    /**\n     * Provides a function to cancel the mutation when `mutationMode = \"undoable\"`\n     */\n    onCancel?: (cancelMutation: () => void) => void;\n    /**\n     * Metadata query for dataProvider\n     */\n    meta?: MetaQuery;\n    /**\n     * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n     */\n    metaData?: MetaQuery;\n    /**\n     * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use.\n     * @default \"default\"\n     */\n    dataProviderName?: string;\n    /**\n     *  You can use it to manage the invalidations that will occur at the end of the mutation.\n     */\n    invalidates?: Array<keyof IQueryKeys>;\n    /**\n     * Values for mutation function\n     */\n    values?: TVariables;\n} & SuccessErrorNotification<DeleteManyResponse<TData>, TError, BaseKey[]>;\n\nexport type UseDeleteManyReturnType<\n    TData extends BaseRecord = BaseRecord,\n    TError = HttpError,\n    TVariables = {},\n> = UseMutationResult<\n    DeleteManyResponse<TData>,\n    TError,\n    DeleteManyParams<TData, TError, TVariables>,\n    unknown\n> &\n    UseLoadingOvertimeReturnType;\n\nexport type UseDeleteManyProps<\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n> = {\n    mutationOptions?: Omit<\n        UseMutationOptions<\n            DeleteManyResponse<TData>,\n            TError,\n            DeleteManyParams<TData, TError, TVariables>,\n            DeleteContext<TData>\n        >,\n        \"mutationFn\" | \"onError\" | \"onSuccess\" | \"onSettled\" | \"onMutate\"\n    >;\n} & UseLoadingOvertimeOptionsProps;\n\n/**\n * `useDeleteMany` is a modified version of `react-query`'s {@link https://react-query.tanstack.com/reference/useMutation `useMutation`} for multiple delete mutations.\n *\n * It uses `deleteMany` method as mutation function from the `dataProvider` which is passed to `<Refine>`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/data/useDeleteMany} for more details.\n *\n * @typeParam TData - Result data of the query extends {@link https://refine.dev/docs/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TVariables - Values for params. default `{}`\n *\n */\nexport const useDeleteMany = <\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n>({\n    mutationOptions,\n    overtimeOptions,\n}: UseDeleteManyProps<TData, TError, TVariables> = {}): UseDeleteManyReturnType<\n    TData,\n    TError,\n    TVariables\n> => {\n    const authProvider = useActiveAuthProvider();\n    const { mutate: checkError } = useOnError({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n\n    const {\n        mutationMode: mutationModeContext,\n        undoableTimeout: undoableTimeoutContext,\n    } = useMutationMode();\n    const dataProvider = useDataProvider();\n    const { notificationDispatch } = useCancelNotification();\n    const translate = useTranslate();\n    const publish = usePublish();\n    const handleNotification = useHandleNotification();\n    const invalidateStore = useInvalidate();\n    const { log } = useLog();\n    const { resources, select } = useResource();\n    const queryClient = useQueryClient();\n    const getMeta = useMeta();\n    const {\n        options: { textTransformers },\n    } = useRefineContext();\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const mutation = useMutation<\n        DeleteManyResponse<TData>,\n        TError,\n        DeleteManyParams<TData, TError, TVariables>,\n        DeleteContext<TData>\n    >(\n        ({\n            resource: resourceName,\n            ids,\n            mutationMode,\n            undoableTimeout,\n            onCancel,\n            meta,\n            metaData,\n            dataProviderName,\n            values,\n        }: DeleteManyParams<TData, TError, TVariables>) => {\n            const { resource, identifier } = select(resourceName);\n\n            const combinedMeta = getMeta({\n                resource,\n                meta: pickNotDeprecated(meta, metaData),\n            });\n\n            const mutationModePropOrContext =\n                mutationMode ?? mutationModeContext;\n\n            const undoableTimeoutPropOrContext =\n                undoableTimeout ?? undoableTimeoutContext;\n\n            const selectedDataProvider = dataProvider(\n                pickDataProvider(identifier, dataProviderName, resources),\n            );\n\n            const mutationFn = () => {\n                if (selectedDataProvider.deleteMany) {\n                    return selectedDataProvider.deleteMany<TData, TVariables>({\n                        resource: resource.name,\n                        ids,\n                        meta: combinedMeta,\n                        metaData: combinedMeta,\n                        variables: values,\n                    });\n                } else {\n                    return handleMultiple(\n                        ids.map((id) =>\n                            selectedDataProvider.deleteOne<TData, TVariables>({\n                                resource: resource.name,\n                                id,\n                                meta: combinedMeta,\n                                metaData: combinedMeta,\n                                variables: values,\n                            }),\n                        ),\n                    );\n                }\n            };\n\n            if (!(mutationModePropOrContext === \"undoable\")) {\n                return mutationFn();\n            }\n\n            const updatePromise = new Promise<DeleteManyResponse<TData>>(\n                (resolve, reject) => {\n                    const doMutation = () => {\n                        mutationFn()\n                            .then((result) => resolve(result))\n                            .catch((err) => reject(err));\n                    };\n\n                    const cancelMutation = () => {\n                        reject({ message: \"mutationCancelled\" });\n                    };\n\n                    if (onCancel) {\n                        onCancel(cancelMutation);\n                    }\n\n                    notificationDispatch({\n                        type: ActionTypes.ADD,\n                        payload: {\n                            id: ids,\n                            resource: identifier,\n                            cancelMutation: cancelMutation,\n                            doMutation: doMutation,\n                            seconds: undoableTimeoutPropOrContext,\n                            isSilent: !!onCancel,\n                        },\n                    });\n                },\n            );\n            return updatePromise;\n        },\n        {\n            onMutate: async ({\n                ids,\n                resource: resourceName,\n                mutationMode,\n                dataProviderName,\n                meta,\n                metaData,\n            }) => {\n                const { identifier } = select(resourceName);\n\n                const preferredMeta = pickNotDeprecated(meta, metaData);\n\n                const queryKey = queryKeysReplacement(preferLegacyKeys)(\n                    identifier,\n                    pickDataProvider(identifier, dataProviderName, resources),\n                    preferredMeta,\n                );\n\n                const resourceKeys = keys()\n                    .data(\n                        pickDataProvider(\n                            identifier,\n                            dataProviderName,\n                            resources,\n                        ),\n                    )\n                    .resource(identifier);\n\n                const mutationModePropOrContext =\n                    mutationMode ?? mutationModeContext;\n\n                await queryClient.cancelQueries(\n                    resourceKeys.get(preferLegacyKeys),\n                    undefined,\n                    {\n                        silent: true,\n                    },\n                );\n\n                const previousQueries: PreviousQuery<TData>[] =\n                    queryClient.getQueriesData(\n                        resourceKeys.get(preferLegacyKeys),\n                    );\n\n                if (mutationModePropOrContext !== \"pessimistic\") {\n                    // Set the previous queries to the new ones:\n                    queryClient.setQueriesData(\n                        resourceKeys\n                            .action(\"list\")\n                            .params(preferredMeta ?? {})\n                            .get(preferLegacyKeys),\n                        (previous?: GetListResponse<TData> | null) => {\n                            if (!previous) {\n                                return null;\n                            }\n\n                            const data = previous.data.filter(\n                                (item) =>\n                                    item.id &&\n                                    !ids\n                                        .map(String)\n                                        .includes(item.id.toString()),\n                            );\n\n                            return {\n                                data,\n                                total: previous.total - 1,\n                            };\n                        },\n                    );\n\n                    queryClient.setQueriesData(\n                        resourceKeys.action(\"many\").get(preferLegacyKeys),\n                        (previous?: GetListResponse<TData> | null) => {\n                            if (!previous) {\n                                return null;\n                            }\n\n                            const data = previous.data.filter(\n                                (record: TData) => {\n                                    if (record.id) {\n                                        return !ids\n                                            .map(String)\n                                            .includes(record.id.toString());\n                                    }\n                                    return false;\n                                },\n                            );\n\n                            return {\n                                ...previous,\n                                data,\n                            };\n                        },\n                    );\n\n                    for (const id of ids) {\n                        queryClient.setQueriesData(\n                            resourceKeys\n                                .action(\"one\")\n                                .id(id)\n                                .params(preferredMeta)\n                                .get(preferLegacyKeys),\n                            (previous?: any | null) => {\n                                if (!previous || previous.data.id == id) {\n                                    return null;\n                                }\n                                return {\n                                    ...previous,\n                                };\n                            },\n                        );\n                    }\n                }\n\n                return {\n                    previousQueries,\n                    queryKey,\n                };\n            },\n            // Always refetch after error or success:\n            onSettled: (\n                _data,\n                _error,\n                {\n                    resource: resourceName,\n                    ids,\n                    dataProviderName,\n                    invalidates = [\"list\", \"many\"],\n                },\n            ) => {\n                const { identifier } = select(resourceName);\n\n                // invalidate the cache for the list and many queries:\n                invalidateStore({\n                    resource: identifier,\n                    dataProviderName: pickDataProvider(\n                        identifier,\n                        dataProviderName,\n                        resources,\n                    ),\n                    invalidates,\n                });\n\n                notificationDispatch({\n                    type: ActionTypes.REMOVE,\n                    payload: { id: ids, resource: identifier },\n                });\n            },\n            onSuccess: (\n                _data,\n                {\n                    ids,\n                    resource: resourceName,\n                    meta,\n                    metaData,\n                    dataProviderName: dataProviderNameFromProp,\n                    successNotification,\n                },\n                context,\n            ) => {\n                const { resource, identifier } = select(resourceName);\n\n                const dataProviderName = pickDataProvider(\n                    identifier,\n                    dataProviderNameFromProp,\n                    resources,\n                );\n\n                const combinedMeta = getMeta({\n                    resource,\n                    meta: pickNotDeprecated(meta, metaData),\n                });\n\n                // Remove the queries from the cache:\n                ids.forEach((id) =>\n                    queryClient.removeQueries(context?.queryKey.detail(id)),\n                );\n\n                const notificationConfig =\n                    typeof successNotification === \"function\"\n                        ? successNotification(_data, ids, identifier)\n                        : successNotification;\n\n                handleNotification(notificationConfig, {\n                    key: `${ids}-${identifier}-notification`,\n                    description: translate(\"notifications.success\", \"Success\"),\n                    message: translate(\n                        \"notifications.deleteSuccess\",\n                        {\n                            resource: translate(\n                                `${identifier}.${identifier}`,\n                                identifier,\n                            ),\n                        },\n                        `Successfully deleted ${identifier}`,\n                    ),\n                    type: \"success\",\n                });\n\n                publish?.({\n                    channel: `resources/${resource.name}`,\n                    type: \"deleted\",\n                    payload: { ids },\n                    date: new Date(),\n                    meta: {\n                        ...combinedMeta,\n                        dataProviderName,\n                    },\n                });\n\n                const {\n                    fields: _fields,\n                    operation: _operation,\n                    variables: _variables,\n                    ...rest\n                } = combinedMeta || {};\n                log?.mutate({\n                    action: \"deleteMany\",\n                    resource: resource.name,\n                    meta: {\n                        ids,\n                        dataProviderName,\n                        ...rest,\n                    },\n                });\n\n                // Remove the queries from the cache:\n                ids.forEach((id) =>\n                    queryClient.removeQueries(context?.queryKey.detail(id)),\n                );\n            },\n            onError: (\n                err,\n                { ids, resource: resourceName, errorNotification },\n                context,\n            ) => {\n                const { identifier } = select(resourceName);\n\n                // set back the queries to the context:\n                if (context) {\n                    for (const query of context.previousQueries) {\n                        queryClient.setQueryData(query[0], query[1]);\n                    }\n                }\n\n                if (err.message !== \"mutationCancelled\") {\n                    checkError(err);\n                    const resourceSingular =\n                        textTransformers.singular(identifier);\n\n                    const notificationConfig =\n                        typeof errorNotification === \"function\"\n                            ? errorNotification(err, ids, identifier)\n                            : errorNotification;\n\n                    handleNotification(notificationConfig, {\n                        key: `${ids}-${identifier}-notification`,\n                        message: translate(\n                            \"notifications.deleteError\",\n                            {\n                                resource: resourceSingular,\n                                statusCode: err.statusCode,\n                            },\n                            `Error (status code: ${err.statusCode})`,\n                        ),\n                        description: err.message,\n                        type: \"error\",\n                    });\n                }\n            },\n            mutationKey: keys()\n                .data()\n                .mutation(\"deleteMany\")\n                .get(preferLegacyKeys),\n            ...mutationOptions,\n            meta: {\n                ...mutationOptions?.meta,\n                ...getXRay(\"useDeleteMany\", preferLegacyKeys),\n            },\n        },\n    );\n\n    const { elapsedTime } = useLoadingOvertime({\n        isLoading: mutation.isLoading,\n        interval: overtimeOptions?.interval,\n        onInterval: overtimeOptions?.onInterval,\n    });\n\n    return { ...mutation, overtime: { elapsedTime } };\n};\n","import { pickNotDeprecated } from \"@definitions/index\";\nimport { useDataProvider, useResource } from \"@hooks\";\n\nexport const useApiUrl = (dataProviderName?: string): string => {\n    const dataProvider = useDataProvider();\n    const { resource } = useResource();\n\n    const { getApiUrl } = dataProvider(\n        dataProviderName ??\n            pickNotDeprecated(resource?.meta, resource?.options)\n                ?.dataProviderName,\n    );\n\n    return getApiUrl();\n};\n","import {\n    QueryObserverResult,\n    useQuery,\n    UseQueryOptions,\n} from \"@tanstack/react-query\";\nimport { getXRay } from \"@refinedev/devtools-internal\";\n\nimport { pickNotDeprecated, useActiveAuthProvider } from \"@definitions/helpers\";\nimport {\n    useDataProvider,\n    useHandleNotification,\n    useMeta,\n    useOnError,\n    useTranslate,\n} from \"@hooks\";\nimport {\n    BaseRecord,\n    CrudFilters,\n    CrudSorting,\n    CustomResponse,\n    HttpError,\n    MetaQuery,\n    Prettify,\n    SuccessErrorNotification,\n} from \"../../interfaces\";\nimport {\n    useLoadingOvertime,\n    UseLoadingOvertimeOptionsProps,\n    UseLoadingOvertimeReturnType,\n} from \"../useLoadingOvertime\";\nimport { useKeys } from \"@hooks/useKeys\";\n\ninterface UseCustomConfig<TQuery, TPayload> {\n    /**\n     * @deprecated `sort` is deprecated, use `sorters` instead.\n     */\n    sort?: CrudSorting;\n    sorters?: CrudSorting;\n    filters?: CrudFilters;\n    query?: TQuery;\n    payload?: TPayload;\n    headers?: {};\n}\n\nexport type UseCustomProps<TQueryFnData, TError, TQuery, TPayload, TData> = {\n    /**\n     * request's URL\n     */\n    url: string;\n    /**\n     * request's method (`GET`, `POST`, etc.)\n     */\n    method: \"get\" | \"delete\" | \"head\" | \"options\" | \"post\" | \"put\" | \"patch\";\n    /**\n     * The config of your request. You can send headers, payload, query, filters and sorters using this field\n     */\n    config?: UseCustomConfig<TQuery, TPayload>;\n    /**\n     * react-query's [useQuery](https://tanstack.com/query/v4/docs/reference/useQuery) options\"\n     */\n    queryOptions?: UseQueryOptions<\n        CustomResponse<TQueryFnData>,\n        TError,\n        CustomResponse<TData>\n    >;\n    /**\n     * meta data for `dataProvider`\n     */\n    meta?: MetaQuery;\n    /**\n     * meta data for `dataProvider`\n     * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n     */\n    metaData?: MetaQuery;\n    /**\n     * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use.\n     */\n    dataProviderName?: string;\n} & SuccessErrorNotification<\n    CustomResponse<TData>,\n    TError,\n    Prettify<UseCustomConfig<TQuery, TPayload> & MetaQuery>\n> &\n    UseLoadingOvertimeOptionsProps;\n\n/**\n * `useCustom` is a modified version of `react-query`'s {@link https://react-query.tanstack.com/guides/queries `useQuery`} used for custom requests.\n *\n * It uses the `custom` method from the `dataProvider` which is passed to `<Refine>`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/data/useCustom} for more details.\n *\n * @typeParam TQueryFnData - Result data returned by the query function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TQuery - Values for query params\n * @typeParam TPayload - Values for params\n * @typeParam TData - Result data returned by the `select` function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}. Defaults to `TQueryFnData`\n *\n */\n\nexport const useCustom = <\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TQuery = unknown,\n    TPayload = unknown,\n    TData extends BaseRecord = TQueryFnData,\n>({\n    url,\n    method,\n    config,\n    queryOptions,\n    successNotification,\n    errorNotification,\n    meta,\n    metaData,\n    dataProviderName,\n    overtimeOptions,\n}: UseCustomProps<\n    TQueryFnData,\n    TError,\n    TQuery,\n    TPayload,\n    TData\n>): QueryObserverResult<CustomResponse<TData>, TError> &\n    UseLoadingOvertimeReturnType => {\n    const dataProvider = useDataProvider();\n    const authProvider = useActiveAuthProvider();\n    const { mutate: checkError } = useOnError({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n    const translate = useTranslate();\n    const handleNotification = useHandleNotification();\n    const getMeta = useMeta();\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const preferredMeta = pickNotDeprecated(meta, metaData);\n\n    const { custom } = dataProvider(dataProviderName);\n\n    const combinedMeta = getMeta({ meta: preferredMeta });\n\n    if (custom) {\n        const queryResponse = useQuery<\n            CustomResponse<TQueryFnData>,\n            TError,\n            CustomResponse<TData>\n        >({\n            queryKey: keys()\n                .data(dataProviderName)\n                .mutation(\"custom\")\n                .params({\n                    method,\n                    url,\n                    ...config,\n                    ...(preferredMeta || {}),\n                })\n                .get(preferLegacyKeys),\n            queryFn: ({ queryKey, pageParam, signal }) =>\n                custom<TQueryFnData>({\n                    url,\n                    method,\n                    ...config,\n                    meta: {\n                        ...combinedMeta,\n                        queryContext: {\n                            queryKey,\n                            pageParam,\n                            signal,\n                        },\n                    },\n                    metaData: {\n                        ...combinedMeta,\n                        queryContext: {\n                            queryKey,\n                            pageParam,\n                            signal,\n                        },\n                    },\n                }),\n            ...queryOptions,\n            onSuccess: (data) => {\n                queryOptions?.onSuccess?.(data);\n\n                const notificationConfig =\n                    typeof successNotification === \"function\"\n                        ? successNotification(data, {\n                              ...config,\n                              ...combinedMeta,\n                          })\n                        : successNotification;\n\n                handleNotification(notificationConfig);\n            },\n            onError: (err: TError) => {\n                checkError(err);\n                queryOptions?.onError?.(err);\n\n                const notificationConfig =\n                    typeof errorNotification === \"function\"\n                        ? errorNotification(err, {\n                              ...config,\n                              ...combinedMeta,\n                          })\n                        : errorNotification;\n\n                handleNotification(notificationConfig, {\n                    key: `${method}-notification`,\n                    message: translate(\n                        \"notifications.error\",\n                        { statusCode: err.statusCode },\n                        `Error (status code: ${err.statusCode})`,\n                    ),\n                    description: err.message,\n                    type: \"error\",\n                });\n            },\n            meta: {\n                ...queryOptions?.meta,\n                ...getXRay(\"useCustom\", preferLegacyKeys),\n            },\n        });\n        const { elapsedTime } = useLoadingOvertime({\n            isLoading: queryResponse.isFetching,\n            interval: overtimeOptions?.interval,\n            onInterval: overtimeOptions?.onInterval,\n        });\n\n        return { ...queryResponse, overtime: { elapsedTime } };\n    } else {\n        throw Error(\"Not implemented custom on data provider.\");\n    }\n};\n","import {\n    useMutation,\n    UseMutationOptions,\n    UseMutationResult,\n} from \"@tanstack/react-query\";\nimport { getXRay } from \"@refinedev/devtools-internal\";\n\nimport {\n    useDataProvider,\n    useHandleNotification,\n    useTranslate,\n    useOnError,\n    useMeta,\n} from \"@hooks\";\nimport {\n    CreateResponse,\n    BaseRecord,\n    HttpError,\n    SuccessErrorNotification,\n    MetaQuery,\n    Prettify,\n} from \"../../interfaces\";\nimport { pickNotDeprecated, useActiveAuthProvider } from \"@definitions/helpers\";\nimport {\n    useLoadingOvertime,\n    UseLoadingOvertimeOptionsProps,\n    UseLoadingOvertimeReturnType,\n} from \"../useLoadingOvertime\";\nimport { useKeys } from \"@hooks/useKeys\";\n\ninterface UseCustomMutationConfig {\n    headers?: {};\n}\n\ntype useCustomMutationParams<TData, TError, TVariables> = {\n    url: string;\n    method: \"post\" | \"put\" | \"patch\" | \"delete\";\n    values: TVariables;\n    /**\n     * Meta data for `dataProvider`\n     */\n    meta?: MetaQuery;\n    /**\n     * Meta data for `dataProvider`\n     * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n     */\n    metaData?: MetaQuery;\n    dataProviderName?: string;\n    config?: UseCustomMutationConfig;\n} & SuccessErrorNotification<\n    CreateResponse<TData>,\n    TError,\n    Prettify<UseCustomMutationConfig & MetaQuery>\n>;\n\nexport type UseCustomMutationReturnType<\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n> = UseMutationResult<\n    CreateResponse<TData>,\n    TError,\n    useCustomMutationParams<TData, TError, TVariables>,\n    unknown\n>;\n\nexport type UseCustomMutationProps<\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n> = {\n    mutationOptions?: Omit<\n        UseMutationOptions<\n            CreateResponse<TData>,\n            TError,\n            useCustomMutationParams<TData, TError, TVariables>,\n            unknown\n        >,\n        \"mutationFn\" | \"onError\" | \"onSuccess\"\n    >;\n} & UseLoadingOvertimeOptionsProps;\n\n/**\n * `useCustomMutation` is a modified version of `react-query`'s {@link https://react-query.tanstack.com/reference/useMutation `useMutation`} for create mutations.\n *\n * It uses the `custom` method from the `dataProvider` which is passed to `<Refine>`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/data/useCustomMutation} for more details.\n *\n * @typeParam TData - Result data of the query extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences/#httperror `HttpError`}\n * @typeParam TVariables - Values for mutation function\n *\n */\n\nexport const useCustomMutation = <\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n>({\n    mutationOptions,\n    overtimeOptions,\n}: UseCustomMutationProps<\n    TData,\n    TError,\n    TVariables\n> = {}): UseCustomMutationReturnType<TData, TError, TVariables> &\n    UseLoadingOvertimeReturnType => {\n    const authProvider = useActiveAuthProvider();\n    const { mutate: checkError } = useOnError({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n    const handleNotification = useHandleNotification();\n    const dataProvider = useDataProvider();\n    const translate = useTranslate();\n    const getMeta = useMeta();\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const mutation = useMutation<\n        CreateResponse<TData>,\n        TError,\n        useCustomMutationParams<TData, TError, TVariables>,\n        unknown\n    >(\n        ({\n            url,\n            method,\n            values,\n            meta,\n            metaData,\n            dataProviderName,\n            config,\n        }: useCustomMutationParams<TData, TError, TVariables>) => {\n            const combinedMeta = getMeta({\n                meta: pickNotDeprecated(meta, metaData),\n            });\n\n            const { custom } = dataProvider(dataProviderName);\n\n            if (custom) {\n                return custom<TData>({\n                    url,\n                    method,\n                    payload: values,\n                    meta: combinedMeta,\n                    metaData: combinedMeta,\n                    headers: { ...config?.headers },\n                });\n            }\n\n            throw Error(\"Not implemented custom on data provider.\");\n        },\n        {\n            onSuccess: (\n                data,\n                {\n                    successNotification: successNotificationFromProp,\n                    config,\n                    meta,\n                    metaData,\n                },\n            ) => {\n                const notificationConfig =\n                    typeof successNotificationFromProp === \"function\"\n                        ? successNotificationFromProp(data, {\n                              ...config,\n                              ...(pickNotDeprecated(meta, metaData) || {}),\n                          })\n                        : successNotificationFromProp;\n\n                handleNotification(notificationConfig);\n            },\n            onError: (\n                err: TError,\n                {\n                    errorNotification: errorNotificationFromProp,\n                    method,\n                    config,\n                    meta,\n                    metaData,\n                },\n            ) => {\n                checkError(err);\n\n                const notificationConfig =\n                    typeof errorNotificationFromProp === \"function\"\n                        ? errorNotificationFromProp(err, {\n                              ...config,\n                              ...(pickNotDeprecated(meta, metaData) || {}),\n                          })\n                        : errorNotificationFromProp;\n\n                handleNotification(notificationConfig, {\n                    key: `${method}-notification`,\n                    message: translate(\n                        \"notifications.error\",\n                        { statusCode: err.statusCode },\n                        `Error (status code: ${err.statusCode})`,\n                    ),\n                    description: err.message,\n                    type: \"error\",\n                });\n            },\n            mutationKey: keys()\n                .data()\n                .mutation(\"customMutation\")\n                .get(preferLegacyKeys),\n            ...mutationOptions,\n            meta: {\n                ...mutationOptions?.meta,\n                ...getXRay(\"useCustomMutation\", preferLegacyKeys),\n            },\n        },\n    );\n\n    const { elapsedTime } = useLoadingOvertime({\n        isLoading: mutation.isLoading,\n        interval: overtimeOptions?.interval,\n        onInterval: overtimeOptions?.onInterval,\n    });\n\n    return { ...mutation, overtime: { elapsedTime } };\n};\n","import { useCallback, useContext } from \"react\";\n\nimport { DataContext } from \"@contexts/data\";\nimport {\n    IDataContextProvider,\n    IDataMultipleContextProvider,\n} from \"../../interfaces\";\n\nexport const useDataProvider = (): ((\n    /**\n     * The name of the `data provider` you want to access\n     */\n    dataProviderName?: string,\n) => IDataContextProvider) => {\n    const context = useContext<IDataMultipleContextProvider>(DataContext);\n\n    const handleDataProvider = useCallback(\n        (dataProviderName?: string) => {\n            if (dataProviderName) {\n                const dataProvider = context[dataProviderName];\n                if (!dataProvider) {\n                    throw new Error(\n                        `\"${dataProviderName}\" Data provider not found`,\n                    );\n                }\n                return context[dataProviderName];\n            }\n            if (context.default) {\n                return context.default;\n            } else\n                throw new Error(\n                    `There is no \"default\" data provider. Please pass dataProviderName.`,\n                );\n        },\n        [context],\n    );\n\n    return handleDataProvider;\n};\n","import React from \"react\";\nimport { ReactNode } from \"react\";\n\nimport {\n    IDataContextProvider,\n    IDataMultipleContextProvider,\n} from \"../../interfaces\";\n\nexport const defaultDataProvider = () => {\n    return {\n        default: {\n            create: () => Promise.resolve({ data: { id: 1 } }),\n            createMany: () => Promise.resolve({ data: [] }),\n            deleteOne: () => Promise.resolve({ data: { id: 1 } }),\n            deleteMany: () => Promise.resolve({ data: [] }),\n            getList: () => Promise.resolve({ data: [], total: 0 }),\n            getMany: () => Promise.resolve({ data: [] }),\n            getOne: () => Promise.resolve({ data: { id: 1 } }),\n            update: () => Promise.resolve({ data: { id: 1 } }),\n            updateMany: () => Promise.resolve({ data: [] }),\n            custom: () => Promise.resolve({ data: {} }),\n            getApiUrl: () => \"\",\n        },\n    };\n};\n\nexport const DataContext = React.createContext<IDataMultipleContextProvider>(\n    defaultDataProvider() as IDataMultipleContextProvider,\n);\n\nexport const DataContextProvider: React.FC<\n    | IDataMultipleContextProvider\n    | (IDataContextProvider & {\n          children: ReactNode;\n      })\n> = ({ children, ...rest }) => {\n    let dataProviders;\n    if (!rest.getList || !rest.getOne) {\n        dataProviders = rest as IDataMultipleContextProvider;\n    } else {\n        dataProviders = {\n            default: rest,\n        } as IDataMultipleContextProvider;\n    }\n    return (\n        <DataContext.Provider value={dataProviders}>\n            {children}\n        </DataContext.Provider>\n    );\n};\n","import { getXRay } from \"@refinedev/devtools-internal\";\nimport {\n    InfiniteData,\n    InfiniteQueryObserverResult,\n    useInfiniteQuery,\n    UseInfiniteQueryOptions,\n} from \"@tanstack/react-query\";\n\nimport {\n    getNextPageParam,\n    getPreviousPageParam,\n    handlePaginationParams,\n    pickDataProvider,\n    pickNotDeprecated,\n    useActiveAuthProvider,\n} from \"@definitions/helpers\";\nimport {\n    useDataProvider,\n    useHandleNotification,\n    useMeta,\n    useOnError,\n    useResource,\n    useResourceSubscription,\n    useTranslate,\n} from \"@hooks\";\nimport {\n    BaseRecord,\n    CrudFilters,\n    CrudSorting,\n    GetListResponse,\n    HttpError,\n    LiveModeProps,\n    MetaQuery,\n    Pagination,\n    Prettify,\n    SuccessErrorNotification,\n} from \"../../interfaces\";\n\nimport { useKeys } from \"@hooks/useKeys\";\nimport {\n    useLoadingOvertime,\n    UseLoadingOvertimeOptionsProps,\n    UseLoadingOvertimeReturnType,\n} from \"../useLoadingOvertime\";\n\nexport interface UseInfiniteListConfig {\n    pagination?: Pagination;\n    hasPagination?: boolean;\n    sort?: CrudSorting;\n    filters?: CrudFilters;\n}\n\ntype BaseInfiniteListProps = {\n    /**\n     *  Metadata query for `dataProvider`\n     */\n    meta?: MetaQuery;\n    /**\n     *  Metadata query for `dataProvider`\n     *  @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n     */\n    metaData?: MetaQuery;\n    /**\n     * Configuration for pagination, sorting and filtering\n     * @type [`useInfiniteListConfig`](/docs/api-reference/core/hooks/data/useInfiniteList/#config-parameters)\n     * @deprecated `config` property is deprecated. Use `pagination`, `hasPagination`, `sorters` and `filters` instead.\n     */\n    config?: UseInfiniteListConfig;\n    /**\n     * Pagination properties\n     */\n    pagination?: Pagination;\n    /**\n     * Whether to use server-side pagination or not\n     * @deprecated `hasPagination` property is deprecated. Use `pagination.mode` instead.\n     */\n    hasPagination?: boolean;\n    /**\n     * Sorter parameters\n     */\n    sorters?: CrudSorting;\n    /**\n     * Filter parameters\n     */\n    filters?: CrudFilters;\n    /**\n     * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use\n     */\n    dataProviderName?: string;\n};\n\nexport type UseInfiniteListProps<TQueryFnData, TError, TData> = {\n    /**\n     * Resource name for API data interactions\n     */\n    resource: string;\n    /**\n     * Tanstack Query's [useInfiniteQuery](https://tanstack.com/query/v4/docs/react/reference/useInfiniteQuery) options\n     */\n    queryOptions?: UseInfiniteQueryOptions<\n        GetListResponse<TQueryFnData>,\n        TError,\n        GetListResponse<TData>\n    >;\n} & BaseInfiniteListProps &\n    SuccessErrorNotification<\n        InfiniteData<GetListResponse<TData>>,\n        TError,\n        Prettify<BaseInfiniteListProps>\n    > &\n    LiveModeProps &\n    UseLoadingOvertimeOptionsProps;\n\n/**\n * `useInfiniteList` is a modified version of `react-query`'s {@link https://tanstack.com/query/latest/docs/react/guides/infinite-queries `useInfiniteQuery`} used for retrieving items from a `resource` with pagination, sort, and filter configurations.\n *\n * It uses the `getList` method as the query function from the `dataProvider` which is passed to `<Refine>`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/data/useInfiniteList} for more details.\n *\n * @typeParam TQueryFnData - Result data returned by the query function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TData - Result data returned by the `select` function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}. Defaults to `TQueryFnData`\n *\n */\n\nexport const useInfiniteList = <\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TData extends BaseRecord = TQueryFnData,\n>({\n    resource: resourceFromProp,\n    config,\n    filters,\n    hasPagination,\n    pagination,\n    sorters,\n    queryOptions,\n    successNotification,\n    errorNotification,\n    meta,\n    metaData,\n    liveMode,\n    onLiveEvent,\n    liveParams,\n    dataProviderName,\n    overtimeOptions,\n}: UseInfiniteListProps<\n    TQueryFnData,\n    TError,\n    TData\n>): InfiniteQueryObserverResult<GetListResponse<TData>, TError> &\n    UseLoadingOvertimeReturnType => {\n    const { resources, resource, identifier } = useResource(resourceFromProp);\n\n    const dataProvider = useDataProvider();\n    const translate = useTranslate();\n    const authProvider = useActiveAuthProvider();\n    const { mutate: checkError } = useOnError({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n    const handleNotification = useHandleNotification();\n    const getMeta = useMeta();\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const pickedDataProvider = pickDataProvider(\n        identifier,\n        dataProviderName,\n        resources,\n    );\n    const preferredMeta = pickNotDeprecated(meta, metaData);\n    const prefferedFilters = pickNotDeprecated(filters, config?.filters);\n    const prefferedSorters = pickNotDeprecated(sorters, config?.sort);\n    const prefferedHasPagination = pickNotDeprecated(\n        hasPagination,\n        config?.hasPagination,\n    );\n    const prefferedPagination = handlePaginationParams({\n        pagination,\n        configPagination: config?.pagination,\n        hasPagination: prefferedHasPagination,\n    });\n    const isServerPagination = prefferedPagination.mode === \"server\";\n    const notificationValues = {\n        meta: preferredMeta,\n        metaData: preferredMeta,\n        filters: prefferedFilters,\n        hasPagination: isServerPagination,\n        pagination: prefferedPagination,\n        sorters: prefferedSorters,\n        config: {\n            ...config,\n            sort: prefferedSorters,\n        },\n    };\n\n    const isEnabled =\n        queryOptions?.enabled === undefined || queryOptions?.enabled === true;\n\n    const combinedMeta = getMeta({ resource, meta: preferredMeta });\n\n    const { getList } = dataProvider(pickedDataProvider);\n\n    useResourceSubscription({\n        resource: identifier,\n        types: [\"*\"],\n        params: {\n            meta: combinedMeta,\n            metaData: combinedMeta,\n            pagination: prefferedPagination,\n            hasPagination: isServerPagination,\n            sort: prefferedSorters,\n            sorters: prefferedSorters,\n            filters: prefferedFilters,\n            subscriptionType: \"useList\",\n            ...liveParams,\n        },\n        channel: `resources/${resource.name}`,\n        enabled: isEnabled,\n        liveMode,\n        onLiveEvent,\n        dataProviderName: pickedDataProvider,\n        meta: {\n            ...combinedMeta,\n            dataProviderName,\n        },\n    });\n\n    const queryResponse = useInfiniteQuery<\n        GetListResponse<TQueryFnData>,\n        TError,\n        GetListResponse<TData>\n    >(\n        keys()\n            .data(pickedDataProvider)\n            .resource(identifier)\n            .action(\"infinite\")\n            .params({\n                ...(preferredMeta || {}),\n                filters: prefferedFilters,\n                hasPagination: isServerPagination,\n                ...(isServerPagination && {\n                    pagination: prefferedPagination,\n                }),\n                ...(sorters && {\n                    sorters,\n                }),\n                ...(config?.sort && {\n                    sort: config?.sort,\n                }),\n            })\n            .get(preferLegacyKeys),\n        ({ queryKey, pageParam, signal }) => {\n            const paginationProperties = {\n                ...prefferedPagination,\n                current: pageParam,\n            };\n\n            return getList<TQueryFnData>({\n                resource: resource.name,\n                pagination: paginationProperties,\n                hasPagination: isServerPagination,\n                filters: prefferedFilters,\n                sort: prefferedSorters,\n                sorters: prefferedSorters,\n                meta: {\n                    ...combinedMeta,\n                    queryContext: {\n                        queryKey,\n                        pageParam,\n                        signal,\n                    },\n                },\n                metaData: {\n                    ...combinedMeta,\n                    queryContext: {\n                        queryKey,\n                        pageParam,\n                        signal,\n                    },\n                },\n            }).then(({ data, total, ...rest }) => {\n                return {\n                    data,\n                    total,\n                    pagination: paginationProperties,\n                    ...rest,\n                };\n            });\n        },\n        {\n            getNextPageParam: (lastPage) => getNextPageParam(lastPage),\n            getPreviousPageParam: (lastPage) => getPreviousPageParam(lastPage),\n            ...queryOptions,\n            onSuccess: (data) => {\n                queryOptions?.onSuccess?.(data);\n\n                const notificationConfig =\n                    typeof successNotification === \"function\"\n                        ? successNotification(\n                              data,\n                              notificationValues,\n                              identifier,\n                          )\n                        : successNotification;\n\n                handleNotification(notificationConfig);\n            },\n            onError: (err: TError) => {\n                checkError(err);\n                queryOptions?.onError?.(err);\n\n                const notificationConfig =\n                    typeof errorNotification === \"function\"\n                        ? errorNotification(err, notificationValues, identifier)\n                        : errorNotification;\n\n                handleNotification(notificationConfig, {\n                    key: `${identifier}-useInfiniteList-notification`,\n                    message: translate(\n                        \"notifications.error\",\n                        { statusCode: err.statusCode },\n                        `Error (status code: ${err.statusCode})`,\n                    ),\n                    description: err.message,\n                    type: \"error\",\n                });\n            },\n            meta: {\n                ...queryOptions?.meta,\n                ...getXRay(\"useInfiniteList\", preferLegacyKeys),\n            },\n        },\n    );\n\n    const { elapsedTime } = useLoadingOvertime({\n        isLoading: queryResponse.isFetching,\n        interval: overtimeOptions?.interval,\n        onInterval: overtimeOptions?.onInterval,\n    });\n\n    return { ...queryResponse, overtime: { elapsedTime } };\n};\n","import React from \"react\";\n\nimport { ILiveContext, ILiveContextProvider } from \"./ILiveContext\";\n\nexport const LiveContext = React.createContext<ILiveContext>(undefined);\n\nexport const LiveContextProvider: React.FC<ILiveContextProvider> = ({\n    liveProvider,\n    children,\n}) => {\n    return (\n        <LiveContext.Provider value={liveProvider}>\n            {children}\n        </LiveContext.Provider>\n    );\n};\n","import { useCallback } from \"react\";\nimport {\n    InvalidateOptions,\n    InvalidateQueryFilters,\n    useQueryClient,\n} from \"@tanstack/react-query\";\n\nimport { useResource } from \"@hooks/resource\";\nimport { pickDataProvider } from \"@definitions\";\nimport { BaseKey, IQueryKeys } from \"../../interfaces\";\nimport { useKeys } from \"@hooks/useKeys\";\n\nexport type UseInvalidateProp = {\n    resource?: string;\n    id?: BaseKey;\n    dataProviderName?: string;\n    invalidates: Array<keyof IQueryKeys> | false;\n    invalidationFilters?: InvalidateQueryFilters;\n    invalidationOptions?: InvalidateOptions;\n};\n\nexport const useInvalidate = (): ((\n    props: UseInvalidateProp,\n) => Promise<void>) => {\n    const { resources } = useResource();\n    const queryClient = useQueryClient();\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const invalidate = useCallback(\n        async ({\n            resource,\n            dataProviderName,\n            invalidates,\n            id,\n            invalidationFilters = { type: \"all\", refetchType: \"active\" },\n            invalidationOptions = { cancelRefetch: false },\n        }: UseInvalidateProp) => {\n            if (invalidates === false) {\n                return;\n            }\n            const dp = pickDataProvider(resource, dataProviderName, resources);\n\n            const queryKey = keys()\n                .data(dp)\n                .resource(resource ?? \"\");\n\n            await Promise.all(\n                invalidates.map((key) => {\n                    switch (key) {\n                        case \"all\":\n                            return queryClient.invalidateQueries(\n                                keys().data(dp).get(preferLegacyKeys),\n                                invalidationFilters,\n                                invalidationOptions,\n                            );\n                        case \"list\":\n                            return queryClient.invalidateQueries(\n                                queryKey.action(\"list\").get(preferLegacyKeys),\n                                invalidationFilters,\n                                invalidationOptions,\n                            );\n                        case \"many\":\n                            return queryClient.invalidateQueries(\n                                queryKey.action(\"many\").get(preferLegacyKeys),\n                                invalidationFilters,\n                                invalidationOptions,\n                            );\n                        case \"resourceAll\":\n                            return queryClient.invalidateQueries(\n                                queryKey.get(preferLegacyKeys),\n                                invalidationFilters,\n                                invalidationOptions,\n                            );\n                        case \"detail\":\n                            return queryClient.invalidateQueries(\n                                queryKey\n                                    .action(\"one\")\n                                    .id(id || \"\")\n                                    .get(preferLegacyKeys),\n                                invalidationFilters,\n                                invalidationOptions,\n                            );\n                        default:\n                            return;\n                    }\n                }),\n            );\n\n            return;\n        },\n        [],\n    );\n\n    return invalidate;\n};\n","import { useContext } from \"react\";\n\nimport { ResourceContext } from \"@contexts/resource\";\nimport {\n    Action,\n    BaseKey,\n    IResourceItem,\n    ResourceRouterParams,\n} from \"../../../interfaces\";\nimport { useRouterContext, useResourceWithRoute } from \"@hooks\";\nimport { useRouterType } from \"../../../contexts/router-picker\";\nimport { useParsed } from \"../../router/use-parsed\";\nimport { pickResource } from \"../../../definitions/helpers/pick-resource\";\n\nexport type UseResourceLegacyProps = {\n    /**\n     * Determines which resource to use for redirection\n     * @deprecated resourceName deprecated. Use resourceNameOrRouteName instead # https://github.com/refinedev/refine/issues/1618\n     */\n    resourceName?: string;\n    /**\n     * Determines which resource to use for redirection\n     * @default Resource name that it reads from route\n     */\n    resourceNameOrRouteName?: string;\n    /**\n     * Adds id to the end of the URL\n     * @deprecated resourceName deprecated. Use resourceNameOrRouteName instead # https://github.com/refinedev/refine/issues/1618\n     */\n    recordItemId?: BaseKey;\n};\n\n/**\n * Matches the resource by identifier.\n * If not provided, the resource from the route will be returned.\n * If your resource does not explicitly define an identifier, the resource name will be used.\n */\nexport type UseResourceParam = string | undefined;\n\ntype SelectReturnType<T extends boolean> = T extends true\n    ? { resource: IResourceItem; identifier: string }\n    : { resource: IResourceItem; identifier: string } | undefined;\n\nexport type UseResourceReturnType = {\n    resources: IResourceItem[];\n    resource?: IResourceItem;\n    /**\n     * @deprecated Use `resource.name` instead when you need to get the resource name.\n     */\n    resourceName?: string;\n    id?: BaseKey;\n    action?: Action;\n    select: <T extends boolean = true>(\n        resourceName: string,\n        force?: T,\n    ) => SelectReturnType<T>;\n    identifier?: string;\n};\n\ntype UseResourceReturnTypeWithResource = UseResourceReturnType & {\n    resource: IResourceItem;\n    identifier: string;\n};\n\n/**\n * @deprecated Use `useResource` with `identifier` property instead. (`identifier` does not check by route name in new router)\n */\nexport function useResource(\n    props: UseResourceLegacyProps,\n): UseResourceReturnType;\nexport function useResource(): UseResourceReturnType;\nexport function useResource<TIdentifier = UseResourceParam>(\n    identifier: TIdentifier,\n): TIdentifier extends NonNullable<UseResourceParam>\n    ? UseResourceReturnTypeWithResource\n    : UseResourceReturnType;\n/**\n * `useResource` is used to get `resources` that are defined as property of the `<Refine>` component.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/resource/useResource} for more details.\n */\nexport function useResource(\n    args?: UseResourceLegacyProps | UseResourceParam,\n): UseResourceReturnType {\n    const { resources } = useContext(ResourceContext);\n\n    const routerType = useRouterType();\n\n    const params = useParsed();\n\n    const oldProps = {\n        resourceName:\n            args && typeof args !== \"string\" ? args.resourceName : args,\n        resourceNameOrRouteName:\n            args && typeof args !== \"string\"\n                ? args.resourceNameOrRouteName\n                : args,\n        recordItemId:\n            args && typeof args !== \"string\" ? args.recordItemId : undefined,\n    };\n\n    const select = <T extends boolean = true>(\n        resourceName: string,\n        force = true,\n    ): SelectReturnType<T> => {\n        const isLegacy = routerType === \"legacy\";\n        const pickedResource = pickResource(resourceName, resources, isLegacy);\n\n        if (pickedResource) {\n            return {\n                resource: pickedResource,\n                identifier: pickedResource.identifier ?? pickedResource.name,\n            } as SelectReturnType<T>;\n        }\n\n        if (force) {\n            const resource: IResourceItem = {\n                name: resourceName,\n                identifier: resourceName,\n            };\n\n            const identifier = resource.identifier ?? resource.name;\n\n            return {\n                resource,\n                identifier,\n            } as SelectReturnType<T>;\n        }\n\n        return undefined as SelectReturnType<T>;\n    };\n\n    /**\n     * Legacy Router - Start\n     *\n     * using `useParams` and `route` to match resource and get params.\n     */\n    const resourceWithRoute = useResourceWithRoute();\n\n    const { useParams } = useRouterContext();\n\n    const legacyParams = useParams<Partial<ResourceRouterParams>>();\n\n    if (routerType === \"legacy\") {\n        const resourceKeyToCheck = oldProps.resourceNameOrRouteName\n            ? oldProps.resourceNameOrRouteName\n            : legacyParams.resource;\n\n        const legacyResource = resourceKeyToCheck\n            ? resourceWithRoute(resourceKeyToCheck)\n            : undefined;\n        const legacyId = oldProps?.recordItemId ?? legacyParams.id;\n        const legacyAction = legacyParams.action;\n        const legacyResourceName =\n            oldProps?.resourceName ?? legacyResource?.name;\n        const legacyIdentifier =\n            legacyResource?.identifier ?? legacyResource?.name;\n\n        return {\n            resources,\n            resource: legacyResource,\n            resourceName: legacyResourceName,\n            id: legacyId,\n            action: legacyAction,\n            select,\n            identifier: legacyIdentifier,\n        };\n    }\n    /** Legacy Router - End */\n\n    /** New Router */\n    let resource: IResourceItem | undefined = undefined;\n    // we try to pick the resource from props first\n    const identifier =\n        typeof args === \"string\" ? args : oldProps?.resourceNameOrRouteName;\n    if (identifier) {\n        const pickedFromProps = pickResource(identifier, resources);\n        if (pickedFromProps) {\n            resource = pickedFromProps;\n        } else {\n            resource = {\n                name: identifier as string,\n            };\n        }\n    } else if (params?.resource) {\n        resource = params.resource;\n    }\n\n    return {\n        resources,\n        resource,\n        resourceName: resource?.name,\n        id: params.id,\n        action: params.action,\n        select,\n        identifier: resource?.identifier ?? resource?.name,\n    };\n}\n","import React from \"react\";\n\nimport { IResourceContext } from \"./IResourceContext\";\nimport {\n    IResourceItem,\n    ResourceProps,\n} from \"../../interfaces/bindings/resource\";\nimport { useDeepMemo } from \"@hooks/deepMemo\";\nimport { legacyResourceTransform } from \"@definitions/helpers\";\n\nexport {\n    IResourceItem,\n    IResourceComponents,\n    IResourceComponentsProps,\n    IResourceContext,\n} from \"../../interfaces/bindings/resource\";\n\nexport const ResourceContext = React.createContext<IResourceContext>({\n    resources: [],\n});\n\nexport const ResourceContextProvider: React.FC<\n    React.PropsWithChildren<{ resources: ResourceProps[] }>\n> = ({ resources: providedResources, children }) => {\n    const resources: IResourceItem[] = useDeepMemo(() => {\n        return legacyResourceTransform(providedResources ?? []);\n    }, [providedResources]);\n\n    return (\n        <ResourceContext.Provider value={{ resources }}>\n            {children}\n        </ResourceContext.Provider>\n    );\n};\n","import React, { useMemo } from \"react\";\nimport { useMemoized } from \"@hooks/memoized\";\n\n/**\n * Hook that memoizes the given dependency array and checks the consecutive calls with deep equality and returns the same value as the first call if dependencies are not changed.\n * @internal\n */\nexport const useDeepMemo = <T,>(\n    fn: () => T,\n    dependencies: React.DependencyList,\n): T => {\n    const memoizedDependencies = useMemoized(dependencies);\n\n    const value = useMemo(fn, memoizedDependencies);\n\n    return value;\n};\n","import { useRef } from \"react\";\nimport isEqual from \"lodash/isEqual\";\n\n/**\n * Hook that memoizes the given value with deep equality.\n * @internal\n */\nexport const useMemoized = <T = unknown,>(value: T): T => {\n    const ref = useRef(value);\n\n    if (!isEqual(ref.current, value)) {\n        ref.current = value;\n    }\n\n    return ref.current;\n};\n","import React from \"react\";\n\n/**\n * This context is used to determine which router to use.\n *\n * This is a temporary solution until we remove the legacy router.\n */\n\nexport const RouterPickerContext = React.createContext<\"legacy\" | \"new\">(\"new\");\n\nexport const RouterPickerProvider = RouterPickerContext.Provider;\n\n/**\n * This is a temporary hook to determine which router to use.\n * It will be removed once the legacy router is removed.\n * @internal This is an internal hook.\n */\nexport const useRouterType = () => {\n    const value = React.useContext(RouterPickerContext);\n    return value;\n};\n","import React from \"react\";\nimport { useParse } from \"../use-parse\";\n\nexport const useParsed = <\n    TParams extends Record<string, any> = Record<string, any>,\n>() => {\n    const parse = useParse();\n\n    const parsed = React.useMemo(() => parse<TParams>(), [parse]);\n\n    return parsed;\n};\n","import React, { createContext, PropsWithChildren } from \"react\";\nimport { RouterBindings } from \"src/interfaces\";\n\nconst defaultBindings = {};\n\nexport const RouterBindingsContext =\n    createContext<RouterBindings>(defaultBindings);\n\nexport const RouterBindingsProvider: React.FC<\n    PropsWithChildren<{ router?: RouterBindings }>\n> = ({ children, router }) => {\n    return (\n        <RouterBindingsContext.Provider value={router ?? defaultBindings}>\n            {children}\n        </RouterBindingsContext.Provider>\n    );\n};\n","import { RouterBindingsContext } from \"@contexts/router\";\nimport React, { useContext } from \"react\";\nimport { ParseFunction, ParseResponse } from \"src/interfaces\";\n\ntype UseParseType = () => <\n    TParams extends Record<string, any> = Record<string, any>,\n>() => ParseResponse<TParams>;\n\nexport const useParse: UseParseType = () => {\n    const bindings = useContext(RouterBindingsContext);\n\n    const useParse = React.useMemo(\n        () =>\n            bindings?.parse ??\n            (() =>\n                (() => {\n                    return {};\n                }) as ParseFunction),\n        [bindings?.parse],\n    );\n\n    const parse = useParse();\n\n    return parse as ReturnType<UseParseType>;\n};\n","import { useContext, useCallback } from \"react\";\nimport { ResourceContext } from \"@contexts/resource\";\nimport { IResourceItem } from \"../../../interfaces\";\nimport { pickResource } from \"@definitions/helpers/pick-resource\";\n\nexport type UseResourceWithRouteReturnType = (route: string) => IResourceItem;\n\n/**\n * @deprecated Use `useResource` hook instead.\n * @internal This hook is for internal use only. And is kept for backward compatibility.\n */\nexport const useResourceWithRoute = (): UseResourceWithRouteReturnType => {\n    const { resources } = useContext(ResourceContext);\n\n    const resourceWithRoute = useCallback(\n        (route: string) => {\n            const picked = pickResource(route, resources, true);\n            if (picked) {\n                return picked;\n            }\n            return { name: route, route: route } as IResourceItem;\n        },\n        [resources],\n    );\n\n    return resourceWithRoute;\n};\n","import { LiveContext } from \"@contexts/live\";\nimport { RefineContext } from \"@contexts/refine\";\nimport { useInvalidate } from \"@hooks/invalidate\";\nimport { useResource } from \"@hooks/resource\";\nimport { useContext, useEffect } from \"react\";\nimport {\n    BaseKey,\n    CrudFilters,\n    CrudSorting,\n    ILiveContext,\n    IRefineContext,\n    LiveEvent,\n    LiveModeProps,\n    MetaQuery,\n    Pagination,\n} from \"../../../interfaces\";\n\nexport type UseResourceSubscriptionProps = {\n    channel: string;\n    params?: {\n        ids?: BaseKey[];\n        id?: BaseKey;\n        /**\n         * @deprecated `params.meta` is depcerated. Use `meta` directly from the root level instead.\n         */\n        meta?: MetaQuery;\n        /**\n         * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n         */\n        metaData?: MetaQuery;\n        pagination?: Pagination;\n        /**\n         * @deprecated `hasPagination` is deprecated, use `pagination.mode` instead.\n         */\n        hasPagination?: boolean;\n        /**\n         * @deprecated `sort` is deprecated. Use `sorters` instead.\n         */\n        sort?: CrudSorting;\n        sorters?: CrudSorting;\n        filters?: CrudFilters;\n        subscriptionType: \"useList\" | \"useOne\" | \"useMany\";\n        [key: string]: any;\n    };\n    types: LiveEvent[\"type\"][];\n    resource?: string;\n    enabled?: boolean;\n    /**\n     * @deprecated use `meta.dataProviderName` instead.\n     */\n    dataProviderName?: string;\n    meta?: MetaQuery & { dataProviderName?: string };\n} & LiveModeProps;\n\nexport type PublishType = {\n    (event: LiveEvent): void;\n};\n\nexport const useResourceSubscription = ({\n    resource: resourceFromProp,\n    params,\n    channel,\n    types,\n    enabled = true,\n    liveMode: liveModeFromProp,\n    onLiveEvent,\n    dataProviderName: dataProviderNameFromProps,\n    meta,\n}: UseResourceSubscriptionProps): void => {\n    const { resource, identifier } = useResource(resourceFromProp);\n\n    const liveDataContext = useContext<ILiveContext>(LiveContext);\n    const {\n        liveMode: liveModeFromContext,\n        onLiveEvent: onLiveEventContextCallback,\n    } = useContext<IRefineContext>(RefineContext);\n\n    const liveMode = liveModeFromProp ?? liveModeFromContext;\n\n    const invalidate = useInvalidate();\n\n    const dataProviderName =\n        dataProviderNameFromProps ??\n        meta?.dataProviderName ??\n        resource?.meta?.dataProviderName;\n\n    useEffect(() => {\n        let subscription: any;\n\n        const callback = (event: LiveEvent) => {\n            if (liveMode === \"auto\") {\n                invalidate({\n                    resource: identifier,\n                    dataProviderName,\n                    invalidates: [\"resourceAll\"],\n                    invalidationFilters: {\n                        type: \"active\",\n                        refetchType: \"active\",\n                    },\n                    invalidationOptions: { cancelRefetch: false },\n                });\n            }\n\n            onLiveEvent?.(event);\n            onLiveEventContextCallback?.(event);\n        };\n\n        if (liveMode && liveMode !== \"off\" && enabled) {\n            subscription = liveDataContext?.subscribe({\n                channel,\n                params: {\n                    resource: resource?.name,\n                    ...params,\n                },\n                types,\n                callback,\n                dataProviderName,\n                meta: {\n                    ...meta,\n                    dataProviderName,\n                },\n            });\n        }\n\n        return () => {\n            if (subscription) {\n                liveDataContext?.unsubscribe(subscription);\n            }\n        };\n    }, [enabled]);\n};\n","import { useContext } from \"react\";\nimport { LiveModeProps, IRefineContext } from \"../../../interfaces\";\nimport { RefineContext } from \"@contexts/refine\";\n\nexport const useLiveMode = (\n    liveMode: LiveModeProps[\"liveMode\"],\n): LiveModeProps[\"liveMode\"] => {\n    const { liveMode: liveModeFromContext } =\n        useContext<IRefineContext>(RefineContext);\n\n    return liveMode ?? liveModeFromContext;\n};\n","import { useContext, useEffect } from \"react\";\n\nimport { LiveContext } from \"@contexts/live\";\nimport {\n    BaseKey,\n    CrudFilters,\n    CrudSorting,\n    ILiveContext,\n    LiveEvent,\n    MetaQuery,\n    Pagination,\n} from \"../../../interfaces\";\n\nexport type UseSubscriptionProps = {\n    /**\n     * Channel name to subscribe.\n     */\n    channel: string;\n    /**\n     * Callback that is run when new events from subscription arrive.\n     */\n    onLiveEvent: (event: LiveEvent) => void;\n    /**\n     * Type of events to subscribe. `\"*\"` means all events.\n     * @type Array<\"deleted\" | \"updated\" | \"created\" | \"*\" | string>\n     */\n    types?: LiveEvent[\"type\"][];\n    /**\n     * Determines subscription should subscribe or not.\n     * @type Array<\"deleted\" | \"updated\" | \"created\" | \"*\" | string>\n     */\n    enabled?: boolean;\n    params?: {\n        ids?: BaseKey[];\n        id?: BaseKey;\n        /**\n         * @deprecated `params.meta` is depcerated. Use `meta` directly from the root level instead.\n         */\n        meta?: MetaQuery;\n        /**\n         * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n         */\n        metaData?: MetaQuery;\n        pagination?: Pagination;\n        /**\n         * @deprecated `hasPagination` is deprecated, use `pagination.mode` instead.\n         */\n        hasPagination?: boolean;\n        /**\n         * @deprecated `sort` is deprecated, use `sorters` instead.\n         */\n        sort?: CrudSorting;\n        sorters?: CrudSorting;\n        filters?: CrudFilters;\n        subscriptionType?: \"useList\" | \"useOne\" | \"useMany\";\n        resource?: string;\n        [key: string]: any;\n    };\n    /**\n     * @deprecated use `meta.dataProviderName` instead.\n     */\n    dataProviderName?: string;\n    meta?: MetaQuery & { dataProviderName?: string };\n};\n\nexport const useSubscription = ({\n    params,\n    channel,\n    types = [\"*\"],\n    enabled = true,\n    onLiveEvent,\n    dataProviderName = \"default\",\n    meta,\n}: UseSubscriptionProps): void => {\n    const liveDataContext = useContext<ILiveContext>(LiveContext);\n\n    useEffect(() => {\n        let subscription: any;\n\n        if (enabled) {\n            subscription = liveDataContext?.subscribe({\n                channel,\n                params,\n                types,\n                callback: onLiveEvent,\n                dataProviderName,\n                meta: {\n                    ...meta,\n                    dataProviderName,\n                },\n            });\n        }\n\n        return () => {\n            if (subscription) {\n                liveDataContext?.unsubscribe(subscription);\n            }\n        };\n    }, [enabled]);\n};\n","import { useContext } from \"react\";\n\nimport { LiveContext } from \"@contexts/live\";\nimport { ILiveContext } from \"../../../interfaces\";\n\nexport const usePublish: () => NonNullable<ILiveContext>[\"publish\"] = () => {\n    const liveContext = useContext<ILiveContext>(LiveContext);\n\n    return liveContext?.publish;\n};\n","import { useContext } from \"react\";\n\nimport { UndoableQueueContext } from \"@contexts/undoableQueue\";\nimport { IUndoableQueue, IUndoableQueueContext } from \"../../../interfaces\";\n\nexport type UseCancelNotificationType = () => {\n    notifications: IUndoableQueue[];\n    notificationDispatch: React.Dispatch<any>;\n};\n\nexport const useCancelNotification: UseCancelNotificationType = () => {\n    const { notifications, notificationDispatch } =\n        useContext<IUndoableQueueContext>(UndoableQueueContext);\n\n    return { notifications, notificationDispatch };\n};\n","import { useContext } from \"react\";\n\nimport { NotificationContext } from \"@contexts/notification\";\nimport { INotificationContext } from \"../../../interfaces\";\n\nexport const useNotification = (): INotificationContext => {\n    const { open, close } = useContext(NotificationContext);\n\n    return { open, close };\n};\n","import React, { createContext } from \"react\";\n\nimport { INotificationContext } from \"./INotificationContext\";\n\n/** @deprecated default value for notification context has no use and is an empty object.  */\nexport const defaultNotificationProvider: INotificationContext = {};\n\nexport const NotificationContext = createContext<INotificationContext>({});\n\nexport const NotificationContextProvider: React.FC<\n    INotificationContext & {\n        children?: React.ReactNode;\n    }\n> = ({ open, close, children }) => {\n    return (\n        <NotificationContext.Provider value={{ open, close }}>\n            {children}\n        </NotificationContext.Provider>\n    );\n};\n","import { useCallback } from \"react\";\n\nimport { OpenNotificationParams } from \"../../../interfaces\";\nimport { useNotification } from \"@hooks\";\n\nexport const useHandleNotification = (): typeof handleNotification => {\n    const { open } = useNotification();\n\n    const handleNotification = useCallback(\n        (\n            notification: OpenNotificationParams | false | undefined,\n            fallbackNotification?: OpenNotificationParams,\n        ) => {\n            if (notification !== false) {\n                if (notification) {\n                    open?.(notification);\n                } else if (fallbackNotification) {\n                    open?.(fallbackNotification);\n                }\n            }\n        },\n        [],\n    );\n\n    return handleNotification;\n};\n","import { useCallback, useContext } from \"react\";\nimport { TranslationContext } from \"@contexts/translation\";\n\n/**\n * If you need to change the locale at runtime, refine provides the `useSetLocale` hook.\n * It returns the changeLocale method from `i18nProvider` under the hood.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/translate/useSetLocale} for more details.\n */\nexport const useSetLocale = () => {\n    const { i18nProvider } = useContext(TranslationContext);\n\n    return useCallback((lang: string) => i18nProvider?.changeLocale(lang), []);\n};\n","import React from \"react\";\n\nimport { ITranslationContext } from \"../../interfaces\";\n\n/** @deprecated default value for translation context has no use and is an empty object.  */\nexport const defaultProvider: ITranslationContext = {};\n\nexport const TranslationContext = React.createContext<ITranslationContext>({});\n\nexport const TranslationContextProvider: React.FC<\n    ITranslationContext & {\n        children?: React.ReactNode;\n    }\n> = ({ children, i18nProvider }) => {\n    return (\n        <TranslationContext.Provider\n            value={{\n                i18nProvider: i18nProvider,\n            }}\n        >\n            {children}\n        </TranslationContext.Provider>\n    );\n};\n","import { useContext, useMemo } from \"react\";\nimport { TranslationContext } from \"@contexts/translation\";\n\n/**\n * If you need to translate the texts in your own components, refine provides the `useTranslate` hook.\n * It returns the translate method from `i18nProvider` under the hood.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/translate/useTranslate} for more details.\n */\nexport const useTranslate = () => {\n    const { i18nProvider } = useContext(TranslationContext);\n\n    const fn = useMemo(() => {\n        function translate(\n            key: string,\n            options?: any,\n            defaultMessage?: string,\n        ): string;\n        function translate(key: string, defaultMessage?: string): string;\n\n        function translate(\n            key: string,\n            options?: string | any,\n            defaultMessage?: string,\n        ) {\n            return (\n                i18nProvider?.translate(key, options, defaultMessage) ??\n                defaultMessage ??\n                (typeof options === \"string\" &&\n                typeof defaultMessage === \"undefined\"\n                    ? options\n                    : key)\n            );\n        }\n\n        return translate;\n    }, [i18nProvider]);\n\n    return fn;\n};\n","import { useContext, useCallback } from \"react\";\nimport { TranslationContext } from \"@contexts/translation\";\n\nexport type UseGetLocaleType = () => () => string | undefined;\n\n/**\n * If you need to know the current locale, refine provides the `useGetLocale` hook.\n * It returns the `getLocale` method from `i18nProvider` under the hood.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/translate/useGetLocale} for more details.\n */\nexport const useGetLocale: UseGetLocaleType = () => {\n    const { i18nProvider } = useContext(TranslationContext);\n\n    return useCallback(() => i18nProvider?.getLocale(), []);\n};\n","import { useState } from \"react\";\nimport { useResource, useDataProvider, useMeta } from \"@hooks\";\nimport {\n    BaseRecord,\n    MapDataFn,\n    CrudSorting,\n    CrudFilters,\n    MetaQuery,\n} from \"../../interfaces\";\nimport {\n    useUserFriendlyName,\n    pickDataProvider,\n    pickNotDeprecated,\n} from \"@definitions\";\nimport { ExportToCsv, Options } from \"export-to-csv-fix-source-map\";\n\ntype UseExportOptionsType<\n    TData extends BaseRecord = BaseRecord,\n    TVariables = any,\n> = {\n    /**\n     * Resource name for API data interactions\n     * @default Resource name that it reads from route\n     * @deprecated `resourceName` is deprecated. Use `resource` instead.\n     */\n    resourceName?: string;\n    /**\n     * Resource name for API data interactions\n     * @default Resource name that it reads from route\n     */\n    resource?: string;\n    /**\n     * A mapping function that runs for every record. Mapped data will be included in the file contents\n     */\n    mapData?: MapDataFn<TData, TVariables>;\n    /**\n     *  Sorts records\n     *  @deprecated `sorter` is deprecated. Use `sorters` instead.\n     */\n    sorter?: CrudSorting;\n    /**\n     *  Sorts records\n     */\n    sorters?: CrudSorting;\n    /**\n     *  Filters records\n     */\n    filters?: CrudFilters;\n    maxItemCount?: number;\n    /**\n     *  Requests to fetch data are made as batches by page size. By default, it is 20. Used for `getList` method of `DataProvider`\n     */\n    pageSize?: number;\n    /**\n     *  Used for exporting options\n     *  @type [Options](https://github.com/alexcaza/export-to-csv)\n     */\n    exportOptions?: Options;\n    /**\n     *  Metadata query for `dataProvider`\n     */\n    meta?: MetaQuery;\n    /**\n     *  Metadata query for `dataProvider`\n     * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n     */\n    metaData?: MetaQuery;\n    /**\n     * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use.\n     */\n    dataProviderName?: string;\n    /**\n     *  Callback to handle error events of this hook\n     */\n    onError?: (error: any) => void;\n};\n\ntype UseExportReturnType = {\n    isLoading: boolean;\n    triggerExport: () => Promise<void>;\n};\n\n/**\n * `useExport` hook allows you to make your resources exportable.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/import-export/useExport} for more details.\n *\n * @typeParam TData - Result data of the query extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TVariables - Values for params.\n *\n */\nexport const useExport = <\n    TData extends BaseRecord = BaseRecord,\n    TVariables = any,\n>({\n    resourceName,\n    resource: resourceFromProps,\n    sorter,\n    sorters,\n    filters,\n    maxItemCount,\n    pageSize = 20,\n    mapData = (item) => item as any,\n    exportOptions,\n    meta,\n    metaData,\n    dataProviderName,\n    onError,\n}: UseExportOptionsType<TData, TVariables> = {}): UseExportReturnType => {\n    const [isLoading, setIsLoading] = useState(false);\n\n    const dataProvider = useDataProvider();\n    const getMeta = useMeta();\n    const { resource, resources, identifier } = useResource(\n        pickNotDeprecated(resourceFromProps, resourceName),\n    );\n    const getFriendlyName = useUserFriendlyName();\n\n    const filename = `${getFriendlyName(\n        identifier,\n        \"plural\",\n    )}-${new Date().toLocaleString()}`;\n\n    const { getList } = dataProvider(\n        pickDataProvider(identifier, dataProviderName, resources),\n    );\n\n    const combinedMeta = getMeta({\n        resource,\n        meta: pickNotDeprecated(meta, metaData),\n    });\n\n    const triggerExport = async () => {\n        setIsLoading(true);\n\n        let rawData: BaseRecord[] = [];\n\n        let current = 1;\n        let preparingData = true;\n        while (preparingData) {\n            try {\n                const { data, total } = await getList<TData>({\n                    resource: resource?.name ?? \"\",\n                    filters,\n                    sort: pickNotDeprecated(sorters, sorter),\n                    sorters: pickNotDeprecated(sorters, sorter),\n                    pagination: {\n                        current,\n                        pageSize,\n                        mode: \"server\",\n                    },\n                    meta: combinedMeta,\n                    metaData: combinedMeta,\n                });\n\n                current++;\n\n                rawData.push(...data);\n\n                if (maxItemCount && rawData.length >= maxItemCount) {\n                    rawData = rawData.slice(0, maxItemCount);\n                    preparingData = false;\n                }\n\n                if (total === rawData.length) {\n                    preparingData = false;\n                }\n            } catch (error) {\n                setIsLoading(false);\n                preparingData = false;\n\n                onError?.(error);\n\n                return;\n            }\n        }\n\n        const csvExporter = new ExportToCsv({\n            filename,\n            useKeysAsHeaders: true,\n            ...exportOptions,\n        });\n\n        csvExporter.generateCsv(rawData.map(mapData as any));\n\n        setIsLoading(false);\n    };\n\n    return {\n        isLoading,\n        triggerExport,\n    };\n};\n","import React, { Dispatch, SetStateAction } from \"react\";\nimport { QueryObserverResult, UseQueryOptions } from \"@tanstack/react-query\";\nimport warnOnce from \"warn-once\";\nimport debounce from \"lodash/debounce\";\n\nimport {\n    useWarnAboutChange,\n    useCreate,\n    useUpdate,\n    useRedirectionAfterSubmission,\n    useMutationMode,\n    useOne,\n    useRefineContext,\n    useMeta,\n    useInvalidate,\n} from \"@hooks\";\n\nimport {\n    BaseRecord,\n    CreateResponse,\n    GetOneResponse,\n    HttpError,\n    LiveModeProps,\n    RedirectAction,\n    SuccessErrorNotification,\n    UpdateResponse,\n    MutationMode,\n    BaseKey,\n    IQueryKeys,\n    FormAction,\n    MetaQuery,\n    AutoSaveProps,\n    AutoSaveReturnType,\n    OptimisticUpdateMapType,\n} from \"../../interfaces\";\nimport {\n    UpdateParams,\n    UseUpdateProps,\n    UseUpdateReturnType,\n} from \"../data/useUpdate\";\nimport { UseCreateProps, UseCreateReturnType } from \"../data/useCreate\";\nimport { redirectPage } from \"@definitions/helpers\";\nimport { useResource } from \"../resource/useResource\";\nimport { pickNotDeprecated } from \"@definitions/helpers\";\nimport {\n    useLoadingOvertime,\n    UseLoadingOvertimeOptionsProps,\n    UseLoadingOvertimeReturnType,\n} from \"../useLoadingOvertime\";\n\nexport type ActionParams = {\n    /**\n     * Type of the form mode\n     * @default Action that it reads from route otherwise \"create\" is used\n     */\n    action?: FormAction;\n};\n\ntype ActionFormProps<\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n    TData extends BaseRecord = TQueryFnData,\n    TResponse extends BaseRecord = TData,\n    TResponseError extends HttpError = TError,\n> = {\n    /**\n     * Resource name for API data interactions\n     * @default Resource name that it reads from route\n     */\n    resource?: string;\n    /**\n     * Record id for fetching\n     * @default Id that it reads from the URL\n     */\n    id?: BaseKey;\n    /**\n     * Page to redirect after a succesfull mutation\n     * @type `\"show\" | \"edit\" | \"list\" | \"create\" | false`\n     * @default `\"list\"`\n     */\n    redirect?: RedirectAction;\n    /**\n     * Metadata query for dataProvider\n     */\n    meta?: MetaQuery;\n    /**\n     * Metadata query for dataProvider\n     * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n     */\n    metaData?: MetaQuery;\n    /**\n     * Metadata to pass for the `useOne` query\n     */\n    queryMeta?: MetaQuery;\n    /**\n     * Metadata to pass for the mutation (`useCreate` for `create` and `clone` actions, `useUpdate` for `edit` action)\n     */\n    mutationMeta?: MetaQuery;\n    /**\n     * [Determines when mutations are executed](/advanced-tutorials/mutation-mode.md)\n     * @default `\"pessimistic\"*`\n     */\n    mutationMode?: MutationMode;\n    /**\n     * Called when a mutation is successful\n     */\n    onMutationSuccess?: (\n        data: CreateResponse<TResponse> | UpdateResponse<TResponse>,\n        variables: TVariables,\n        context: any,\n        isAutoSave?: boolean,\n    ) => void;\n    /**\n     * Called when a mutation encounters an error\n     */\n    onMutationError?: (\n        error: TResponseError,\n        variables: TVariables,\n        context: any,\n        isAutoSave?: boolean,\n    ) => void;\n    /**\n     * Duration to wait before executing mutations when `mutationMode = \"undoable\"`\n     * @default `5000*`\n     */\n    undoableTimeout?: number;\n    /**\n     * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use.\n     */\n    dataProviderName?: string;\n    /**\n     * You can use it to manage the invalidations that will occur at the end of the mutation.\n     * @type  `all`, `resourceAll`, `list`, `many`, `detail`, `false`\n     * @default `[\"list\", \"many\", \"detail\"]`\n     */\n    invalidates?: Array<keyof IQueryKeys>;\n    /**\n     * react-query's [useQuery](https://tanstack.com/query/v4/docs/reference/useQuery) options of useOne hook used while in edit mode.\n     */\n    queryOptions?: UseQueryOptions<\n        GetOneResponse<TQueryFnData>,\n        TError,\n        GetOneResponse<TData>\n    >;\n    /**\n     * react-query's [useMutation](https://tanstack.com/query/v4/docs/reference/useMutation) options of useCreate hook used while submitting in create and clone modes.\n     */\n    createMutationOptions?: UseCreateProps<\n        TResponse,\n        TResponseError,\n        TVariables\n    >[\"mutationOptions\"];\n    /**\n     * react-query's [useMutation](https://tanstack.com/query/v4/docs/reference/useMutation) options of useUpdate hook used while submitting in edit mode.\n     */\n    updateMutationOptions?: UseUpdateProps<\n        TResponse,\n        TResponseError,\n        TVariables\n    >[\"mutationOptions\"];\n    /**\n     * If you customize the [`optimisticUpdateMap`](https://refine.dev/docs/api-reference/core/hooks/data/useUpdateMany/#optimisticupdatemap) option, you can use it to manage the invalidations that will occur at the end of the mutation.\n     * @default {\n     *   list: true,\n     *   many: true,\n     *   detail: true,\n     * }\n     */\n    optimisticUpdateMap?: OptimisticUpdateMapType<TResponse, TVariables>;\n} & SuccessErrorNotification<\n    UpdateResponse<TResponse> | CreateResponse<TResponse>,\n    TResponseError,\n    { id: BaseKey; values: TVariables } | TVariables\n> &\n    ActionParams &\n    LiveModeProps;\n\nexport type UseFormProps<\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n    TData extends BaseRecord = TQueryFnData,\n    TResponse extends BaseRecord = TData,\n    TResponseError extends HttpError = TError,\n> = ActionFormProps<\n    TQueryFnData,\n    TError,\n    TVariables,\n    TData,\n    TResponse,\n    TResponseError\n> &\n    ActionParams &\n    LiveModeProps &\n    UseLoadingOvertimeOptionsProps &\n    AutoSaveProps<TVariables>;\n\nexport type UseFormReturnType<\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n    TData extends BaseRecord = TQueryFnData,\n    TResponse extends BaseRecord = TData,\n    TResponseError extends HttpError = TError,\n> = {\n    id?: BaseKey;\n    setId: Dispatch<SetStateAction<BaseKey | undefined>>;\n    queryResult?: QueryObserverResult<GetOneResponse<TData>>;\n    mutationResult:\n        | UseUpdateReturnType<TResponse, TResponseError, TVariables>\n        | UseCreateReturnType<TResponse, TResponseError, TVariables>;\n    formLoading: boolean;\n    onFinish: (\n        values: TVariables,\n    ) => Promise<CreateResponse<TResponse> | UpdateResponse<TResponse> | void>;\n    redirect: (\n        redirect: RedirectAction,\n        idFromFunction?: BaseKey | undefined,\n        routeParams?: Record<string, string | number>,\n    ) => void;\n} & UseLoadingOvertimeReturnType &\n    AutoSaveReturnType<TResponse, TResponseError, TVariables>;\n\n/**\n * `useForm` is used to manage forms. It uses Ant Design {@link https://ant.design/components/form/ Form} data scope management under the hood and returns the required props for managing the form actions.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/useForm} for more details.\n *\n * @typeParam TQueryFnData - Result data returned by the query function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TVariables - Values for params. default `{}`\n * @typeParam TData - Result data returned by the `select` function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}. Defaults to `TQueryFnData`\n * @typeParam TResponse - Result data returned by the mutation function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}. Defaults to `TData`\n * @typeParam TResponseError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}. Defaults to `TError`\n *\n */\nexport const useForm = <\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n    TData extends BaseRecord = TQueryFnData,\n    TResponse extends BaseRecord = TData,\n    TResponseError extends HttpError = TError,\n>({\n    resource: resourceFromProps,\n    action: actionFromProps,\n    id: idFromProps,\n    onMutationSuccess,\n    onMutationError,\n    redirect: redirectFromProps,\n    successNotification,\n    errorNotification,\n    meta,\n    metaData,\n    queryMeta,\n    mutationMeta,\n    mutationMode: mutationModeProp,\n    liveMode,\n    onLiveEvent,\n    liveParams,\n    undoableTimeout,\n    dataProviderName,\n    invalidates,\n    queryOptions,\n    createMutationOptions,\n    updateMutationOptions,\n    overtimeOptions,\n    autoSave,\n    optimisticUpdateMap,\n}: UseFormProps<\n    TQueryFnData,\n    TError,\n    TVariables,\n    TData,\n    TResponse,\n    TResponseError\n> = {}): UseFormReturnType<\n    TQueryFnData,\n    TError,\n    TVariables,\n    TData,\n    TResponse,\n    TResponseError\n> => {\n    const invalidate = useInvalidate();\n    const { options } = useRefineContext();\n    const getMeta = useMeta();\n\n    const {\n        resource,\n        id: idFromRoute,\n        action: actionFromRoute,\n        identifier,\n    } = useResource(resourceFromProps);\n    const { identifier: inferredIdentifier } = useResource();\n\n    /** We only accept `id` from URL params if `resource` is not explicitly passed. */\n    /** This is done to avoid sending wrong requests for custom `resource` and an async `id` */\n    const getDefaultId = () => {\n        const idFromPropsOrRoute = idFromProps ?? idFromRoute;\n\n        if (resourceFromProps && resourceFromProps !== inferredIdentifier) {\n            return idFromProps;\n        }\n\n        return idFromPropsOrRoute;\n    };\n    const defaultId = getDefaultId();\n\n    // id state is needed to determine selected record in a context for example useModal\n    const [id, setId] = React.useState<BaseKey | undefined>(defaultId);\n\n    /**\n     * In some cases, `id` from the router params is not available at the first render.\n     *\n     * (e.g. when using `Next.js` and client-side-rendering, `router` is not ready to use at the first render)\n     *\n     * We're watching for `defaultId` changes and setting `id` state if it's not equal to `defaultId`.\n     */\n    React.useEffect(() => {\n        setId(defaultId);\n    }, [defaultId]);\n\n    const getAction = () => {\n        if (actionFromProps) return actionFromProps;\n        else if (actionFromRoute === \"edit\" || actionFromRoute === \"clone\")\n            return actionFromRoute;\n        else return \"create\";\n    };\n    const action = getAction();\n\n    const combinedMeta = getMeta({\n        resource,\n        meta: pickNotDeprecated(meta, metaData),\n    });\n\n    const { mutationMode: mutationModeContext } = useMutationMode();\n    const mutationMode = mutationModeProp ?? mutationModeContext;\n\n    const isCreate = action === \"create\";\n    const isEdit = action === \"edit\";\n    const isClone = action === \"clone\";\n\n    warnOnce(\n        (isClone || isEdit) &&\n            Boolean(resourceFromProps) &&\n            !Boolean(idFromProps) &&\n            queryOptions?.enabled !== false,\n        `[useForm]: action: \"${action}\", resource: \"${identifier}\", id: ${id} \\n\\n` +\n            `If you don't use the \\`setId\\` method to set the \\`id\\`, you should pass the \\`id\\` prop to \\`useForm\\`. Otherwise, \\`useForm\\` will not be able to infer the \\`id\\` from the current URL. \\n\\n` +\n            `See https://refine.dev/docs/api-reference/core/hooks/useForm/#resource`,\n    );\n\n    /**\n     * Designated `redirect` route\n     */\n    const designatedRedirectAction = redirectPage({\n        redirectFromProps,\n        action,\n        redirectOptions: options.redirect,\n    });\n\n    const enableQuery = id !== undefined && (isEdit || isClone);\n\n    const queryResult = useOne<TQueryFnData, TError, TData>({\n        resource: identifier,\n        id: id ?? \"\",\n        queryOptions: {\n            enabled: enableQuery,\n            ...queryOptions,\n        },\n        liveMode,\n        onLiveEvent,\n        liveParams,\n        meta: { ...combinedMeta, ...queryMeta },\n        metaData: { ...combinedMeta, ...queryMeta },\n        dataProviderName,\n    });\n\n    const { isFetching: isFetchingQuery } = queryResult;\n\n    const mutationResultCreate = useCreate<\n        TResponse,\n        TResponseError,\n        TVariables\n    >({\n        mutationOptions: createMutationOptions,\n    });\n    const { mutate: mutateCreate, isLoading: isLoadingCreate } =\n        mutationResultCreate;\n\n    const mutationResultUpdate = useUpdate<\n        TResponse,\n        TResponseError,\n        TVariables\n    >({\n        mutationOptions: updateMutationOptions,\n    });\n    const { mutate: mutateUpdate, isLoading: isLoadingUpdate } =\n        mutationResultUpdate;\n\n    const autoSaveMutation = useUpdate<TResponse, TResponseError, TVariables>(\n        {},\n    );\n\n    const { setWarnWhen } = useWarnAboutChange();\n\n    const handleSubmitWithRedirect = useRedirectionAfterSubmission();\n\n    const onFinishCreate = async (values: TVariables) => {\n        setWarnWhen(false);\n\n        const onSuccess = (id?: BaseKey) => {\n            handleSubmitWithRedirect({\n                redirect: designatedRedirectAction,\n                resource,\n                id,\n                meta: pickNotDeprecated(meta, metaData),\n            });\n        };\n\n        if (mutationMode !== \"pessimistic\") {\n            setTimeout(() => {\n                onSuccess();\n            });\n        }\n\n        return new Promise<CreateResponse<TResponse> | void>(\n            (resolve, reject) => {\n                if (mutationMode !== \"pessimistic\") {\n                    resolve();\n                }\n\n                if (!resource) return;\n\n                return mutateCreate(\n                    {\n                        values,\n                        resource: identifier ?? resource.name,\n                        successNotification,\n                        errorNotification,\n                        meta: { ...combinedMeta, ...mutationMeta },\n                        metaData: { ...combinedMeta, ...mutationMeta },\n                        dataProviderName,\n                        invalidates,\n                    },\n                    {\n                        onSuccess: (data, _, context) => {\n                            if (onMutationSuccess) {\n                                onMutationSuccess(data, values, context);\n                            }\n\n                            const responseId = data?.data?.id;\n\n                            onSuccess(responseId);\n\n                            resolve(data);\n                        },\n                        onError: (error: TResponseError, _, context) => {\n                            if (onMutationError) {\n                                return onMutationError(error, values, context);\n                            }\n                            reject();\n                        },\n                    },\n                );\n            },\n        );\n    };\n\n    React.useEffect(() => {\n        return () => {\n            if (\n                autoSave?.invalidateOnUnmount &&\n                autoSaveMutation.status === \"success\"\n            ) {\n                invalidate({\n                    id,\n                    invalidates: invalidates || [\"list\", \"many\", \"detail\"],\n                    dataProviderName,\n                    resource: identifier,\n                });\n            }\n        };\n    }, [autoSave?.invalidateOnUnmount, autoSaveMutation.status]);\n\n    const onFinishAutoSaveMutation = (\n        values: TVariables,\n    ): Promise<UpdateResponse<TResponse> | void> | void => {\n        if (!resource || !isEdit) return;\n\n        const variables: UpdateParams<TResponse, TResponseError, TVariables> = {\n            id: id ?? \"\",\n            values,\n            resource: identifier ?? resource.name,\n            successNotification: false,\n            errorNotification: false,\n            meta: { ...combinedMeta, ...mutationMeta },\n            metaData: { ...combinedMeta, ...mutationMeta },\n            dataProviderName,\n            invalidates: [],\n            mutationMode: \"pessimistic\",\n        };\n\n        return autoSaveMutation.mutate(variables, {\n            onSuccess: (data, _, context) => {\n                if (onMutationSuccess) {\n                    onMutationSuccess(data, values, context, true);\n                }\n            },\n            onError: (error: TResponseError, _, context) => {\n                if (onMutationError) {\n                    return onMutationError(error, values, context, true);\n                }\n            },\n        });\n    };\n\n    const onFinishAutoSave = debounce((allValues) => {\n        return onFinishAutoSaveMutation(allValues);\n    }, autoSave?.debounce || 1000);\n\n    const onFinishUpdate = async (values: TVariables) => {\n        setWarnWhen(false);\n\n        if (!resource) return;\n\n        const variables: UpdateParams<TResponse, TResponseError, TVariables> = {\n            id: id ?? \"\",\n            values,\n            resource: identifier ?? resource.name,\n            mutationMode,\n            undoableTimeout,\n            successNotification,\n            errorNotification,\n            meta: { ...combinedMeta, ...mutationMeta },\n            metaData: { ...combinedMeta, ...mutationMeta },\n            dataProviderName,\n            invalidates,\n            optimisticUpdateMap,\n        };\n\n        const onSuccess = () => {\n            handleSubmitWithRedirect({\n                redirect: designatedRedirectAction,\n                resource,\n                id,\n                meta: pickNotDeprecated(meta, metaData),\n            });\n        };\n\n        // setWarnWhen is set to \"false\" at the start of the mutation. With the help of setTimeout we guarantee that the value false is set.\n        if (mutationMode !== \"pessimistic\") {\n            setTimeout(() => {\n                onSuccess();\n            });\n        }\n\n        // setTimeout is required to make onSuccess e.g. callbacks to work if component unmounts i.e. on route change\n        return new Promise<UpdateResponse<TResponse> | void>(\n            (resolve, reject) => {\n                if (mutationMode !== \"pessimistic\") {\n                    resolve();\n                }\n                return setTimeout(() => {\n                    mutateUpdate(variables, {\n                        onSuccess: (data, _, context) => {\n                            if (onMutationSuccess) {\n                                onMutationSuccess(data, values, context);\n                            }\n\n                            if (mutationMode === \"pessimistic\") {\n                                onSuccess();\n                            }\n\n                            resolve(data);\n                        },\n                        onError: (error: TResponseError, _, context) => {\n                            if (onMutationError) {\n                                return onMutationError(error, values, context);\n                            }\n                            reject();\n                        },\n                    });\n                });\n            },\n        );\n    };\n\n    const createResult = {\n        formLoading: isFetchingQuery || isLoadingCreate,\n        mutationResult: mutationResultCreate,\n        onFinish: onFinishCreate,\n    };\n\n    const editResult = {\n        formLoading: isFetchingQuery || isLoadingUpdate,\n        mutationResult: mutationResultUpdate,\n        onFinish: onFinishUpdate,\n    };\n\n    const result = isCreate || isClone ? createResult : editResult;\n\n    const { elapsedTime } = useLoadingOvertime({\n        isLoading: result.mutationResult.isLoading || queryResult.isFetching,\n        interval: overtimeOptions?.interval,\n        onInterval: overtimeOptions?.onInterval,\n    });\n\n    return {\n        ...result,\n        queryResult,\n        onFinishAutoSave,\n        autoSaveProps: {\n            status: autoSaveMutation.status,\n            data: autoSaveMutation.data,\n            error: autoSaveMutation.error,\n        },\n        id,\n        setId,\n        redirect: (redirect, idFromFunction?: BaseKey | undefined) => {\n            handleSubmitWithRedirect({\n                redirect:\n                    redirect !== undefined\n                        ? redirect\n                        : isEdit\n                        ? \"list\"\n                        : \"edit\",\n                resource,\n                id: idFromFunction ?? id,\n                meta: pickNotDeprecated(meta, metaData),\n            });\n        },\n        overtime: {\n            elapsedTime,\n        },\n    };\n};\n","import { useCallback } from \"react\";\n\nimport {\n    BaseKey,\n    IResourceItem,\n    MetaDataQuery,\n    RedirectAction,\n} from \"../../interfaces\";\nimport { useNavigation } from \"@hooks\";\n\nexport type UseRedirectionAfterSubmissionType = () => (options: {\n    redirect: RedirectAction;\n    resource?: IResourceItem;\n    id?: BaseKey;\n    meta?: MetaDataQuery;\n}) => void;\n\nexport const useRedirectionAfterSubmission: UseRedirectionAfterSubmissionType =\n    () => {\n        const { show, edit, list, create } = useNavigation();\n\n        const handleSubmitWithRedirect = useCallback(\n            ({\n                redirect,\n                resource,\n                id,\n                meta = {},\n            }: {\n                redirect: RedirectAction;\n                resource?: IResourceItem;\n                id?: BaseKey;\n                meta?: MetaDataQuery;\n            }) => {\n                if (redirect && resource) {\n                    if (!!resource.show && redirect === \"show\" && id) {\n                        return show(resource, id, undefined, meta);\n                    }\n\n                    if (!!resource.edit && redirect === \"edit\" && id) {\n                        return edit(resource, id, undefined, meta);\n                    }\n\n                    if (!!resource.create && redirect === \"create\") {\n                        return create(resource, undefined, meta);\n                    }\n\n                    return list(resource, \"push\", meta);\n                } else {\n                    return;\n                }\n            },\n            [],\n        );\n\n        return handleSubmitWithRedirect;\n    };\n","import { RouterBindingsContext } from \"@contexts/router\";\nimport { useResource } from \"@hooks/resource\";\nimport React, { useCallback, useContext } from \"react\";\nimport type {\n    Action,\n    BaseKey,\n    GoConfig as GoConfigBase,\n    IResourceItem,\n} from \"../../../interfaces\";\nimport { useGetToPath } from \"../use-get-to-path\";\n\ntype ResourceWithoutId = {\n    /**\n     *  The name or identifier of the resource.\n     */\n    resource: string;\n    action: Extract<Action, \"create\" | \"list\">;\n    id?: never;\n};\n\ntype ResourceWithId = {\n    /**\n     *  The name or identifier of the resource.\n     */\n    resource: string;\n    action: Extract<Action, \"edit\" | \"show\" | \"clone\">;\n    id: BaseKey;\n};\n\nexport type Resource = ResourceWithoutId | ResourceWithId;\n\nexport type GoConfigWithResource = Omit<GoConfigBase, \"to\"> & {\n    to?: GoConfigBase[\"to\"] | Resource;\n};\n\nexport const useGo = () => {\n    const bindings = useContext(RouterBindingsContext);\n    const { select: resourceSelect } = useResource();\n    const getToPath = useGetToPath();\n\n    const useGo = React.useMemo(\n        () => bindings?.go ?? (() => () => undefined),\n        [bindings?.go],\n    );\n\n    const goFromRouter = useGo();\n\n    const go = useCallback(\n        (config: GoConfigWithResource | GoConfigBase) => {\n            if (typeof config.to !== \"object\") {\n                return goFromRouter({ ...config, to: config.to });\n            }\n\n            // when config.to is an object, it means that we want to go to a resource.\n            // so we need to find the path for the resource.\n            const { resource } = resourceSelect(config.to.resource);\n            handleResourceErrors(config.to, resource);\n            const newTo = getToPath({\n                resource,\n                action: config.to.action,\n                meta: {\n                    id: config.to.id,\n                },\n            });\n\n            return goFromRouter({\n                ...config,\n                to: newTo,\n            });\n        },\n        [resourceSelect, goFromRouter],\n    );\n\n    return go;\n};\n\n/**\n * handle errors for resource\n * @internal\n */\nexport const handleResourceErrors = (to: Resource, resource: IResourceItem) => {\n    if (!to?.action || !to?.resource) {\n        throw new Error(`[useGo]: \"action\" or \"resource\" is required.`);\n    }\n\n    if ([\"edit\", \"show\", \"clone\"].includes(to?.action) && !to.id) {\n        throw new Error(\n            `[useGo]: [action: ${to.action}] requires an \"id\" for resource [resource: ${to.resource}]`,\n        );\n    }\n\n    const actionUrl = resource[to.action];\n    if (!actionUrl) {\n        throw new Error(\n            `[useGo]: [action: ${to.action}] is not defined for [resource: ${to.resource}]`,\n        );\n    }\n};\n","import React from \"react\";\nimport { useResource } from \"../../resource\";\nimport { Action, IResourceItem } from \"../../../interfaces\";\nimport { getActionRoutesFromResource } from \"../../../definitions/helpers/router\";\nimport { useParsed } from \"../use-parsed\";\nimport { composeRoute } from \"../../../definitions/helpers/router/compose-route\";\nimport { useRouterType } from \"./../../../contexts/router-picker\";\n\ntype UseToPathParams = {\n    resource?: IResourceItem;\n    action: Action;\n    meta?: Record<string, unknown>;\n    legacy?: boolean;\n};\n\ntype GetToPathFn = (params: UseToPathParams) => string | undefined;\n\n/**\n * Returns a function to get the route for a given action and resource.\n * If resource is not provided, it will use the resource from the route.\n * If the resource is not found, it will return undefined.\n * If the action is not found, it will return undefined.\n * `meta` can be provided to compose the routes with parameters. (Can be used for nested routes.)\n */\nexport const useGetToPath = (): GetToPathFn => {\n    const routerType = useRouterType();\n    const { resource: resourceFromRoute, resources } = useResource();\n    const parsed = useParsed();\n\n    const fn = React.useCallback(\n        ({ resource, action, meta }: UseToPathParams): string | undefined => {\n            const selectedResource = resource || resourceFromRoute;\n\n            if (!selectedResource) {\n                return undefined;\n            }\n\n            const actionRoutes = getActionRoutesFromResource(\n                selectedResource,\n                resources,\n                routerType === \"legacy\",\n            );\n\n            const actionRoute = actionRoutes.find(\n                (item) => item.action === action,\n            )?.route;\n\n            if (!actionRoute) {\n                return undefined;\n            }\n\n            const composed = composeRoute(\n                actionRoute,\n                selectedResource?.meta,\n                parsed,\n                meta,\n            );\n\n            return composed;\n        },\n        [resources, resourceFromRoute, parsed],\n    );\n\n    return fn;\n};\n","import { RouterBindingsContext } from \"@contexts/router\";\nimport React, { useContext } from \"react\";\n\nexport const useBack = () => {\n    const bindings = useContext(RouterBindingsContext);\n\n    const useBack = React.useMemo(\n        () => bindings?.back ?? (() => () => undefined),\n        [bindings?.back],\n    );\n\n    const back = useBack();\n\n    return back;\n};\n","import { useRouterContext, useResource } from \"@hooks\";\nimport { BaseKey, IResourceItem, MetaDataQuery } from \"../../interfaces\";\nimport { useGo } from \"@hooks/router/use-go\";\nimport { useParsed } from \"@hooks/router/use-parsed\";\nimport { useRouterType } from \"@contexts/router-picker\";\nimport { getActionRoutesFromResource } from \"@definitions/helpers/router\";\nimport { pickResource } from \"@definitions/helpers/pick-resource\";\nimport { composeRoute } from \"@definitions/helpers/router/compose-route\";\nimport { useBack } from \"@hooks/router/use-back\";\n\nexport type HistoryType = \"push\" | \"replace\";\n\n/**\n * `refine` uses {@link https://reactrouter.com/en/hooks/use-navigate `React Router`} and comes with all redirects out of the box.\n * It allows you to manage your routing operations in refine.\n * Using this hook, you can manage all the routing operations of your application very easily.\n *\n * @internal This is an internal hook of refine. Do not use it directly.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/navigation/useNavigation} for more details.\n */\nexport const useNavigation = () => {\n    const { resources } = useResource();\n    const routerType = useRouterType();\n    const { useHistory } = useRouterContext();\n    const history = useHistory();\n    const parsed = useParsed();\n    const go = useGo();\n    const back = useBack();\n\n    const handleUrl = (url: string, type: HistoryType = \"push\") => {\n        if (routerType === \"legacy\") {\n            history[type](url);\n        } else {\n            go({ to: url, type });\n        }\n    };\n\n    const createUrl = (\n        resource: string | IResourceItem,\n        meta: MetaDataQuery = {},\n    ) => {\n        if (routerType === \"legacy\") {\n            const resourceItem =\n                typeof resource === \"string\"\n                    ? pickResource(resource, resources, true) ?? {\n                          name: resource,\n                          route: resource,\n                      }\n                    : resource;\n\n            const createActionRoute = getActionRoutesFromResource(\n                resourceItem,\n                resources,\n                true,\n            ).find((r) => r.action === \"create\");\n\n            if (!createActionRoute) {\n                return \"\";\n            }\n\n            return composeRoute(\n                createActionRoute.route,\n                resourceItem?.meta,\n                parsed,\n                meta,\n            );\n        } else {\n            const resourceItem =\n                typeof resource === \"string\"\n                    ? pickResource(resource, resources) ?? { name: resource }\n                    : resource;\n\n            const createActionRoute = getActionRoutesFromResource(\n                resourceItem,\n                resources,\n            ).find((r) => r.action === \"create\")?.route;\n\n            if (!createActionRoute) {\n                return \"\";\n            }\n\n            return go({\n                to: composeRoute(\n                    createActionRoute,\n                    resourceItem?.meta,\n                    parsed,\n                    meta,\n                ),\n                type: \"path\",\n            }) as string;\n        }\n    };\n\n    const editUrl = (\n        resource: string | IResourceItem,\n        id: BaseKey,\n        meta: MetaDataQuery = {},\n    ) => {\n        const encodedId = encodeURIComponent(id);\n        if (routerType === \"legacy\") {\n            const resourceItem =\n                typeof resource === \"string\"\n                    ? pickResource(resource, resources, true) ?? {\n                          name: resource,\n                          route: resource,\n                      }\n                    : resource;\n\n            const editActionRoute = getActionRoutesFromResource(\n                resourceItem,\n                resources,\n                true,\n            ).find((r) => r.action === \"edit\");\n\n            if (!editActionRoute) {\n                return \"\";\n            }\n\n            return composeRoute(\n                editActionRoute.route,\n                resourceItem?.meta,\n                parsed,\n                {\n                    ...meta,\n                    id: encodedId,\n                },\n            );\n        } else {\n            const resourceItem =\n                typeof resource === \"string\"\n                    ? pickResource(resource, resources) ?? { name: resource }\n                    : resource;\n\n            const editActionRoute = getActionRoutesFromResource(\n                resourceItem,\n                resources,\n            ).find((r) => r.action === \"edit\")?.route;\n\n            if (!editActionRoute) {\n                return \"\";\n            }\n\n            return go({\n                to: composeRoute(editActionRoute, resourceItem?.meta, parsed, {\n                    ...meta,\n                    id: encodedId,\n                }),\n                type: \"path\",\n            }) as string;\n        }\n    };\n\n    const cloneUrl = (\n        resource: string | IResourceItem,\n        id: BaseKey,\n        meta: MetaDataQuery = {},\n    ) => {\n        const encodedId = encodeURIComponent(id);\n\n        if (routerType === \"legacy\") {\n            const resourceItem =\n                typeof resource === \"string\"\n                    ? pickResource(resource, resources, true) ?? {\n                          name: resource,\n                          route: resource,\n                      }\n                    : resource;\n\n            const cloneActionRoute = getActionRoutesFromResource(\n                resourceItem,\n                resources,\n                true,\n            ).find((r) => r.action === \"clone\");\n\n            if (!cloneActionRoute) {\n                return \"\";\n            }\n\n            return composeRoute(\n                cloneActionRoute.route,\n                resourceItem?.meta,\n                parsed,\n                {\n                    ...meta,\n                    id: encodedId,\n                },\n            );\n        } else {\n            const resourceItem =\n                typeof resource === \"string\"\n                    ? pickResource(resource, resources) ?? { name: resource }\n                    : resource;\n\n            const cloneActionRoute = getActionRoutesFromResource(\n                resourceItem,\n                resources,\n            ).find((r) => r.action === \"clone\")?.route;\n\n            if (!cloneActionRoute) {\n                return \"\";\n            }\n\n            return go({\n                to: composeRoute(cloneActionRoute, resourceItem?.meta, parsed, {\n                    ...meta,\n                    id: encodedId,\n                }),\n                type: \"path\",\n            }) as string;\n        }\n    };\n\n    const showUrl = (\n        resource: string | IResourceItem,\n        id: BaseKey,\n        meta: MetaDataQuery = {},\n    ) => {\n        const encodedId = encodeURIComponent(id);\n        if (routerType === \"legacy\") {\n            const resourceItem =\n                typeof resource === \"string\"\n                    ? pickResource(resource, resources, true) ?? {\n                          name: resource,\n                          route: resource,\n                      }\n                    : resource;\n\n            const showActionRoute = getActionRoutesFromResource(\n                resourceItem,\n                resources,\n                true,\n            ).find((r) => r.action === \"show\");\n\n            if (!showActionRoute) {\n                return \"\";\n            }\n\n            return composeRoute(\n                showActionRoute.route,\n                resourceItem?.meta,\n                parsed,\n                {\n                    ...meta,\n                    id: encodedId,\n                },\n            );\n        } else {\n            const resourceItem =\n                typeof resource === \"string\"\n                    ? pickResource(resource, resources) ?? { name: resource }\n                    : resource;\n\n            const showActionRoute = getActionRoutesFromResource(\n                resourceItem,\n                resources,\n            ).find((r) => r.action === \"show\")?.route;\n\n            if (!showActionRoute) {\n                return \"\";\n            }\n\n            return go({\n                to: composeRoute(showActionRoute, resourceItem?.meta, parsed, {\n                    ...meta,\n                    id: encodedId,\n                }),\n                type: \"path\",\n            }) as string;\n        }\n    };\n\n    const listUrl = (\n        resource: string | IResourceItem,\n        meta: MetaDataQuery = {},\n    ) => {\n        if (routerType === \"legacy\") {\n            const resourceItem =\n                typeof resource === \"string\"\n                    ? pickResource(resource, resources, true) ?? {\n                          name: resource,\n                          route: resource,\n                      }\n                    : resource;\n\n            const listActionRoute = getActionRoutesFromResource(\n                resourceItem,\n                resources,\n                true,\n            ).find((r) => r.action === \"list\");\n\n            if (!listActionRoute) {\n                return \"\";\n            }\n\n            return composeRoute(\n                listActionRoute.route,\n                resourceItem?.meta,\n                parsed,\n                meta,\n            );\n        } else {\n            const resourceItem =\n                typeof resource === \"string\"\n                    ? pickResource(resource, resources) ?? { name: resource }\n                    : resource;\n\n            const listActionRoute = getActionRoutesFromResource(\n                resourceItem,\n                resources,\n            ).find((r) => r.action === \"list\")?.route;\n\n            if (!listActionRoute) {\n                return \"\";\n            }\n\n            return go({\n                to: composeRoute(\n                    listActionRoute,\n                    resourceItem?.meta,\n                    parsed,\n                    meta,\n                ),\n                type: \"path\",\n            }) as string;\n        }\n    };\n\n    const create = (\n        resource: string | IResourceItem,\n        type: HistoryType = \"push\",\n        meta: MetaDataQuery = {},\n    ) => {\n        handleUrl(createUrl(resource, meta), type);\n    };\n\n    const edit = (\n        resource: string | IResourceItem,\n        id: BaseKey,\n        type: HistoryType = \"push\",\n        meta: MetaDataQuery = {},\n    ) => {\n        handleUrl(editUrl(resource, id, meta), type);\n    };\n\n    const clone = (\n        resource: string | IResourceItem,\n        id: BaseKey,\n        type: HistoryType = \"push\",\n        meta: MetaDataQuery = {},\n    ) => {\n        handleUrl(cloneUrl(resource, id, meta), type);\n    };\n\n    const show = (\n        resource: string | IResourceItem,\n        id: BaseKey,\n        type: HistoryType = \"push\",\n        meta: MetaDataQuery = {},\n    ) => {\n        handleUrl(showUrl(resource, id, meta), type);\n    };\n\n    const list = (\n        resource: string | IResourceItem,\n        type: HistoryType = \"push\",\n        meta: MetaDataQuery = {},\n    ) => {\n        handleUrl(listUrl(resource, meta), type);\n    };\n\n    /**\n     * @deprecated Please use `useGo` hook instead.\n     */\n    const push = (path: string, ...rest: unknown[]) => {\n        if (routerType === \"legacy\") {\n            history.push(path, ...rest);\n        } else {\n            go({ to: path, type: \"push\" });\n        }\n    };\n\n    /**\n     * @deprecated Please use `useGo` hook instead.\n     */\n    const replace = (path: string, ...rest: unknown[]) => {\n        if (routerType === \"legacy\") {\n            history.replace(path, ...rest);\n        } else {\n            go({ to: path, type: \"replace\" });\n        }\n    };\n\n    /**\n     * @deprecated Please use `useBack` hook instead.\n     */\n    const goBack = () => {\n        if (routerType === \"legacy\") {\n            history.goBack();\n        } else {\n            back();\n        }\n    };\n\n    return {\n        create,\n        createUrl,\n        edit,\n        editUrl,\n        clone,\n        cloneUrl,\n        show,\n        showUrl,\n        list,\n        listUrl,\n        push,\n        replace,\n        goBack,\n    };\n};\n","import React, { useState } from \"react\";\nimport { QueryObserverResult, UseQueryOptions } from \"@tanstack/react-query\";\nimport warnOnce from \"warn-once\";\n\nimport { useMeta, useOne } from \"@hooks\";\n\nimport {\n    BaseRecord,\n    GetOneResponse,\n    SuccessErrorNotification,\n    MetaQuery,\n    LiveModeProps,\n    BaseKey,\n    HttpError,\n    Prettify,\n} from \"../../interfaces\";\nimport { useResource } from \"../resource/useResource\";\nimport { pickNotDeprecated } from \"@definitions/helpers\";\nimport {\n    useLoadingOvertime,\n    UseLoadingOvertimeOptionsProps,\n    UseLoadingOvertimeReturnType,\n} from \"../useLoadingOvertime\";\n\nexport type useShowReturnType<TData extends BaseRecord = BaseRecord> = {\n    queryResult: QueryObserverResult<GetOneResponse<TData>>;\n    showId?: BaseKey;\n    setShowId: React.Dispatch<React.SetStateAction<BaseKey | undefined>>;\n} & UseLoadingOvertimeReturnType;\n\nexport type useShowProps<\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TData extends BaseRecord = TQueryFnData,\n> = {\n    /**\n     * Resource name for API data interactions\n     * @default Reads `:resource` from the URL\n     */\n    resource?: string;\n    /**\n     * Data item ID for API data interactions\n     * @default Reads `:id` from the URL\n     */\n    id?: BaseKey;\n    /**\n     * react-query's [useQuery](https://tanstack.com/query/v4/docs/reference/useQuery) options\n     */\n    queryOptions?: UseQueryOptions<\n        GetOneResponse<TQueryFnData>,\n        TError,\n        GetOneResponse<TData>\n    >;\n    /**\n     * Additional meta data to pass to the data provider's `getOne`\n     */\n    meta?: MetaQuery;\n    /**\n     * Additional meta data to pass to the data provider's `getOne`\n     * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n     */\n    metaData?: MetaQuery;\n    /**\n     * Target data provider name for API call to be made\n     * @default `\"default\"`\n     */\n    dataProviderName?: string;\n} & LiveModeProps &\n    SuccessErrorNotification<\n        GetOneResponse<TData>,\n        TError,\n        Prettify<{ id?: BaseKey } & MetaQuery>\n    > &\n    UseLoadingOvertimeOptionsProps;\n\n/**\n * `useShow` hook allows you to fetch the desired record.\n * It uses `getOne` method as query function from the dataProvider that is\n * passed to {@link https://refine.dev/docs/api-reference/core/components/refine-config/ `<Refine>`}.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/show/useShow} for more details.\n *\n * @typeParam TQueryFnData - Result data returned by the query function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TData - Result data returned by the `select` function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}. Defaults to `TQueryFnData`\n *\n */\n\nexport const useShow = <\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TData extends BaseRecord = TQueryFnData,\n>({\n    resource: resourceFromProp,\n    id,\n    successNotification,\n    errorNotification,\n    meta,\n    metaData,\n    liveMode,\n    onLiveEvent,\n    dataProviderName,\n    queryOptions,\n    overtimeOptions,\n}: useShowProps<\n    TQueryFnData,\n    TError,\n    TData\n> = {}): useShowReturnType<TData> => {\n    const {\n        resource,\n        id: idFromRoute,\n        identifier,\n    } = useResource(resourceFromProp);\n    const { identifier: inferredIdentifier } = useResource();\n    const getMeta = useMeta();\n\n    const getDefaultId = () => {\n        const idFromPropsOrRoute = id ?? idFromRoute;\n\n        if (resourceFromProp && resourceFromProp !== inferredIdentifier) {\n            return id;\n        }\n\n        return idFromPropsOrRoute;\n    };\n    const defaultId = getDefaultId();\n\n    const [showId, setShowId] = useState<BaseKey | undefined>(defaultId);\n\n    React.useEffect(() => {\n        setShowId(defaultId);\n    }, [defaultId]);\n\n    const combinedMeta = getMeta({\n        resource,\n        meta: pickNotDeprecated(meta, metaData),\n    });\n\n    warnOnce(\n        Boolean(resourceFromProp) && !Boolean(id),\n        `[useShow]: resource: \"${identifier}\", id: ${id} \\n\\n` +\n            `If you don't use the \\`setShowId\\` method to set the \\`showId\\`, you should pass the \\`id\\` prop to \\`useShow\\`. Otherwise, \\`useShow\\` will not be able to infer the \\`id\\` from the current URL. \\n\\n` +\n            `See https://refine.dev/docs/api-reference/core/hooks/show/useShow/#resource`,\n    );\n\n    const queryResult = useOne<TQueryFnData, TError, TData>({\n        resource: identifier,\n        id: showId ?? \"\",\n        queryOptions: {\n            enabled: showId !== undefined,\n            ...queryOptions,\n        },\n        successNotification,\n        errorNotification,\n        meta: combinedMeta,\n        metaData: combinedMeta,\n        liveMode,\n        onLiveEvent,\n        dataProviderName,\n    });\n\n    const { elapsedTime } = useLoadingOvertime({\n        isLoading: queryResult.isFetching,\n        interval: overtimeOptions?.interval,\n        onInterval: overtimeOptions?.onInterval,\n    });\n\n    return {\n        queryResult,\n        showId,\n        setShowId,\n        overtime: { elapsedTime },\n    };\n};\n","import { useEffect, useState } from \"react\";\nimport { parse, ParseConfig } from \"papaparse\";\nimport chunk from \"lodash/chunk\";\n\nimport { useCreate, useCreateMany, useMeta, useResource } from \"@hooks\";\nimport { MapDataFn, BaseRecord, HttpError, MetaQuery } from \"../../interfaces\";\nimport {\n    importCSVMapper,\n    sequentialPromises,\n    pickNotDeprecated,\n} from \"@definitions\";\nimport { UseCreateReturnType } from \"../../hooks/data/useCreate\";\nimport { UseCreateManyReturnType } from \"../../hooks/data/useCreateMany\";\n\nexport type ImportSuccessResult<TVariables, TData> = {\n    request: TVariables[];\n    type: \"success\";\n    response: TData[];\n};\n\nexport type ImportErrorResult<TVariables> = {\n    request: TVariables[];\n    type: \"error\";\n    response: HttpError[];\n};\n\nexport type OnFinishParams<TVariables, TData> = {\n    succeeded: ImportSuccessResult<TVariables, TData>[];\n    errored: ImportErrorResult<TVariables>[];\n};\n\nexport type OnProgressParams = {\n    totalAmount: number;\n    processedAmount: number;\n};\n\nexport type ImportOptions<\n    TItem,\n    TVariables = any,\n    TData extends BaseRecord = BaseRecord,\n> = {\n    /**\n     * Resource name for API data interactions.\n     * @default Resource name that it reads from route\n     * @deprecated `resourceName` is deprecated. Use `resource` instead.\n     */\n    resourceName?: string;\n    /**\n     * Resource name for API data interactions.\n     * @default Resource name that it reads from route\n     */\n    resource?: string;\n    /**\n     * A mapping function that runs for every record. Mapped data will be included in the file contents.\n     */\n    mapData?: MapDataFn<TItem, TVariables>;\n    /**\n     * Custom Papa Parse options.\n     * @type [`ParseConfig`](https://www.papaparse.com/docs)\n     */\n    paparseOptions?: ParseConfig;\n    /**\n     * Requests batch size. If it is 1, all records are sent one by one. By default, it is [`Number.MAX_SAFE_INTEGER`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/MAX_SAFE_INTEGER) to send all records in one batch. If it is more than 1, `createMany` should be implemented on DataProvider.\n     */\n    batchSize?: number;\n    /**\n     * Called with errors and successful responses when all requests are sent.\n     */\n    onFinish?: (results: OnFinishParams<TVariables, TData>) => void;\n    /**\n     *  Metadata query for `dataProvider`\n     */\n    meta?: MetaQuery;\n    /**\n     *  Metadata query for `dataProvider`\n     * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n     */\n    metaData?: MetaQuery;\n    /**\n     *  A callback function that returns a current state of uploading process.\n     *\n     *  Ex: `percentage = onProgressParams.processedAmount / onProgressParams.totalAmount * 100`\n     */\n    onProgress?: (onProgressParams: OnProgressParams) => void;\n    /**\n     * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use.\n     */\n    dataProviderName?: string;\n};\n\nexport type CreatedValuesType<TVariables, TData> =\n    | ImportSuccessResult<TVariables, TData>\n    | ImportErrorResult<TVariables>;\n\nexport type HandleChangeType<TVariables, TData> = (onChangeParams: {\n    file: Partial<File>;\n}) => Promise<CreatedValuesType<TVariables, TData>[]>;\n\nexport type UseImportInputPropsType = {\n    type: \"file\";\n    accept: string;\n    onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n};\n\nexport type UseImportReturnType<\n    TData extends BaseRecord = BaseRecord,\n    TVariables = {},\n    TError extends HttpError = HttpError,\n> = {\n    inputProps: UseImportInputPropsType;\n    mutationResult:\n        | UseCreateReturnType<TData, TError, TVariables>\n        | UseCreateManyReturnType<TData, TError, TVariables>;\n    isLoading: boolean;\n    handleChange: HandleChangeType<TVariables, TData>;\n};\n\n/**\n * `useImport` hook allows you to handle your csv import logic easily.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/import-export/useImport} for more details.\n *\n * @typeParam TItem - Interface of parsed csv data\n * @typeParam TData - Result data of the query extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences/#httperror `HttpError`}\n * @typeParam TVariables - Values for mutation function\n *\n */\nexport const useImport = <\n    TItem = any,\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = any,\n>({\n    resourceName,\n    resource: resourceFromProps,\n    mapData = (item) => item as unknown as TVariables,\n    paparseOptions,\n    batchSize = Number.MAX_SAFE_INTEGER,\n    onFinish,\n    meta,\n    metaData,\n    onProgress,\n    dataProviderName,\n}: ImportOptions<TItem, TVariables, TData> = {}): UseImportReturnType<\n    TData,\n    TVariables,\n    TError\n> => {\n    const [processedAmount, setProcessedAmount] = useState<number>(0);\n    const [totalAmount, setTotalAmount] = useState<number>(0);\n    const [isLoading, setIsLoading] = useState(false);\n\n    const { resource, identifier } = useResource(\n        resourceFromProps ?? resourceName,\n    );\n\n    const getMeta = useMeta();\n\n    const createMany = useCreateMany<TData, TError, TVariables>();\n    const create = useCreate<TData, TError, TVariables>();\n\n    const combinedMeta = getMeta({\n        resource,\n        meta: pickNotDeprecated(meta, metaData),\n    });\n\n    let mutationResult:\n        | UseCreateReturnType<TData, TError, TVariables>\n        | UseCreateManyReturnType<TData, TError, TVariables>;\n\n    if (batchSize === 1) {\n        mutationResult = create;\n    } else {\n        mutationResult = createMany;\n    }\n\n    const handleCleanup = () => {\n        setTotalAmount(0);\n        setProcessedAmount(0);\n        setIsLoading(false);\n    };\n\n    const handleFinish = (\n        createdValues: CreatedValuesType<TVariables, TData>[],\n    ) => {\n        const result = {\n            succeeded: createdValues.filter(\n                (item) => item.type === \"success\",\n            ) as unknown as ImportSuccessResult<TVariables, TData>[],\n            errored: createdValues.filter(\n                (item) => item.type === \"error\",\n            ) as unknown as ImportErrorResult<TVariables>[],\n        };\n\n        onFinish?.(result);\n        setIsLoading(false);\n    };\n\n    useEffect(() => {\n        onProgress?.({ totalAmount, processedAmount });\n    }, [totalAmount, processedAmount]);\n\n    const handleChange: HandleChangeType<TVariables, TData> = ({ file }) => {\n        handleCleanup();\n        return new Promise<CreatedValuesType<TVariables, TData>[]>(\n            (resolve) => {\n                setIsLoading(true);\n                parse(file as any, {\n                    complete: async ({ data }: { data: unknown[][] }) => {\n                        const values = importCSVMapper(data, mapData);\n\n                        setTotalAmount(values.length);\n\n                        if (batchSize === 1) {\n                            // Create Processor Functions\n                            const valueFns = values.map((value) => {\n                                const fn = async () => {\n                                    const response = await create.mutateAsync({\n                                        resource: identifier ?? \"\",\n                                        values: value,\n                                        successNotification: false,\n                                        errorNotification: false,\n                                        dataProviderName,\n                                        meta: combinedMeta,\n                                        metaData: combinedMeta,\n                                    });\n\n                                    return { response, value };\n                                };\n                                return fn;\n                            });\n                            // Sequentially run processor functions and process resolves/rejects\n                            const createdValues = await sequentialPromises(\n                                valueFns,\n                                ({ response, value }) => {\n                                    setProcessedAmount((currentAmount) => {\n                                        return currentAmount + 1;\n                                    });\n\n                                    return {\n                                        response: [response.data],\n                                        type: \"success\",\n                                        request: [value],\n                                    } as ImportSuccessResult<TVariables, TData>;\n                                },\n                                (error: HttpError, index) => {\n                                    return {\n                                        response: [error],\n                                        type: \"error\",\n                                        request: [values[index]],\n                                    } as ImportErrorResult<TVariables>;\n                                },\n                            );\n                            // Resolve with created values\n                            resolve(createdValues);\n                        } else {\n                            // Create Chunks\n                            const chunks = chunk(values, batchSize);\n                            // Create Chunk Processor Functions\n                            const chunkedFns = chunks.map((chunkedValues) => {\n                                const fn = async () => {\n                                    const response =\n                                        await createMany.mutateAsync({\n                                            resource: identifier ?? \"\",\n                                            values: chunkedValues,\n                                            successNotification: false,\n                                            errorNotification: false,\n                                            dataProviderName,\n                                            meta: combinedMeta,\n                                            metaData: combinedMeta,\n                                        });\n\n                                    return {\n                                        response,\n                                        value: chunkedValues,\n                                        currentBatchLength:\n                                            chunkedValues.length,\n                                    };\n                                };\n\n                                return fn;\n                            });\n                            // Sequentially run chunked functions and process resolves/rejects\n                            const createdValues = await sequentialPromises(\n                                chunkedFns,\n                                ({ response, currentBatchLength, value }) => {\n                                    setProcessedAmount((currentAmount) => {\n                                        return (\n                                            currentAmount + currentBatchLength\n                                        );\n                                    });\n\n                                    return {\n                                        response: response.data,\n                                        type: \"success\",\n                                        request: value,\n                                    } as ImportSuccessResult<TVariables, TData>;\n                                },\n                                (error: HttpError, index) => {\n                                    return {\n                                        response: [error],\n                                        type: \"error\",\n                                        request: chunks[index],\n                                    } as ImportErrorResult<TVariables>;\n                                },\n                            );\n                            // resolve with all created values\n                            resolve(createdValues);\n                        }\n                    },\n\n                    ...paparseOptions,\n                });\n            },\n        ).then((createdValues) => {\n            handleFinish(createdValues);\n            return createdValues;\n        });\n    };\n\n    return {\n        inputProps: {\n            type: \"file\",\n            accept: \".csv\",\n            onChange: (event: React.ChangeEvent<HTMLInputElement>) => {\n                if (event.target.files && event.target.files.length > 0) {\n                    handleChange({ file: event.target.files[0] });\n                }\n            },\n        },\n        mutationResult,\n        isLoading,\n        handleChange,\n    };\n};\n","import { useCallback, useState } from \"react\";\n\nexport type useModalReturnType = {\n    visible: boolean;\n    show: () => void;\n    close: () => void;\n};\n\nexport type useModalProps = {\n    /**\n     * Initial state of the modal\n     */\n    defaultVisible?: boolean;\n};\n\nexport const useModal = ({\n    defaultVisible = false,\n}: useModalProps = {}): useModalReturnType => {\n    const [visible, setVisible] = useState(defaultVisible);\n\n    const show = useCallback(() => setVisible(true), [visible]);\n    const close = useCallback(() => setVisible(false), [visible]);\n\n    return {\n        visible,\n        show,\n        close,\n    };\n};\n","import { Action, IResourceItem } from \"../../../interfaces\";\nimport { useGetToPath } from \"../use-get-to-path\";\n\ntype UseToPathParams = {\n    resource?: IResourceItem;\n    action: Action;\n    meta?: Record<string, unknown>;\n    legacy?: boolean;\n};\n\n/**\n * Returns the route for a given action and resource.\n * If resource is not provided, it will use the resource from the route.\n * If the resource is not found, it will return undefined.\n * If the action is not found, it will return undefined.\n * `meta` can be provided to compose the routes with parameters. (Can be used for nested routes.)\n */\nexport const useToPath = ({\n    resource,\n    action,\n    meta,\n    legacy,\n}: UseToPathParams): string | undefined => {\n    const getToPath = useGetToPath();\n\n    return getToPath({ resource, action, meta, legacy });\n};\n","import { RouterBindingsContext } from \"@contexts/router\";\nimport React, { useContext } from \"react\";\n\nexport const useLink = () => {\n    const bindings = useContext(RouterBindingsContext);\n\n    if (bindings?.Link) {\n        return bindings.Link;\n    }\n\n    const FallbackLink: Required<typeof bindings>[\"Link\"] = ({\n        to,\n        ...rest\n    }) => <a href={to} {...rest} />;\n\n    return FallbackLink;\n};\n","import { useContext } from \"react\";\nimport { RouterContext, defaultProvider } from \"@contexts/legacy-router\";\n\nexport const useRouterContext = () => {\n    const routerContextValues = useContext(RouterContext);\n\n    const { useHistory, useLocation, useParams, Prompt, Link, routes } =\n        routerContextValues ?? defaultProvider;\n\n    return {\n        useHistory,\n        useLocation,\n        useParams,\n        Prompt,\n        Link,\n        routes,\n    };\n};\n","import React from \"react\";\n\nimport { IRouterContext } from \"../../interfaces\";\n\nexport const defaultProvider: IRouterContext = {\n    useHistory: () => false,\n    useLocation: () => false,\n    useParams: () => ({} as any),\n    Prompt: () => null,\n    Link: () => null,\n};\n\nexport const LegacyRouterContext =\n    React.createContext<IRouterContext>(defaultProvider);\n\nexport const RouterContext = LegacyRouterContext;\n\nexport const LegacyRouterContextProvider: React.FC<\n    Partial<IRouterContext> & {\n        children?: React.ReactNode;\n    }\n> = ({\n    children,\n    useHistory,\n    useLocation,\n    useParams,\n    Prompt,\n    Link,\n    routes,\n}) => {\n    return (\n        <RouterContext.Provider\n            value={{\n                useHistory: useHistory ?? defaultProvider.useHistory,\n                useLocation: useLocation ?? defaultProvider.useLocation,\n                useParams: useParams ?? defaultProvider.useParams,\n                Prompt: Prompt ?? defaultProvider.Prompt,\n                Link: Link ?? defaultProvider.Link,\n                routes: routes ?? defaultProvider.routes,\n            }}\n        >\n            {children}\n        </RouterContext.Provider>\n    );\n};\n","import {\n    useQuery,\n    UseQueryOptions,\n    UseQueryResult,\n} from \"@tanstack/react-query\";\nimport { useContext } from \"react\";\n\nimport { AccessControlContext } from \"@contexts/accessControl\";\nimport { sanitizeResource } from \"@definitions/helpers/sanitize-resource\";\nimport { CanParams, CanReturnType } from \"../../../interfaces\";\nimport { useKeys } from \"@hooks/useKeys\";\nimport { getXRay } from \"@refinedev/devtools-internal\";\n\nexport type UseCanProps = CanParams & {\n    /**\n     * react-query's [useQuery](https://tanstack.com/query/v4/docs/reference/useQuery) options\n     */\n    queryOptions?: UseQueryOptions<CanReturnType>;\n};\n\n/**\n * `useCan` uses the `can` as the query function for `react-query`'s {@link https://react-query.tanstack.com/guides/queries `useQuery`}. It takes the parameters that `can` takes. It can also be configured with `queryOptions` for `useQuery`. Returns the result of `useQuery`.\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/accessControl/useCan} for more details.\n *\n * @typeParam CanParams {@link https://refine.dev/docs/core/interfaceReferences#canparams}\n * @typeParam CanReturnType {@link https://refine.dev/docs/core/interfaceReferences#canreturntype}\n *\n */\nexport const useCan = ({\n    action,\n    resource,\n    params,\n    queryOptions,\n}: UseCanProps): UseQueryResult<CanReturnType> => {\n    const { can } = useContext(AccessControlContext);\n    const { keys, preferLegacyKeys } = useKeys();\n\n    /**\n     * Since `react-query` stringifies the query keys, it will throw an error for a circular dependency if we include `React.ReactNode` elements inside the keys.\n     * The feature in #2220(https://github.com/refinedev/refine/issues/2220) includes such change and to fix this, we need to remove `icon` property in the `resource`\n     */\n    const { resource: _resource, ...paramsRest } = params ?? {};\n\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    const sanitizedResource = sanitizeResource(_resource);\n\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    const queryResponse = useQuery<CanReturnType>(\n        keys()\n            .access()\n            .resource(resource)\n            .action(action)\n            .params({\n                params: { ...paramsRest, resource: sanitizedResource },\n                enabled: queryOptions?.enabled,\n            })\n            .get(preferLegacyKeys),\n        // Enabled check for `can` is enough to be sure that it's defined in the query function but TS is not smart enough to know that.\n        () =>\n            can?.({\n                action,\n                resource,\n                params: { ...paramsRest, resource: sanitizedResource },\n            }) ?? Promise.resolve({ can: true }),\n        {\n            enabled: typeof can !== \"undefined\",\n            ...queryOptions,\n            meta: {\n                ...queryOptions?.meta,\n                ...getXRay(\"useCan\", preferLegacyKeys),\n            },\n            retry: false,\n        },\n    );\n\n    return typeof can === \"undefined\"\n        ? ({ data: { can: true } } as typeof queryResponse)\n        : queryResponse;\n};\n","import React from \"react\";\n\nimport {\n    IAccessControlContext,\n    IAccessControlContextReturnType,\n} from \"./IAccessControlContext\";\n\n/** @deprecated default value for access control context has no use and is an empty object. */\nexport const defaultAccessControlContext: IAccessControlContext = {};\n\nexport const AccessControlContext =\n    React.createContext<IAccessControlContextReturnType>({\n        options: {\n            buttons: { enableAccessControl: true, hideIfUnauthorized: false },\n        },\n    });\n\nexport { IAccessControlContext };\n\nexport const AccessControlContextProvider: React.FC<\n    IAccessControlContext & {\n        children?: React.ReactNode;\n    }\n> = ({ can, children, options }) => {\n    return (\n        <AccessControlContext.Provider\n            value={{\n                can,\n                options: options\n                    ? {\n                          ...options,\n                          buttons: {\n                              enableAccessControl: true,\n                              hideIfUnauthorized: false,\n                              ...options.buttons,\n                          },\n                      }\n                    : {\n                          buttons: {\n                              enableAccessControl: true,\n                              hideIfUnauthorized: false,\n                          },\n                      },\n            }}\n        >\n            {children}\n        </AccessControlContext.Provider>\n    );\n};\n","import { IResourceItem } from \"../../../interfaces/bindings/resource\";\n\n/**\n * Remove all properties that are non-serializable from a resource object.\n */\nexport const sanitizeResource = (\n    resource?: Partial<IResourceItem> &\n        Required<Pick<IResourceItem, \"name\">> & { children?: unknown },\n):\n    | (Partial<IResourceItem> & Required<Pick<IResourceItem, \"name\">>)\n    | undefined => {\n    if (!resource) {\n        return undefined;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const {\n        icon,\n        list,\n        edit,\n        create,\n        show,\n        clone,\n        children,\n        meta,\n        options,\n        ...restResource\n    } = resource;\n\n    const { icon: _metaIcon, ...restMeta } = meta ?? {};\n    const { icon: _optionsIcon, ...restOptions } = options ?? {};\n\n    return {\n        ...restResource,\n        ...(meta ? { meta: restMeta } : {}),\n        ...(options ? { options: restOptions } : {}),\n    };\n};\n","import React from \"react\";\n\nimport { AccessControlContext } from \"@contexts/accessControl\";\nimport { sanitizeResource } from \"@definitions/helpers/sanitize-resource\";\nimport { IAccessControlContext } from \"../../interfaces\";\n\nexport const useCanWithoutCache = (): IAccessControlContext => {\n    const { can: canFromContext } = React.useContext(AccessControlContext);\n\n    const can = React.useMemo(() => {\n        if (!canFromContext) {\n            return undefined;\n        }\n\n        const canWithSanitizedResource: NonNullable<\n            typeof canFromContext\n        > = async ({ params, ...rest }) => {\n            const sanitizedResource = params?.resource\n                ? sanitizeResource(params.resource)\n                : undefined;\n\n            return canFromContext({\n                ...rest,\n                ...(params\n                    ? {\n                          params: {\n                              ...params,\n                              resource: sanitizedResource,\n                          },\n                      }\n                    : {}),\n            });\n        };\n\n        return canWithSanitizedResource;\n    }, [canFromContext]);\n\n    return { can };\n};\n","import { useCallback, useMemo, useState } from \"react\";\nimport { QueryObserverResult, UseQueryOptions } from \"@tanstack/react-query\";\nimport uniqBy from \"lodash/uniqBy\";\nimport debounce from \"lodash/debounce\";\nimport get from \"lodash/get\";\n\nimport { useList, useMany, useMeta } from \"@hooks\";\nimport {\n    CrudSorting,\n    BaseOption,\n    BaseRecord,\n    GetManyResponse,\n    GetListResponse,\n    CrudFilters,\n    SuccessErrorNotification,\n    HttpError,\n    LiveModeProps,\n    BaseKey,\n    Pagination,\n    MetaQuery,\n    Prettify,\n} from \"../../interfaces\";\nimport { pickNotDeprecated } from \"@definitions/helpers\";\nimport { useResource } from \"../resource/useResource/index\";\nimport { BaseListProps } from \"../data/useList\";\nimport {\n    useLoadingOvertime,\n    UseLoadingOvertimeOptionsProps,\n    UseLoadingOvertimeReturnType,\n} from \"../useLoadingOvertime\";\n\nexport type UseSelectProps<TQueryFnData, TError, TData> = {\n    /**\n     * Resource name for API data interactions\n     */\n    resource: string;\n    /**\n     * Set the option's value\n     * @default `\"title\"`\n     */\n    optionLabel?: keyof TData extends string ? keyof TData : never;\n    /**\n     * Set the option's label value\n     * @default `\"id\"`\n     */\n    optionValue?: keyof TData extends string ? keyof TData : never;\n    /**\n     * Allow us to sort the options\n     * @deprecated Use `sorters` instead\n     */\n    sort?: CrudSorting;\n    /**\n     * Allow us to sort the options\n     */\n    sorters?: CrudSorting;\n    /**\n     * Resource name for API data interactions\n     */\n    filters?: CrudFilters;\n    /**\n     * Adds extra `options`\n     */\n    defaultValue?: BaseKey | BaseKey[];\n    /**\n     * The number of milliseconds to delay\n     * @default `300`\n     */\n    debounce?: number;\n    /**\n     * react-query [useQuery](https://react-query.tanstack.com/reference/useQuery) options\n     */\n    queryOptions?: UseQueryOptions<\n        GetListResponse<TQueryFnData>,\n        TError,\n        GetListResponse<TData>\n    >;\n    /**\n     * Pagination option from [`useList()`](/docs/api-reference/core/hooks/data/useList/)\n     * @type {  current?: number; pageSize?: number;}\n     * @default `undefined`\n     */\n    pagination?: Prettify<\n        Omit<Pagination, \"mode\"> & {\n            /**\n             * Whether to use server side pagination or not.\n             * @default \"off\"\n             */\n            mode?: Pagination[\"mode\"];\n        }\n    >;\n    /**\n     * Disabling pagination option from [`useList()`](/docs/api-reference/core/hooks/data/useList/)\n     * @type boolean\n     * @default `false`\n     * @deprecated `hasPagination` is deprecated, use `pagination.mode` instead.\n     */\n    hasPagination?: boolean;\n    /**\n     * react-query [useQuery](https://react-query.tanstack.com/reference/useQuery) options\n     */\n    defaultValueQueryOptions?: UseQueryOptions<\n        GetManyResponse<TQueryFnData>,\n        TError\n    >;\n    /**\n     * If defined, this callback allows us to override all filters for every search request.\n     * @default `undefined`\n     */\n    onSearch?: (value: string) => CrudFilters;\n    /**\n     * Additional meta data to pass to the `useMany` from the data provider\n     */\n    meta?: MetaQuery;\n    /**\n     * Additional meta data to pass to the `useMany` from the data provider\n     * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n     */\n    metaData?: MetaQuery;\n    /**\n     * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use.\n     * @default `default`\n     */\n    dataProviderName?: string;\n    /**\n     * Amount of records to fetch in select box list.\n     * @deprecated use [`pagination`](https://refine.dev/docs/api-reference/core/interfaceReferences/#pagination) instead\n     * @default `undefined`\n     */\n    fetchSize?: number;\n} & SuccessErrorNotification<\n    GetListResponse<TData>,\n    TError,\n    Prettify<BaseListProps>\n> &\n    LiveModeProps &\n    UseLoadingOvertimeOptionsProps;\n\nexport type UseSelectReturnType<\n    TData extends BaseRecord = BaseRecord,\n    TOption extends BaseOption = BaseOption,\n> = {\n    queryResult: QueryObserverResult<GetListResponse<TData>>;\n    defaultValueQueryResult: QueryObserverResult<GetManyResponse<TData>>;\n    onSearch: (value: string) => void;\n    options: TOption[];\n} & UseLoadingOvertimeReturnType;\n\n/**\n * `useSelect` hook is used to fetch data from the dataProvider and return the options for the select box.\n *\n * It uses `getList` method as query function from the dataProvider that is\n * passed to {@link https://refine.dev/docs/api-reference/core/components/refine-config/ `<Refine>`}.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/useSelect} for more details.\n *\n * @typeParam TQueryFnData - Result data returned by the query function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TData - Result data returned by the `select` function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}. Defaults to `TQueryFnData`\n *\n */\n\nexport const useSelect = <\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TData extends BaseRecord = TQueryFnData,\n    TOption extends BaseOption = BaseOption,\n>(\n    props: UseSelectProps<TQueryFnData, TError, TData>,\n): UseSelectReturnType<TData, TOption> => {\n    const [search, setSearch] = useState<CrudFilters>([]);\n    const [options, setOptions] = useState<TOption[]>([]);\n    const [selectedOptions, setSelectedOptions] = useState<TOption[]>([]);\n\n    const {\n        resource: resourceFromProps,\n        sort,\n        sorters,\n        filters = [],\n        optionLabel = \"title\",\n        optionValue = \"id\",\n        debounce: debounceValue = 300,\n        successNotification,\n        errorNotification,\n        defaultValueQueryOptions: defaultValueQueryOptionsFromProps,\n        queryOptions,\n        fetchSize,\n        pagination,\n        hasPagination = false,\n        liveMode,\n        defaultValue = [],\n        onLiveEvent,\n        onSearch: onSearchFromProp,\n        liveParams,\n        meta,\n        metaData,\n        dataProviderName,\n        overtimeOptions,\n    } = props;\n\n    const { resource, identifier } = useResource(resourceFromProps);\n\n    const getMeta = useMeta();\n\n    const combinedMeta = getMeta({\n        resource,\n        meta: pickNotDeprecated(meta, metaData),\n    });\n\n    const defaultValues = Array.isArray(defaultValue)\n        ? defaultValue\n        : [defaultValue];\n\n    const defaultValueQueryOnSuccess = useCallback(\n        (data: GetManyResponse<TData>) => {\n            setSelectedOptions(\n                data.data.map(\n                    (item) =>\n                        ({\n                            label: get(item, optionLabel),\n                            value: get(item, optionValue),\n                        } as TOption),\n                ),\n            );\n        },\n        [optionLabel, optionValue],\n    );\n\n    const defaultValueQueryOptions =\n        defaultValueQueryOptionsFromProps ?? (queryOptions as any);\n\n    const defaultValueQueryResult = useMany<TQueryFnData, TError, TData>({\n        resource: identifier,\n        ids: defaultValues,\n        queryOptions: {\n            ...defaultValueQueryOptions,\n            enabled:\n                defaultValues.length > 0 &&\n                (defaultValueQueryOptions?.enabled ?? true),\n            onSuccess: (data) => {\n                defaultValueQueryOnSuccess(data);\n                defaultValueQueryOptions?.onSuccess?.(data);\n            },\n        },\n        meta: combinedMeta,\n        metaData: combinedMeta,\n        liveMode: \"off\",\n        dataProviderName,\n    });\n\n    const defaultQueryOnSuccess = useCallback(\n        (data: GetListResponse<TData>) => {\n            {\n                setOptions(\n                    data.data.map(\n                        (item) =>\n                            ({\n                                label: get(item, optionLabel),\n                                value: get(item, optionValue),\n                            } as TOption),\n                    ),\n                );\n            }\n        },\n        [optionLabel, optionValue],\n    );\n\n    const queryResult = useList<TQueryFnData, TError, TData>({\n        resource: identifier,\n        sorters: pickNotDeprecated(sorters, sort),\n        filters: filters.concat(search),\n        pagination: {\n            current: pagination?.current,\n            pageSize: pagination?.pageSize ?? fetchSize,\n            mode: pagination?.mode,\n        },\n        hasPagination,\n        queryOptions: {\n            ...queryOptions,\n            onSuccess: (data) => {\n                defaultQueryOnSuccess(data);\n                queryOptions?.onSuccess?.(data);\n            },\n        },\n        successNotification,\n        errorNotification,\n        meta: combinedMeta,\n        metaData: combinedMeta,\n        liveMode,\n        liveParams,\n        onLiveEvent,\n        dataProviderName,\n    });\n\n    const onSearch = (value: string) => {\n        if (onSearchFromProp) {\n            setSearch(onSearchFromProp(value));\n            return;\n        }\n\n        if (!value) {\n            setSearch([]);\n            return;\n        } else {\n            setSearch([\n                {\n                    field: optionLabel,\n                    operator: \"contains\",\n                    value,\n                },\n            ]);\n        }\n    };\n\n    const { elapsedTime } = useLoadingOvertime({\n        isLoading: queryResult.isFetching || defaultValueQueryResult.isFetching,\n        interval: overtimeOptions?.interval,\n        onInterval: overtimeOptions?.onInterval,\n    });\n\n    const combinedOptions = useMemo(\n        () => uniqBy([...options, ...selectedOptions], \"value\"),\n        [options, selectedOptions],\n    );\n\n    return {\n        queryResult,\n        defaultValueQueryResult,\n        options: combinedOptions,\n        onSearch: debounce(onSearch, debounceValue),\n        overtime: { elapsedTime },\n    };\n};\n","import React, { useState, useEffect } from \"react\";\nimport { QueryObserverResult, UseQueryOptions } from \"@tanstack/react-query\";\nimport qs from \"qs\";\nimport differenceWith from \"lodash/differenceWith\";\nimport isEqual from \"lodash/isEqual\";\nimport warnOnce from \"warn-once\";\n\nimport {\n    useRouterContext,\n    useSyncWithLocation,\n    useNavigation,\n    useList,\n    useLiveMode,\n    useRouterType,\n    useResource,\n    useParsed,\n    useMeta,\n} from \"@hooks\";\nimport {\n    stringifyTableParams,\n    parseTableParams,\n    unionFilters,\n    setInitialFilters,\n    setInitialSorters,\n    unionSorters,\n} from \"@definitions/table\";\nimport { pickNotDeprecated } from \"@definitions/helpers\";\n\nimport {\n    BaseRecord,\n    CrudFilters,\n    CrudSorting,\n    GetListResponse,\n    SuccessErrorNotification,\n    HttpError,\n    MetaQuery,\n    LiveModeProps,\n    Pagination,\n    Prettify,\n} from \"../../interfaces\";\nimport { useGo } from \"@hooks/router/use-go\";\nimport { BaseListProps } from \"../data/useList\";\nimport {\n    useLoadingOvertime,\n    UseLoadingOvertimeOptionsProps,\n    UseLoadingOvertimeReturnType,\n} from \"../useLoadingOvertime\";\n\ntype SetFilterBehavior = \"merge\" | \"replace\";\n\nexport type useTableProps<TQueryFnData, TError, TData> = {\n    /**\n     * Resource name for API data interactions\n     * @default Resource name that it reads from route\n     */\n    resource?: string;\n    /**\n     * Configuration for pagination\n     */\n    pagination?: Pagination;\n    /**\n     * Initial page index\n     * @default 1\n     * @deprecated `initialCurrent` property is deprecated. Use `pagination.current` instead.\n     */\n    initialCurrent?: number;\n    /**\n     * Initial number of items per page\n     * @default 10\n     * @deprecated `initialPageSize` property is deprecated. Use `pagination.pageSize` instead.\n     */\n    initialPageSize?: number;\n    /**\n     * Sort configs\n     */\n    sorters?: {\n        /**\n         * Initial sorter state\n         */\n        initial?: CrudSorting;\n        /**\n         * Default and unchangeable sorter state\n         *  @default `[]`\n         */\n        permanent?: CrudSorting;\n        /**\n         * Whether to use server side sorting or not.\n         * @default \"server\"\n         */\n        mode?: \"server\" | \"off\";\n    };\n    /**\n     * Initial sorter state\n     * @deprecated `initialSorter` property is deprecated. Use `sorters.initial` instead.\n     */\n    initialSorter?: CrudSorting;\n    /**\n     * Default and unchangeable sorter state\n     *  @default `[]`\n     *  @deprecated `permanentSorter` property is deprecated. Use `sorters.permanent` instead.\n     */\n    permanentSorter?: CrudSorting;\n    /**\n     * Filter configs\n     */\n    filters?: {\n        /**\n         * Initial filter state\n         */\n        initial?: CrudFilters;\n        /**\n         * Default and unchangeable filter state\n         *  @default `[]`\n         */\n        permanent?: CrudFilters;\n        /**\n         * Default behavior of the `setFilters` function\n         * @default `\"merge\"`\n         */\n        defaultBehavior?: SetFilterBehavior;\n        /**\n         * Whether to use server side filter or not.\n         * @default \"server\"\n         */\n        mode?: \"server\" | \"off\";\n    };\n    /**\n     * Initial filter state\n     * @deprecated `initialFilter` property is deprecated. Use `filters.initial` instead.\n     */\n    initialFilter?: CrudFilters;\n    /**\n     * Default and unchangeable filter state\n     * @default `[]`\n     * @deprecated `permanentFilter` property is deprecated. Use `filters.permanent` instead.\n     */\n    permanentFilter?: CrudFilters;\n    /**\n     * Default behavior of the `setFilters` function\n     * @default `\"merge\"`\n     * @deprecated `defaultSetFilterBehavior` property is deprecated. Use `filters.defaultBehavior` instead.\n     */\n    defaultSetFilterBehavior?: SetFilterBehavior;\n    /**\n     * Whether to use server side pagination or not.\n     * @default `true`\n     * @deprecated `hasPagination` property is deprecated. Use `pagination.mode` instead.\n     */\n    hasPagination?: boolean;\n    /**\n     * Sortings, filters, page index and records shown per page are tracked by browser history\n     * @default Value set in [Refine](/docs/api-reference/core/components/refine-config/#syncwithlocation). If a custom resource is given, it will be `false`\n     */\n    syncWithLocation?: boolean;\n    /**\n     * react-query's [useQuery](https://tanstack.com/query/v4/docs/reference/useQuery) options\n     */\n    queryOptions?: UseQueryOptions<\n        GetListResponse<TQueryFnData>,\n        TError,\n        GetListResponse<TData>\n    >;\n    /**\n     * Metadata query for dataProvider\n     */\n    meta?: MetaQuery;\n    /**\n     * Metadata query for dataProvider\n     * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n     */\n    metaData?: MetaQuery;\n    /**\n     * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use.\n     */\n    dataProviderName?: string;\n} & SuccessErrorNotification<\n    GetListResponse<TData>,\n    TError,\n    Prettify<BaseListProps>\n> &\n    LiveModeProps &\n    UseLoadingOvertimeOptionsProps;\n\ntype ReactSetState<T> = React.Dispatch<React.SetStateAction<T>>;\n\ntype SyncWithLocationParams = {\n    pagination: { current?: number; pageSize?: number };\n    /**\n     * @deprecated `sorter` is deprecated. Use `sorters` instead.\n     */\n    sorter?: CrudSorting;\n    sorters: CrudSorting;\n    filters: CrudFilters;\n};\n\nexport type useTableReturnType<\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n> = {\n    tableQueryResult: QueryObserverResult<GetListResponse<TData>, TError>;\n    /**\n     * @deprecated `sorter` is deprecated. Use `sorters` instead.\n     */\n    sorter: CrudSorting;\n    sorters: CrudSorting;\n    /**\n     * @deprecated `setSorter` is deprecated. Use `setSorters` instead.\n     */\n    setSorter: (sorter: CrudSorting) => void;\n    setSorters: (sorter: CrudSorting) => void;\n    filters: CrudFilters;\n    setFilters: ((filters: CrudFilters, behavior?: SetFilterBehavior) => void) &\n        ((setter: (prevFilters: CrudFilters) => CrudFilters) => void);\n    createLinkForSyncWithLocation: (params: SyncWithLocationParams) => string;\n    current: number;\n    setCurrent: ReactSetState<useTableReturnType[\"current\"]>;\n    pageSize: number;\n    setPageSize: ReactSetState<useTableReturnType[\"pageSize\"]>;\n    pageCount: number;\n} & UseLoadingOvertimeReturnType;\n\n/**\n * By using useTable, you are able to get properties that are compatible with\n * Ant Design {@link https://ant.design/components/table/ `<Table>`} component.\n * All features such as sorting, filtering and pagination comes as out of box.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/useTable} for more details.\n *\n * @typeParam TQueryFnData - Result data returned by the query function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TData - Result data returned by the `select` function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}. Defaults to `TQueryFnData`\n *\n */\n\nconst defaultPermanentFilter: CrudFilters = [];\nconst defaultPermanentSorter: CrudSorting = [];\n\nexport function useTable<\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TData extends BaseRecord = TQueryFnData,\n>({\n    initialCurrent,\n    initialPageSize,\n    hasPagination = true,\n    pagination,\n    initialSorter,\n    permanentSorter = defaultPermanentSorter,\n    defaultSetFilterBehavior,\n    initialFilter,\n    permanentFilter = defaultPermanentFilter,\n    filters: filtersFromProp,\n    sorters: sortersFromProp,\n    syncWithLocation: syncWithLocationProp,\n    resource: resourceFromProp,\n    successNotification,\n    errorNotification,\n    queryOptions,\n    liveMode: liveModeFromProp,\n    onLiveEvent,\n    liveParams,\n    meta,\n    metaData,\n    dataProviderName,\n    overtimeOptions,\n}: useTableProps<TQueryFnData, TError, TData> = {}): useTableReturnType<\n    TData,\n    TError\n> {\n    const { syncWithLocation: syncWithLocationContext } = useSyncWithLocation();\n\n    const syncWithLocation = syncWithLocationProp ?? syncWithLocationContext;\n\n    const liveMode = useLiveMode(liveModeFromProp);\n\n    const routerType = useRouterType();\n    const { useLocation } = useRouterContext();\n    const { search, pathname } = useLocation();\n    const getMeta = useMeta();\n    const parsedParams = useParsed();\n\n    const isServerSideFilteringEnabled =\n        (filtersFromProp?.mode || \"server\") === \"server\";\n    const isServerSideSortingEnabled =\n        (sortersFromProp?.mode || \"server\") === \"server\";\n    const hasPaginationString = hasPagination === false ? \"off\" : \"server\";\n    const isPaginationEnabled =\n        (pagination?.mode ?? hasPaginationString) !== \"off\";\n    const prefferedCurrent = pickNotDeprecated(\n        pagination?.current,\n        initialCurrent,\n    );\n    const prefferedPageSize = pickNotDeprecated(\n        pagination?.pageSize,\n        initialPageSize,\n    );\n    const preferredMeta = pickNotDeprecated(meta, metaData);\n\n    /** `parseTableParams` is redundant with the new routing */\n    // We want to always parse the query string even when syncWithLocation is\n    // deactivated, for hotlinking to work properly\n    const { parsedCurrent, parsedPageSize, parsedSorter, parsedFilters } =\n        parseTableParams(search ?? \"?\");\n\n    const preferredInitialFilters = pickNotDeprecated(\n        filtersFromProp?.initial,\n        initialFilter,\n    );\n    const preferredPermanentFilters =\n        pickNotDeprecated(filtersFromProp?.permanent, permanentFilter) ??\n        defaultPermanentFilter;\n\n    const preferredInitialSorters = pickNotDeprecated(\n        sortersFromProp?.initial,\n        initialSorter,\n    );\n    const preferredPermanentSorters =\n        pickNotDeprecated(sortersFromProp?.permanent, permanentSorter) ??\n        defaultPermanentSorter;\n\n    const prefferedFilterBehavior =\n        pickNotDeprecated(\n            filtersFromProp?.defaultBehavior,\n            defaultSetFilterBehavior,\n        ) ?? \"merge\";\n\n    let defaultCurrent: number;\n    let defaultPageSize: number;\n    let defaultSorter: CrudSorting | undefined;\n    let defaultFilter: CrudFilters | undefined;\n\n    if (syncWithLocation) {\n        defaultCurrent =\n            parsedParams?.params?.current ||\n            parsedCurrent ||\n            prefferedCurrent ||\n            1;\n        defaultPageSize =\n            parsedParams?.params?.pageSize ||\n            parsedPageSize ||\n            prefferedPageSize ||\n            10;\n        defaultSorter =\n            parsedParams?.params?.sorters ||\n            (parsedSorter.length ? parsedSorter : preferredInitialSorters);\n        defaultFilter =\n            parsedParams?.params?.filters ||\n            (parsedFilters.length ? parsedFilters : preferredInitialFilters);\n    } else {\n        defaultCurrent = prefferedCurrent || 1;\n        defaultPageSize = prefferedPageSize || 10;\n        defaultSorter = preferredInitialSorters;\n        defaultFilter = preferredInitialFilters;\n    }\n\n    const { replace } = useNavigation();\n    /** New way of `replace` calls to the router is using `useGo` */\n    const go = useGo();\n\n    const { resource, identifier } = useResource(resourceFromProp);\n\n    const combinedMeta = getMeta({\n        resource,\n        meta: preferredMeta,\n    });\n\n    React.useEffect(() => {\n        warnOnce(\n            typeof identifier === \"undefined\",\n            `useTable: \\`resource\\` is not defined.`,\n        );\n    }, [identifier]);\n\n    const [sorters, setSorters] = useState<CrudSorting>(\n        setInitialSorters(preferredPermanentSorters, defaultSorter ?? []),\n    );\n    const [filters, setFilters] = useState<CrudFilters>(\n        setInitialFilters(preferredPermanentFilters, defaultFilter ?? []),\n    );\n    const [current, setCurrent] = useState<number>(defaultCurrent);\n    const [pageSize, setPageSize] = useState<number>(defaultPageSize);\n\n    const createLinkForSyncWithLocation = ({\n        pagination: { current, pageSize },\n        sorter,\n        filters,\n    }: SyncWithLocationParams) => {\n        if (routerType === \"new\") {\n            return (\n                go({\n                    type: \"path\",\n                    options: {\n                        keepHash: true,\n                        keepQuery: true,\n                    },\n                    query: {\n                        ...(isPaginationEnabled ? { current, pageSize } : {}),\n                        sorters: sorter,\n                        filters,\n                        ...currentQueryParams(),\n                    },\n                }) ?? \"\"\n            );\n        } else {\n            const currentQueryParams = qs.parse(search?.substring(1)); // remove first ? character\n\n            const stringifyParams = stringifyTableParams({\n                pagination: {\n                    pageSize,\n                    current,\n                },\n                sorters: sorters ?? sorter,\n                filters,\n                ...currentQueryParams,\n            });\n            return `${pathname ?? \"\"}?${stringifyParams ?? \"\"}`;\n        }\n    };\n\n    useEffect(() => {\n        if (search === \"\") {\n            setCurrent(defaultCurrent);\n            setPageSize(defaultPageSize);\n            setSorters(\n                setInitialSorters(\n                    preferredPermanentSorters,\n                    defaultSorter ?? [],\n                ),\n            );\n            setFilters(\n                setInitialFilters(\n                    preferredPermanentFilters,\n                    defaultFilter ?? [],\n                ),\n            );\n        }\n    }, [search]);\n\n    const currentQueryParams = (): object => {\n        if (routerType === \"new\") {\n            // We get QueryString parameters that are uncontrolled by refine.\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            const { sorters, filters, pageSize, current, ...rest } =\n                parsedParams?.params ?? {};\n\n            return rest;\n        } else {\n            // We get QueryString parameters that are uncontrolled by refine.\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            const { sorter, filters, pageSize, current, ...rest } = qs.parse(\n                search,\n                {\n                    ignoreQueryPrefix: true,\n                },\n            );\n\n            return rest;\n        }\n    };\n\n    useEffect(() => {\n        if (syncWithLocation) {\n            // Careful! This triggers render\n            const queryParams = currentQueryParams();\n\n            if (routerType === \"new\") {\n                go({\n                    type: \"replace\",\n                    options: {\n                        keepQuery: true,\n                    },\n                    query: {\n                        ...(isPaginationEnabled ? { pageSize, current } : {}),\n                        sorters: differenceWith(\n                            sorters,\n                            preferredPermanentSorters,\n                            isEqual,\n                        ),\n                        filters: differenceWith(\n                            filters,\n                            preferredPermanentFilters,\n                            isEqual,\n                        ),\n                        // ...queryParams,\n                    },\n                });\n            } else {\n                const stringifyParams = stringifyTableParams({\n                    ...(isPaginationEnabled\n                        ? {\n                              pagination: {\n                                  pageSize,\n                                  current,\n                              },\n                          }\n                        : {}),\n                    sorters: differenceWith(\n                        sorters,\n                        preferredPermanentSorters,\n                        isEqual,\n                    ),\n                    filters: differenceWith(\n                        filters,\n                        preferredPermanentFilters,\n                        isEqual,\n                    ),\n                    ...queryParams,\n                });\n                return replace?.(`${pathname}?${stringifyParams}`, undefined, {\n                    shallow: true,\n                });\n            }\n        }\n    }, [syncWithLocation, current, pageSize, sorters, filters]);\n\n    const queryResult = useList<TQueryFnData, TError, TData>({\n        resource: identifier,\n        hasPagination,\n        pagination: { current, pageSize, mode: pagination?.mode },\n        filters: isServerSideFilteringEnabled\n            ? unionFilters(preferredPermanentFilters, filters)\n            : undefined,\n        sorters: isServerSideSortingEnabled\n            ? unionSorters(preferredPermanentSorters, sorters)\n            : undefined,\n        queryOptions,\n        successNotification,\n        errorNotification,\n        meta: combinedMeta,\n        metaData: combinedMeta,\n        liveMode,\n        liveParams,\n        onLiveEvent,\n        dataProviderName,\n    });\n\n    const setFiltersAsMerge = (newFilters: CrudFilters) => {\n        setFilters((prevFilters) =>\n            unionFilters(preferredPermanentFilters, newFilters, prevFilters),\n        );\n    };\n\n    const setFiltersAsReplace = (newFilters: CrudFilters) => {\n        setFilters(unionFilters(preferredPermanentFilters, newFilters));\n    };\n\n    const setFiltersWithSetter = (\n        setter: (prevFilters: CrudFilters) => CrudFilters,\n    ) => {\n        setFilters((prev) =>\n            unionFilters(preferredPermanentFilters, setter(prev)),\n        );\n    };\n\n    const setFiltersFn: useTableReturnType<TQueryFnData>[\"setFilters\"] = (\n        setterOrFilters,\n        behavior: SetFilterBehavior = prefferedFilterBehavior,\n    ) => {\n        if (typeof setterOrFilters === \"function\") {\n            setFiltersWithSetter(setterOrFilters);\n        } else {\n            if (behavior === \"replace\") {\n                setFiltersAsReplace(setterOrFilters);\n            } else {\n                setFiltersAsMerge(setterOrFilters);\n            }\n        }\n    };\n\n    const setSortWithUnion = (newSorter: CrudSorting) => {\n        setSorters(() => unionSorters(preferredPermanentSorters, newSorter));\n    };\n\n    const { elapsedTime } = useLoadingOvertime({\n        isLoading: queryResult.isFetching,\n        interval: overtimeOptions?.interval,\n        onInterval: overtimeOptions?.onInterval,\n    });\n\n    return {\n        tableQueryResult: queryResult,\n        sorters,\n        setSorters: setSortWithUnion,\n        sorter: sorters,\n        setSorter: setSortWithUnion,\n        filters,\n        setFilters: setFiltersFn,\n        current,\n        setCurrent,\n        pageSize,\n        setPageSize,\n        pageCount: pageSize\n            ? Math.ceil((queryResult.data?.total ?? 0) / pageSize)\n            : 1,\n        createLinkForSyncWithLocation,\n        overtime: {\n            elapsedTime,\n        },\n    };\n}\n","import { useContext } from \"react\";\nimport {\n    useMutation,\n    UseMutationOptions,\n    UseMutationResult,\n    useQueryClient,\n} from \"@tanstack/react-query\";\n\nimport { AuditLogContext } from \"@contexts/auditLog\";\nimport { ResourceContext } from \"@contexts/resource\";\nimport { useGetIdentity } from \"@hooks/auth\";\nimport { BaseKey, LogParams } from \"../../../interfaces\";\nimport { hasPermission, pickNotDeprecated } from \"@definitions/helpers\";\nimport { pickResource } from \"@definitions/helpers/pick-resource\";\nimport { useActiveAuthProvider } from \"@definitions/helpers\";\nimport { useKeys } from \"@hooks/useKeys\";\nimport { getXRay } from \"@refinedev/devtools-internal\";\n\ntype LogRenameData =\n    | {\n          resource?: string;\n      }\n    | undefined;\n\nexport type UseLogReturnType<TLogData, TLogRenameData> = {\n    log: UseMutationResult<TLogData, Error, LogParams>;\n    rename: UseMutationResult<\n        TLogRenameData,\n        Error,\n        {\n            id: BaseKey;\n            name: string;\n        }\n    >;\n};\n\nexport type UseLogMutationProps<\n    TLogData,\n    TLogRenameData extends LogRenameData = LogRenameData,\n> = {\n    logMutationOptions?: Omit<\n        UseMutationOptions<TLogData, Error, LogParams, unknown>,\n        \"mutationFn\"\n    >;\n    renameMutationOptions?: Omit<\n        UseMutationOptions<\n            TLogRenameData,\n            Error,\n            { id: BaseKey; name: string },\n            unknown\n        >,\n        \"mutationFn\" | \"onSuccess\"\n    >;\n};\n\n/**\n * useLog is used to `create` a new and `rename` the existing audit log.\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/audit-log/useLog} for more details.\n */\n\nexport const useLog = <\n    TLogData,\n    TLogRenameData extends LogRenameData = LogRenameData,\n>({\n    logMutationOptions,\n    renameMutationOptions,\n}: UseLogMutationProps<TLogData, TLogRenameData> = {}): UseLogReturnType<\n    TLogData,\n    TLogRenameData\n> => {\n    const queryClient = useQueryClient();\n    const auditLogContext = useContext(AuditLogContext);\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const authProvider = useActiveAuthProvider();\n\n    const { resources } = useContext(ResourceContext);\n    const {\n        data: identityData,\n        refetch,\n        isLoading,\n    } = useGetIdentity({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n        queryOptions: {\n            enabled: !!auditLogContext?.create,\n        },\n    });\n\n    const log = useMutation<TLogData, Error, LogParams, unknown>(\n        async (params) => {\n            const resource = pickResource(params.resource, resources);\n            const logPermissions = pickNotDeprecated(\n                resource?.meta?.audit,\n                resource?.options?.audit,\n                resource?.options?.auditLog?.permissions,\n            );\n\n            if (logPermissions) {\n                if (!hasPermission(logPermissions, params.action)) {\n                    return;\n                }\n            }\n\n            let authorData;\n            if (isLoading && !!auditLogContext?.create) {\n                authorData = await refetch();\n            }\n\n            return await auditLogContext.create?.({\n                ...params,\n                author: identityData ?? authorData?.data,\n            });\n        },\n        {\n            mutationKey: keys().audit().action(\"log\").get(),\n            ...logMutationOptions,\n            meta: {\n                ...logMutationOptions?.meta,\n                ...getXRay(\"useLog\", preferLegacyKeys),\n            },\n        },\n    );\n\n    const rename = useMutation<\n        TLogRenameData,\n        Error,\n        { id: BaseKey; name: string },\n        unknown\n    >(\n        async (params) => {\n            return await auditLogContext.update?.(params);\n        },\n        {\n            onSuccess: (data) => {\n                if (data?.resource) {\n                    queryClient.invalidateQueries(\n                        keys()\n                            .audit()\n                            .resource(data?.resource ?? \"\")\n                            .action(\"list\")\n                            .get(preferLegacyKeys),\n                    );\n                }\n            },\n            mutationKey: keys().audit().action(\"rename\").get(),\n            ...renameMutationOptions,\n            meta: {\n                ...renameMutationOptions?.meta,\n                ...getXRay(\"useLog\", preferLegacyKeys),\n            },\n        },\n    );\n\n    return { log, rename };\n};\n","import React from \"react\";\n\nimport { IAuditLogContext } from \"./IAuditLogContext\";\n\nexport const AuditLogContext = React.createContext<IAuditLogContext>({});\n\nexport const AuditLogContextProvider: React.FC<\n    IAuditLogContext & {\n        children: React.ReactNode;\n    }\n> = ({ create, get, update, children }) => {\n    return (\n        <AuditLogContext.Provider value={{ create, get, update }}>\n            {children}\n        </AuditLogContext.Provider>\n    );\n};\n","import { useContext } from \"react\";\nimport {\n    useQuery,\n    UseQueryResult,\n    UseQueryOptions,\n} from \"@tanstack/react-query\";\n\nimport { AuditLogContext } from \"@contexts/auditLog\";\nimport { HttpError, MetaQuery } from \"../../../interfaces\";\nimport { useKeys } from \"@hooks/useKeys\";\nimport { getXRay } from \"@refinedev/devtools-internal\";\n\nexport type UseLogProps<TQueryFnData, TError, TData> = {\n    resource: string;\n    action?: string;\n    meta?: Record<number | string, any>;\n    author?: Record<number | string, any>;\n    queryOptions?: UseQueryOptions<TQueryFnData, TError, TData>;\n    metaData?: MetaQuery;\n};\n\n/**\n * useLogList is used to get and filter audit logs.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/audit-log/useLogList} for more details.\n *\n * @typeParam TQueryFnData - Result data returned by the query function.\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TData - Result data returned by the `select` function. Defaults to `TQueryFnData`\n *\n */\nexport const useLogList = <\n    TQueryFnData = any,\n    TError extends HttpError = HttpError,\n    TData = TQueryFnData,\n>({\n    resource,\n    action,\n    meta,\n    author,\n    metaData,\n    queryOptions,\n}: UseLogProps<TQueryFnData, TError, TData>): UseQueryResult<TData> => {\n    const { get } = useContext(AuditLogContext);\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const queryResponse = useQuery<TQueryFnData, TError, TData>(\n        keys()\n            .audit()\n            .resource(resource)\n            .action(\"list\")\n            .params(meta)\n            .get(preferLegacyKeys),\n        () =>\n            get?.({\n                resource,\n                action,\n                author,\n                meta,\n                metaData,\n            }) ?? Promise.resolve([]),\n        {\n            enabled: typeof get !== \"undefined\",\n            ...queryOptions,\n            retry: false,\n            meta: {\n                ...queryOptions?.meta,\n                ...getXRay(\"useLogList\", preferLegacyKeys),\n            },\n        },\n    );\n\n    return queryResponse;\n};\n","import React, { useContext } from \"react\";\nimport warnOnce from \"warn-once\";\n\nimport { useRefineContext, useResource, useTranslate } from \"@hooks\";\nimport { TranslationContext } from \"@contexts/translation\";\nimport { pickNotDeprecated } from \"@definitions\";\n\nimport { IResourceItem } from \"../../interfaces\";\nimport { useRouterType } from \"@contexts/router-picker\";\nimport { getActionRoutesFromResource } from \"@definitions/helpers/router\";\nimport { pickResource } from \"../../definitions/helpers/pick-resource/index\";\nimport { composeRoute } from \"@definitions/helpers/router/compose-route\";\nimport { useParsed } from \"@hooks/router/use-parsed\";\n\nexport type BreadcrumbsType = {\n    label: string;\n    href?: string;\n    icon?: React.ReactNode;\n};\n\ntype UseBreadcrumbReturnType = {\n    breadcrumbs: BreadcrumbsType[];\n};\n\ntype UseBreadcrumbProps = {\n    /**\n     * Additional params to be used in the route generation process.\n     */\n    meta?: Record<string, string | number>;\n};\n\nexport const useBreadcrumb = ({\n    meta: metaFromProps = {},\n}: UseBreadcrumbProps = {}): UseBreadcrumbReturnType => {\n    const routerType = useRouterType();\n    const { i18nProvider } = useContext(TranslationContext);\n    const parsed = useParsed();\n    const translate = useTranslate();\n    const { resources, resource, action } = useResource();\n    const {\n        options: { textTransformers },\n    } = useRefineContext();\n\n    const breadcrumbs: BreadcrumbsType[] = [];\n\n    if (!resource?.name) {\n        return { breadcrumbs };\n    }\n\n    const addBreadcrumb = (parentName: string | IResourceItem) => {\n        const parentResource =\n            typeof parentName === \"string\"\n                ? pickResource(\n                      parentName,\n                      resources,\n                      routerType === \"legacy\",\n                  ) ?? { name: parentName }\n                : parentName;\n\n        if (parentResource) {\n            const grandParentName = pickNotDeprecated(\n                parentResource?.meta?.parent,\n                parentResource?.parentName,\n            );\n            if (grandParentName) {\n                addBreadcrumb(grandParentName);\n            }\n            const listActionOfResource = getActionRoutesFromResource(\n                parentResource,\n                resources,\n                routerType === \"legacy\",\n            ).find((r) => r.action === \"list\");\n\n            const hrefRaw = listActionOfResource?.resource?.list\n                ? listActionOfResource?.route\n                : undefined;\n\n            const href = hrefRaw\n                ? routerType === \"legacy\"\n                    ? hrefRaw\n                    : composeRoute(\n                          hrefRaw,\n                          parentResource?.meta,\n                          parsed,\n                          metaFromProps,\n                      )\n                : undefined;\n\n            breadcrumbs.push({\n                label:\n                    pickNotDeprecated(\n                        parentResource.meta?.label,\n                        parentResource.options?.label,\n                    ) ??\n                    translate(\n                        `${parentResource.name}.${parentResource.name}`,\n                        textTransformers.humanize(parentResource.name),\n                    ),\n                href: href,\n                icon: pickNotDeprecated(\n                    parentResource.meta?.icon,\n                    parentResource.options?.icon,\n                    parentResource.icon,\n                ),\n            });\n        }\n    };\n\n    addBreadcrumb(resource);\n\n    if (action && action !== \"list\") {\n        const key = `actions.${action}`;\n        const actionLabel = translate(key);\n        if (typeof i18nProvider !== \"undefined\" && actionLabel === key) {\n            warnOnce(\n                true,\n                `[useBreadcrumb]: Breadcrumb missing translate key for the \"${action}\" action. Please add \"actions.${action}\" key to your translation file.\\nFor more information, see https://refine.dev/docs/api-reference/core/hooks/useBreadcrumb/#i18n-support`,\n            );\n            breadcrumbs.push({\n                label: translate(\n                    `buttons.${action}`,\n                    textTransformers.humanize(action),\n                ),\n            });\n        } else {\n            breadcrumbs.push({\n                label: translate(key, textTransformers.humanize(action)),\n            });\n        }\n    }\n\n    return {\n        breadcrumbs,\n    };\n};\n","import React from \"react\";\nimport { useTranslate, useResource, useParsed, useRouterContext } from \"..\";\nimport { useUserFriendlyName, pickNotDeprecated } from \"@definitions\";\nimport { useRouterType } from \"../../contexts/router-picker\";\nimport { createResourceKey } from \"../../definitions/helpers/menu/create-resource-key\";\nimport { useGetToPath } from \"../router/use-get-to-path/index\";\nimport { getParentResource } from \"@definitions/helpers/router\";\nimport {\n    FlatTreeItem,\n    createTree,\n} from \"../../definitions/helpers/menu/create-tree\";\n\ntype UseMenuReturnType = {\n    defaultOpenKeys: string[];\n    selectedKey: string;\n    menuItems: TreeMenuItem[];\n};\n\nexport type UseMenuProps = {\n    meta?: Record<string, any>;\n    hideOnMissingParameter?: boolean;\n};\n\nexport type TreeMenuItem = FlatTreeItem & {\n    route?: string;\n    icon?: React.ReactNode;\n    label?: string;\n    children: TreeMenuItem[];\n};\n\nconst getCleanPath = (pathname: string) => {\n    return pathname\n        .split(\"?\")[0]\n        .split(\"#\")[0]\n        .replace(/(.+)(\\/$)/, \"$1\");\n};\n\n/**\n * `useMenu` is used to get menu items of the default sidebar.\n * These items include a link to dashboard page (if it exists) and links to the user defined resources\n * (passed as children to {@link https://refine.dev/docs/core/components/refine-config `<Refine>`}).\n * This hook can also be used to build custom menus, which is also used by default sidebar to show menu items.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/ui/useMenu} for more details.\n */\nexport const useMenu = (\n    { meta, hideOnMissingParameter }: UseMenuProps = {\n        hideOnMissingParameter: true,\n    },\n): UseMenuReturnType => {\n    const translate = useTranslate();\n\n    const getToPath = useGetToPath();\n    const routerType = useRouterType();\n    const { resource, resources } = useResource();\n    const { pathname } = useParsed();\n    const { useLocation } = useRouterContext();\n    const { pathname: legacyPath } = useLocation();\n    const getFriendlyName = useUserFriendlyName();\n\n    const cleanPathname =\n        routerType === \"legacy\"\n            ? getCleanPath(legacyPath)\n            : pathname\n            ? getCleanPath(pathname)\n            : undefined;\n\n    const cleanRoute = `/${(cleanPathname ?? \"\").replace(/^\\//, \"\")}`;\n\n    const selectedKey = resource\n        ? createResourceKey(resource, resources, routerType === \"legacy\")\n        : cleanRoute ?? \"\";\n\n    const defaultOpenKeys = React.useMemo(() => {\n        if (!resource) return [];\n        let parent = getParentResource(resource, resources);\n        const keys = [createResourceKey(resource, resources)];\n        while (parent) {\n            keys.push(createResourceKey(parent, resources));\n            parent = getParentResource(parent, resources);\n        }\n        return keys;\n    }, []);\n\n    const prepareItem = React.useCallback(\n        (item: FlatTreeItem): TreeMenuItem | undefined => {\n            if (item?.meta?.hide ?? item?.options?.hide) return undefined;\n            if (!item?.list && item.children.length === 0) return undefined;\n\n            const composed = item.list\n                ? getToPath({\n                      resource: item,\n                      action: \"list\",\n                      legacy: routerType === \"legacy\",\n                      meta,\n                  })\n                : undefined;\n\n            if (\n                hideOnMissingParameter &&\n                composed &&\n                composed.match(/(\\/|^):(.+?)(\\/|$){1}/)\n            )\n                return undefined;\n\n            return {\n                ...item,\n                route: composed,\n                icon: pickNotDeprecated(\n                    item.meta?.icon,\n                    item.options?.icon,\n                    item.icon,\n                ),\n                label:\n                    pickNotDeprecated(\n                        item?.meta?.label,\n                        item?.options?.label,\n                    ) ??\n                    translate(\n                        `${item.name}.${item.name}`,\n                        getFriendlyName(item.name, \"plural\"),\n                    ),\n            };\n        },\n        [routerType, meta, translate, hideOnMissingParameter],\n    );\n\n    const treeItems = React.useMemo(() => {\n        const treeMenuItems = createTree(resources, routerType === \"legacy\");\n\n        // add paths to items and their nodes recursively\n        const prepare = (items: TreeMenuItem[]): TreeMenuItem[] => {\n            return items.flatMap((item) => {\n                const preparedNodes = prepare(item.children);\n                const newItem = prepareItem({\n                    ...item,\n                    children: preparedNodes,\n                });\n\n                if (!newItem) return [];\n\n                return [newItem];\n            });\n        };\n\n        return prepare(treeMenuItems);\n    }, [resources, routerType, prepareItem]);\n\n    return {\n        defaultOpenKeys,\n        selectedKey,\n        menuItems: treeItems,\n    };\n};\n","import { IResourceItem } from \"../../../interfaces\";\nimport {\n    getParentResource,\n    removeLeadingTrailingSlashes,\n} from \"../../helpers/router\";\n\nexport const createResourceKey = (\n    resource: IResourceItem,\n    resources: IResourceItem[],\n    legacy = false,\n) => {\n    const parents: IResourceItem[] = [];\n\n    let currentParentResource = getParentResource(resource, resources);\n    while (currentParentResource) {\n        parents.push(currentParentResource);\n        currentParentResource = getParentResource(\n            currentParentResource,\n            resources,\n        );\n    }\n    parents.reverse();\n\n    const key = [...parents, resource]\n        .map((r) =>\n            removeLeadingTrailingSlashes(\n                (legacy ? r.route : undefined) ?? r.identifier ?? r.name,\n            ),\n        )\n        .join(\"/\");\n\n    return `/${key.replace(/^\\//, \"\")}`;\n};\n","import { IResourceItem } from \"../../../contexts/resource\";\nimport { getParentResource } from \"../router\";\nimport { createResourceKey } from \"./create-resource-key\";\n\nexport type Tree = {\n    item: IResourceItem;\n    children: { [key: string]: Tree };\n};\n\nexport type FlatTreeItem = IResourceItem & {\n    key: string;\n    children: FlatTreeItem[];\n};\n\nexport const createTree = (\n    resources: IResourceItem[],\n    legacy = false,\n): FlatTreeItem[] => {\n    const root: Tree = {\n        item: {\n            name: \"__root__\",\n        },\n        children: {},\n    };\n\n    resources.forEach((resource) => {\n        const parents: IResourceItem[] = [];\n\n        let currentParent = getParentResource(resource, resources);\n        while (currentParent) {\n            parents.push(currentParent);\n            currentParent = getParentResource(currentParent, resources);\n        }\n        parents.reverse();\n\n        let currentTree = root;\n\n        parents.forEach((parent) => {\n            const key =\n                (legacy ? parent.route : undefined) ??\n                parent.identifier ??\n                parent.name;\n\n            if (!currentTree.children[key]) {\n                currentTree.children[key] = {\n                    item: parent,\n                    children: {},\n                };\n            }\n            currentTree = currentTree.children[key];\n        });\n\n        const key =\n            (legacy ? resource.route : undefined) ??\n            resource.identifier ??\n            resource.name;\n\n        if (!currentTree.children[key]) {\n            currentTree.children[key] = {\n                item: resource,\n                children: {},\n            };\n        }\n    });\n\n    const flatten = (tree: Tree): FlatTreeItem[] => {\n        const items: FlatTreeItem[] = [];\n\n        Object.keys(tree.children).forEach((key) => {\n            const itemKey = createResourceKey(\n                tree.children[key].item,\n                resources,\n                legacy,\n            );\n            const item: FlatTreeItem = {\n                ...tree.children[key].item,\n                key: itemKey,\n                children: flatten(tree.children[key]),\n            };\n            items.push(item);\n        });\n\n        return items;\n    };\n\n    return flatten(root);\n};\n","import { useParsed } from \"@hooks/router\";\nimport { sanitizeResource } from \"@definitions/helpers/sanitize-resource\";\nimport { IResourceItem, MetaQuery } from \"../../interfaces\";\n\n/**\n * Hook that returns a function to get meta.\n * The meta is a combination of the resource meta, hook meta and query params.\n * @internal\n */\nexport const useMeta = () => {\n    const { params } = useParsed();\n\n    const getMetaFn = ({\n        resource,\n        meta: metaFromProp,\n    }: {\n        resource?: IResourceItem;\n        meta?: MetaQuery;\n    } = {}) => {\n        const { meta } = sanitizeResource(resource) ?? { meta: {} };\n\n        // this fields came from the query params and should be removed from the meta because they are not part of the meta.\n        const {\n            filters: _filters,\n            sorters: _sorters,\n            current: _current,\n            pageSize: _pageSize,\n            ...additionalParams\n        } = params ?? {};\n\n        return { ...meta, ...additionalParams, ...metaFromProp };\n    };\n\n    return getMetaFn;\n};\n","import React, { useState } from \"react\";\n\nimport { useLogin, useTranslate } from \"@hooks\";\nimport { useActiveAuthProvider } from \"@definitions/helpers\";\nexport interface ILoginForm {\n    username: string;\n    password: string;\n}\n\n/**\n * @deprecated LoginPage is deprecated. Use AuthPage instead. @see {@link https://refine.dev/docs/core/components/auth-page} for more details.\n * **refine** has a default login page form which is served on `/login` route when the `authProvider` configuration is provided.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/components/refine-config/#loginpage} for more details.\n */\nexport const LoginPage: React.FC = () => {\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    const translate = useTranslate();\n\n    const authProvider = useActiveAuthProvider();\n    const { mutate: login } = useLogin<ILoginForm>({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n\n    return (\n        <>\n            <h1>{translate(\"pages.login.title\", \"Sign in your account\")}</h1>\n            <form\n                onSubmit={(e) => {\n                    e.preventDefault();\n                    login({ username, password });\n                }}\n            >\n                <table>\n                    <tbody>\n                        <tr>\n                            <td>\n                                {translate(\n                                    \"pages.login.username\",\n                                    undefined,\n                                    \"username\",\n                                )}\n                                :\n                            </td>\n                            <td>\n                                <input\n                                    type=\"text\"\n                                    size={20}\n                                    autoCorrect=\"off\"\n                                    spellCheck={false}\n                                    autoCapitalize=\"off\"\n                                    autoFocus\n                                    required\n                                    value={username}\n                                    onChange={(e) =>\n                                        setUsername(e.target.value)\n                                    }\n                                />\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                {translate(\n                                    \"pages.login.password\",\n                                    undefined,\n                                    \"password\",\n                                )}\n                                :\n                            </td>\n                            <td>\n                                <input\n                                    type=\"password\"\n                                    required\n                                    size={20}\n                                    value={password}\n                                    onChange={(e) =>\n                                        setPassword(e.target.value)\n                                    }\n                                />\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n                <br />\n                <input type=\"submit\" value=\"login\" />\n            </form>\n        </>\n    );\n};\n","import React, {\n    DetailedHTMLProps,\n    HTMLAttributes,\n    FormHTMLAttributes,\n} from \"react\";\n\nimport {\n    LoginPage,\n    RegisterPage,\n    ForgotPasswordPage,\n    UpdatePasswordPage,\n} from \"./components\";\n\nimport { AuthPageProps } from \"../../../interfaces\";\n\nexport type DivPropsType = DetailedHTMLProps<\n    HTMLAttributes<HTMLDivElement>,\n    HTMLDivElement\n>;\nexport type FormPropsType = DetailedHTMLProps<\n    FormHTMLAttributes<HTMLFormElement>,\n    HTMLFormElement\n>;\n\nexport type AuthProps = AuthPageProps<\n    DivPropsType,\n    DivPropsType,\n    FormPropsType\n>;\n\n/**\n * **refine** has a default auth page form which is served on `/login` route when the `authProvider` configuration is provided.\n * @param title is not implemented yet.\n * @see {@link https://refine.dev/docs/api-reference/core/components/auth-page/} for more details.\n */\nexport const AuthPage: React.FC<AuthProps> = (props) => {\n    const { type } = props;\n    const renderView = () => {\n        switch (type) {\n            case \"register\":\n                return <RegisterPage {...props} />;\n            case \"forgotPassword\":\n                return <ForgotPasswordPage {...props} />;\n            case \"updatePassword\":\n                return <UpdatePasswordPage {...props} />;\n            default:\n                return <LoginPage {...props} />;\n        }\n    };\n\n    return <>{renderView()}</>;\n};\n","import React, { useState } from \"react\";\nimport { LoginPageProps, LoginFormTypes } from \"../../../../../interfaces\";\n\nimport { useRouterContext, useLink, useRouterType, useLogin } from \"@hooks\";\nimport { useTranslate } from \"@hooks/translate\";\n\nimport { DivPropsType, FormPropsType } from \"../..\";\nimport { useActiveAuthProvider } from \"@definitions/helpers\";\n\ntype LoginProps = LoginPageProps<DivPropsType, DivPropsType, FormPropsType>;\n\nexport const LoginPage: React.FC<LoginProps> = ({\n    providers,\n    registerLink,\n    forgotPasswordLink,\n    rememberMe,\n    contentProps,\n    wrapperProps,\n    renderContent,\n    formProps,\n    title = undefined,\n}) => {\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [remember, setRemember] = useState(false);\n\n    const translate = useTranslate();\n\n    const authProvider = useActiveAuthProvider();\n    const { mutate: login } = useLogin<LoginFormTypes>({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n\n    const renderLink = (link: string, text?: string) => {\n        return <ActiveLink to={link}>{text}</ActiveLink>;\n    };\n\n    const renderProviders = () => {\n        if (providers) {\n            return providers.map((provider) => (\n                <div\n                    key={provider.name}\n                    style={{\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        justifyContent: \"center\",\n                        marginBottom: \"1rem\",\n                    }}\n                >\n                    <button\n                        onClick={() =>\n                            login({\n                                providerName: provider.name,\n                            })\n                        }\n                        style={{\n                            display: \"flex\",\n                            alignItems: \"center\",\n                        }}\n                    >\n                        {provider?.icon}\n                        {provider.label ?? <label>{provider.label}</label>}\n                    </button>\n                </div>\n            ));\n        }\n        return null;\n    };\n\n    const content = (\n        <div {...contentProps}>\n            <h1 style={{ textAlign: \"center\" }}>\n                {translate(\"pages.login.title\", \"Sign in to your account\")}\n            </h1>\n            {renderProviders()}\n            <hr />\n            <form\n                onSubmit={(e) => {\n                    e.preventDefault();\n                    login({ email, password, remember });\n                }}\n                {...formProps}\n            >\n                <div\n                    style={{\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        padding: 25,\n                    }}\n                >\n                    <label htmlFor=\"email-input\">\n                        {translate(\"pages.login.fields.email\", \"Email\")}\n                    </label>\n                    <input\n                        id=\"email-input\"\n                        name=\"email\"\n                        type=\"text\"\n                        size={20}\n                        autoCorrect=\"off\"\n                        spellCheck={false}\n                        autoCapitalize=\"off\"\n                        required\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    />\n                    <label htmlFor=\"password-input\">\n                        {translate(\"pages.login.fields.password\", \"Password\")}\n                    </label>\n                    <input\n                        id=\"password-input\"\n                        type=\"password\"\n                        name=\"password\"\n                        required\n                        size={20}\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    />\n                    {rememberMe ?? (\n                        <>\n                            <label htmlFor=\"remember-me-input\">\n                                {translate(\n                                    \"pages.login.buttons.rememberMe\",\n                                    \"Remember me\",\n                                )}\n                                <input\n                                    id=\"remember-me-input\"\n                                    name=\"remember\"\n                                    type=\"checkbox\"\n                                    size={20}\n                                    checked={remember}\n                                    value={remember.toString()}\n                                    onChange={() => {\n                                        setRemember(!remember);\n                                    }}\n                                />\n                            </label>\n                        </>\n                    )}\n                    <br />\n                    {forgotPasswordLink ??\n                        renderLink(\n                            \"/forgot-password\",\n                            translate(\n                                \"pages.login.buttons.forgotPassword\",\n                                \"Forgot password?\",\n                            ),\n                        )}\n                    <input\n                        type=\"submit\"\n                        value={translate(\"pages.login.signin\", \"Sign in\")}\n                    />\n                    {registerLink ?? (\n                        <span>\n                            {translate(\n                                \"pages.login.buttons.noAccount\",\n                                \"Don’t have an account?\",\n                            )}{\" \"}\n                            {renderLink(\n                                \"/register\",\n                                translate(\"pages.login.register\", \"Sign up\"),\n                            )}\n                        </span>\n                    )}\n                </div>\n            </form>\n        </div>\n    );\n\n    return (\n        <div {...wrapperProps}>\n            {renderContent ? renderContent(content, title) : content}\n        </div>\n    );\n};\n","import React, { useState } from \"react\";\nimport { RegisterPageProps } from \"../../../../../interfaces\";\n\nimport {\n    useTranslate,\n    useRouterContext,\n    useLink,\n    useRouterType,\n    useRegister,\n} from \"@hooks\";\n\nimport { DivPropsType, FormPropsType } from \"../..\";\nimport { useActiveAuthProvider } from \"@definitions/helpers\";\n\ntype RegisterProps = RegisterPageProps<\n    DivPropsType,\n    DivPropsType,\n    FormPropsType\n>;\n\nexport const RegisterPage: React.FC<RegisterProps> = ({\n    providers,\n    loginLink,\n    wrapperProps,\n    contentProps,\n    renderContent,\n    formProps,\n    title = undefined,\n}) => {\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    const translate = useTranslate();\n\n    const authProvider = useActiveAuthProvider();\n    const { mutate: register, isLoading } = useRegister({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n\n    const renderLink = (link: string, text?: string) => {\n        return <ActiveLink to={link}>{text}</ActiveLink>;\n    };\n\n    const renderProviders = () => {\n        if (providers) {\n            return providers.map((provider) => (\n                <div\n                    key={provider.name}\n                    style={{\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        justifyContent: \"center\",\n                        marginBottom: \"1rem\",\n                    }}\n                >\n                    <button\n                        onClick={() =>\n                            register({\n                                providerName: provider.name,\n                            })\n                        }\n                        style={{\n                            display: \"flex\",\n                            alignItems: \"center\",\n                        }}\n                    >\n                        {provider?.icon}\n                        {provider.label ?? <label>{provider.label}</label>}\n                    </button>\n                </div>\n            ));\n        }\n        return null;\n    };\n\n    const content = (\n        <div {...contentProps}>\n            <h1 style={{ textAlign: \"center\" }}>\n                {translate(\"pages.register.title\", \"Sign up for your account\")}\n            </h1>\n            {renderProviders()}\n            <hr />\n            <form\n                onSubmit={(e) => {\n                    e.preventDefault();\n                    register({ email, password });\n                }}\n                {...formProps}\n            >\n                <div\n                    style={{\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        padding: 25,\n                    }}\n                >\n                    <label htmlFor=\"email-input\">\n                        {translate(\"pages.register.fields.email\", \"Email\")}\n                    </label>\n                    <input\n                        id=\"email-input\"\n                        name=\"email\"\n                        type=\"email\"\n                        size={20}\n                        autoCorrect=\"off\"\n                        spellCheck={false}\n                        autoCapitalize=\"off\"\n                        required\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    />\n                    <label htmlFor=\"password-input\">\n                        {translate(\n                            \"pages.register.fields.password\",\n                            \"Password\",\n                        )}\n                    </label>\n                    <input\n                        id=\"password-input\"\n                        name=\"password\"\n                        type=\"password\"\n                        required\n                        size={20}\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    />\n                    <input\n                        type=\"submit\"\n                        value={translate(\n                            \"pages.register.buttons.submit\",\n                            \"Sign up\",\n                        )}\n                        disabled={isLoading}\n                    />\n                    {loginLink ?? (\n                        <>\n                            <span>\n                                {translate(\n                                    \"pages.login.buttons.haveAccount\",\n                                    \"Have an account?\",\n                                )}{\" \"}\n                                {renderLink(\n                                    \"/login\",\n                                    translate(\"pages.login.signin\", \"Sign in\"),\n                                )}\n                            </span>\n                        </>\n                    )}\n                </div>\n            </form>\n        </div>\n    );\n\n    return (\n        <div {...wrapperProps}>\n            {renderContent ? renderContent(content, title) : content}\n        </div>\n    );\n};\n","import React, { useState } from \"react\";\n\nimport {\n    useTranslate,\n    useRouterContext,\n    useLink,\n    useRouterType,\n    useForgotPassword,\n} from \"@hooks\";\n\nimport { DivPropsType, FormPropsType } from \"../..\";\nimport {\n    ForgotPasswordFormTypes,\n    ForgotPasswordPageProps,\n} from \"../../../../../interfaces\";\n\ntype ForgotPasswordProps = ForgotPasswordPageProps<\n    DivPropsType,\n    DivPropsType,\n    FormPropsType\n>;\n\nexport const ForgotPasswordPage: React.FC<ForgotPasswordProps> = ({\n    loginLink,\n    wrapperProps,\n    contentProps,\n    renderContent,\n    formProps,\n    title = undefined,\n}) => {\n    const translate = useTranslate();\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    const [email, setEmail] = useState(\"\");\n\n    const { mutate: forgotPassword, isLoading } =\n        useForgotPassword<ForgotPasswordFormTypes>();\n\n    const renderLink = (link: string, text?: string) => {\n        return <ActiveLink to={link}>{text}</ActiveLink>;\n    };\n\n    const content = (\n        <div {...contentProps}>\n            <h1 style={{ textAlign: \"center\" }}>\n                {translate(\n                    \"pages.forgotPassword.title\",\n                    \"Forgot your password?\",\n                )}\n            </h1>\n            <hr />\n            <form\n                onSubmit={(e) => {\n                    e.preventDefault();\n                    forgotPassword({ email });\n                }}\n                {...formProps}\n            >\n                <div\n                    style={{\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        padding: 25,\n                    }}\n                >\n                    <label htmlFor=\"email-input\">\n                        {translate(\n                            \"pages.forgotPassword.fields.email\",\n                            \"Email\",\n                        )}\n                    </label>\n                    <input\n                        id=\"email-input\"\n                        name=\"email\"\n                        type=\"mail\"\n                        autoCorrect=\"off\"\n                        spellCheck={false}\n                        autoCapitalize=\"off\"\n                        required\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    />\n                    <input\n                        type=\"submit\"\n                        disabled={isLoading}\n                        value={translate(\n                            \"pages.forgotPassword.buttons.submit\",\n                            \"Send reset instructions\",\n                        )}\n                    />\n                    <br />\n                    {loginLink ?? (\n                        <span>\n                            {translate(\n                                \"pages.register.buttons.haveAccount\",\n                                \"Have an account? \",\n                            )}{\" \"}\n                            {renderLink(\n                                \"/login\",\n                                translate(\"pages.login.signin\", \"Sign in\"),\n                            )}\n                        </span>\n                    )}\n                </div>\n            </form>\n        </div>\n    );\n\n    return (\n        <div {...wrapperProps}>\n            {renderContent ? renderContent(content, title) : content}\n        </div>\n    );\n};\n","import React, { useState } from \"react\";\nimport {\n    UpdatePasswordFormTypes,\n    UpdatePasswordPageProps,\n} from \"../../../../../interfaces\";\n\nimport { useTranslate, useUpdatePassword } from \"@hooks\";\n\nimport { DivPropsType, FormPropsType } from \"../..\";\nimport { useActiveAuthProvider } from \"@definitions/helpers\";\n\ntype UpdatePasswordProps = UpdatePasswordPageProps<\n    DivPropsType,\n    DivPropsType,\n    FormPropsType\n>;\n\nexport const UpdatePasswordPage: React.FC<UpdatePasswordProps> = ({\n    wrapperProps,\n    contentProps,\n    renderContent,\n    formProps,\n    title = undefined,\n}) => {\n    const translate = useTranslate();\n\n    const authProvider = useActiveAuthProvider();\n    const { mutate: updatePassword, isLoading } =\n        useUpdatePassword<UpdatePasswordFormTypes>({\n            v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n        });\n\n    const [newPassword, setNewPassword] = useState(\"\");\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\n\n    const content = (\n        <div {...contentProps}>\n            <h1 style={{ textAlign: \"center\" }}>\n                {translate(\"pages.updatePassword.title\", \"Update Password\")}\n            </h1>\n            <hr />\n            <form\n                onSubmit={(e) => {\n                    e.preventDefault();\n                    updatePassword({\n                        password: newPassword,\n                        confirmPassword,\n                    });\n                }}\n                {...formProps}\n            >\n                <div\n                    style={{\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        padding: 25,\n                    }}\n                >\n                    <label htmlFor=\"password-input\">\n                        {translate(\n                            \"pages.updatePassword.fields.password\",\n                            \"New Password\",\n                        )}\n                    </label>\n                    <input\n                        id=\"password-input\"\n                        name=\"password\"\n                        type=\"password\"\n                        required\n                        size={20}\n                        value={newPassword}\n                        onChange={(e) => setNewPassword(e.target.value)}\n                    />\n                    <label htmlFor=\"confirm-password-input\">\n                        {translate(\n                            \"pages.updatePassword.fields.confirmPassword\",\n                            \"Confirm New Password\",\n                        )}\n                    </label>\n                    <input\n                        id=\"confirm-password-input\"\n                        name=\"confirmPassword\"\n                        type=\"password\"\n                        required\n                        size={20}\n                        value={confirmPassword}\n                        onChange={(e) => setConfirmPassword(e.target.value)}\n                    />\n                    <input\n                        type=\"submit\"\n                        disabled={isLoading}\n                        value={translate(\n                            \"pages.updatePassword.buttons.submit\",\n                            \"Update\",\n                        )}\n                    />\n                </div>\n            </form>\n        </div>\n    );\n\n    return (\n        <div {...wrapperProps}>\n            {renderContent ? renderContent(content, title) : content}\n        </div>\n    );\n};\n","import React from \"react\";\n\n/**\n * **refine** shows a default ready page on root route when no `resources` is passed to the `<Refine>` component as a property.\n *\n * @deprecated `ReadyPage` is deprecated and will be removed in the next major release.\n */\nexport const ReadyPage: React.FC = () => {\n    return (\n        <>\n            <h1>Welcome on board</h1>\n            <p>Your configuration is completed.</p>\n            <p>\n                Now you can get started by adding your resources to the{\" \"}\n                <code>`resources`</code> property of <code>{\"`<Refine>`\"}</code>\n            </p>\n            <div style={{ display: \"flex\", gap: 8 }}>\n                <a href=\"https://refine.dev\" target=\"_blank\" rel=\"noreferrer\">\n                    <button>Documentation</button>\n                </a>\n                <a\n                    href=\"https://refine.dev/examples\"\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                >\n                    <button>Examples</button>\n                </a>\n                <a\n                    href=\"https://discord.gg/refine\"\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                >\n                    <button>Community</button>\n                </a>\n            </div>\n        </>\n    );\n};\n","import React, { useState } from \"react\";\n\nimport { useMediaQuery } from \"@definitions/helpers\";\n\ntype CardInfo = {\n    title: string;\n    description: string;\n    link: string;\n    icon: React.ReactNode;\n};\n\nconst CARDS: CardInfo[] = [\n    {\n        title: \"Documentation\",\n        description:\n            \"Learn about the technical details of using refine in your projects.\",\n        link: \"https://refine.dev/\",\n        icon: (\n            <svg\n                width=\"14\"\n                height=\"16\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <path\n                    d=\"M2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V5a1 1 0 0 0-1-1H3a1 1 0 0 1 0-2h10a1 1 0 1 0 0-2H2Z\"\n                    fill=\"#fff\"\n                />\n            </svg>\n        ),\n    },\n    {\n        title: \"Tutorial\",\n        description:\n            \"Learn how to use refine by building a fully-functioning CRUD app, from scratch to full launch.\",\n        link: \"https://refine.dev/docs/tutorial/introduction/index/\",\n        icon: (\n            <svg\n                width=\"16\"\n                height=\"14\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <path\n                    d=\"M0 4.573c0-.475.163-.948.53-1.25a4.57 4.57 0 0 1 .854-.553L5.956.485a4.571 4.571 0 0 1 4.088 0l4.572 2.285c.308.154.594.34.853.553.306.251.47.62.517 1.01.01.055.014.112.014.169v6.5a1 1 0 0 1-2 0V6.684l-3.956 1.978a4.571 4.571 0 0 1-4.088 0L1.384 6.376a4.57 4.57 0 0 1-.853-.553C.163 5.522 0 5.05 0 4.573Z\"\n                    fill=\"#fff\"\n                />\n                <path\n                    d=\"M5.061 13.305 3 12.274V9.42l2.061 1.031a6.571 6.571 0 0 0 5.878 0L13 9.421v2.853l-2.061 1.03a6.571 6.571 0 0 1-5.878 0Z\"\n                    fill=\"#fff\"\n                />\n            </svg>\n        ),\n    },\n    {\n        title: \"Examples\",\n        description:\n            \"A collection of reference applications you can use as a starting point.\",\n        link: \"https://refine.dev/examples\",\n        icon: (\n            <svg\n                width=\"16\"\n                height=\"16\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <path\n                    fillRule=\"evenodd\"\n                    clipRule=\"evenodd\"\n                    d=\"M0 2a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v4H0V2Zm3 2a1 1 0 1 0 0-2 1 1 0 0 0 0 2Zm4-1a1 1 0 1 1-2 0 1 1 0 0 1 2 0Zm2 1a1 1 0 1 0 0-2 1 1 0 0 0 0 2Z\"\n                    fill=\"#fff\"\n                />\n                <path\n                    d=\"M0 14V8h16v6a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2Z\"\n                    fill=\"#fff\"\n                />\n            </svg>\n        ),\n    },\n    {\n        title: \"Community\",\n        description:\n            \"Join our Discord community and keep up with the latest news.\",\n        link: \"https://discord.gg/refine\",\n        icon: (\n            <svg\n                width=\"16\"\n                height=\"12\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <path\n                    d=\"M13.553 1.005A13.334 13.334 0 0 0 10.253 0c-.156.276-.298.56-.423.85a12.42 12.42 0 0 0-3.664 0A8.975 8.975 0 0 0 5.744 0 13.43 13.43 0 0 0 2.44 1.007C.351 4.066-.215 7.05.068 9.99A13.36 13.36 0 0 0 4.116 12c.328-.436.618-.9.867-1.384a8.647 8.647 0 0 1-1.365-.645c.115-.082.227-.167.335-.249a9.594 9.594 0 0 0 8.094 0c.11.089.222.173.335.25-.436.254-.894.47-1.368.646.249.484.539.946.867 1.382a13.3 13.3 0 0 0 4.051-2.01c.332-3.41-.568-6.365-2.379-8.985Zm-8.21 7.176c-.79 0-1.442-.709-1.442-1.58 0-.872.63-1.587 1.439-1.587s1.456.715 1.442 1.586c-.014.872-.636 1.58-1.44 1.58Zm5.315 0c-.79 0-1.44-.709-1.44-1.58 0-.872.63-1.587 1.44-1.587.81 0 1.452.715 1.438 1.586-.014.872-.634 1.58-1.438 1.58Z\"\n                    fill=\"#fff\"\n                />\n            </svg>\n        ),\n    },\n];\n\n/**\n * It is a page that welcomes you after the configuration is completed.\n */\nexport const WelcomePage: React.FC = () => {\n    const isTablet = useMediaQuery(\"(max-width: 1010px)\");\n    const isMobile = useMediaQuery(\"(max-width: 650px)\");\n\n    const getGridTemplateColumns = () => {\n        if (isMobile) {\n            return \"1, 280px\";\n        } else if (isTablet) {\n            return \"2, 280px\";\n        } else {\n            return \"4, 208px\";\n        }\n    };\n\n    const getHeaderFontSize = () => {\n        if (isMobile) {\n            return \"32px\";\n        } else if (isTablet) {\n            return \"40px\";\n        } else {\n            return \"48px\";\n        }\n    };\n\n    const getSubHeaderFontSize = () => {\n        if (isMobile) {\n            return \"16px\";\n        } else if (isTablet) {\n            return \"20px\";\n        } else {\n            return \"24px\";\n        }\n    };\n\n    return (\n        <div\n            style={{\n                backgroundImage:\n                    \"url(https://refine.ams3.cdn.digitaloceanspaces.com/welcome-page/welcome-page.webp)\",\n                backgroundPosition: \"center top\",\n                backgroundSize: \"cover\",\n                backgroundRepeat: \"no-repeat\",\n                minHeight: \"100vh\",\n                backgroundColor: \"#0D0D12\",\n                fontFamily: \"Arial\",\n                color: \"#FFFFFF\",\n            }}\n        >\n            <div style={{ height: \"89px\" }}></div>\n            <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n                <img\n                    src=\"https://refine.ams3.cdn.digitaloceanspaces.com/welcome-page/welcome-logo.webp\"\n                    width=\"198\"\n                    height=\"54\"\n                />\n            </div>\n            <div\n                style={{\n                    height: isTablet ? \"270px\" : \"22vw\",\n                    minHeight: isTablet ? \"270px\" : \"313px\",\n                }}\n            ></div>\n            <div\n                style={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    gap: \"16px\",\n                    textAlign: \"center\",\n                }}\n            >\n                <h1\n                    style={{\n                        fontSize: getHeaderFontSize(),\n                        fontWeight: 700,\n                        margin: \"0px\",\n                    }}\n                >\n                    Welcome Aboard!\n                </h1>\n                <h4\n                    style={{\n                        fontSize: getSubHeaderFontSize(),\n                        fontWeight: 400,\n                        margin: \"0px\",\n                    }}\n                >\n                    Your configuration is completed.\n                </h4>\n            </div>\n            <div style={{ height: \"64px\" }}></div>\n            <div\n                style={{\n                    display: \"grid\",\n                    gridTemplateColumns: `repeat(${getGridTemplateColumns()})`,\n                    justifyContent: \"center\",\n                    gap: \"48px\",\n                    paddingRight: \"16px\",\n                    paddingLeft: \"16px\",\n                    maxWidth: \"976px\",\n                    margin: \"auto\",\n                }}\n            >\n                {CARDS.map((card) => (\n                    <Card key={`welcome-page-${card.title}`} card={card} />\n                ))}\n            </div>\n            <div style={{ height: \"64px\" }}></div>\n        </div>\n    );\n};\n\ntype CardProps = {\n    card: CardInfo;\n};\n\nconst Card: React.FC<CardProps> = ({ card }) => {\n    const { title, description, icon, link } = card;\n\n    const [isHover, setIsHover] = useState(false);\n\n    return (\n        <div\n            style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                gap: \"16px\",\n            }}\n        >\n            <div\n                style={{\n                    display: \"flex\",\n                    alignItems: \"center\",\n                }}\n            >\n                <a\n                    onPointerEnter={() => setIsHover(true)}\n                    onPointerLeave={() => setIsHover(false)}\n                    style={{\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        color: \"#fff\",\n                        textDecoration: \"none\",\n                    }}\n                    href={link}\n                >\n                    {icon}\n                    <span\n                        style={{\n                            fontSize: \"16px\",\n                            fontWeight: 700,\n                            marginLeft: \"13px\",\n                            marginRight: \"14px\",\n                        }}\n                    >\n                        {title}\n                    </span>\n                    <svg\n                        style={{\n                            transition:\n                                \"transform 0.5s ease-in-out, opacity 0.2s ease-in-out\",\n                            ...(isHover && {\n                                transform: \"translateX(4px)\",\n                                opacity: 1,\n                            }),\n                        }}\n                        width=\"12\"\n                        height=\"8\"\n                        fill=\"none\"\n                        opacity=\"0.5\"\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                    >\n                        <path\n                            d=\"M7.293.293a1 1 0 0 1 1.414 0l3 3a1 1 0 0 1 0 1.414l-3 3a1 1 0 0 1-1.414-1.414L8.586 5H1a1 1 0 0 1 0-2h7.586L7.293 1.707a1 1 0 0 1 0-1.414Z\"\n                            fill=\"#fff\"\n                        />\n                    </svg>\n                </a>\n            </div>\n            <span\n                style={{\n                    fontSize: \"12px\",\n                    opacity: 0.5,\n                    lineHeight: \"16px\",\n                }}\n            >\n                {description}\n            </span>\n        </div>\n    );\n};\n","import React from \"react\";\nimport { QueryClient, QueryClientProvider } from \"@tanstack/react-query\";\nimport { useQuerySubscription } from \"@refinedev/devtools-internal\";\n\nimport { ReadyPage as DefaultReadyPage, RouteChangeHandler } from \"@components\";\nimport { Telemetry } from \"@components/telemetry\";\nimport { AccessControlContextProvider } from \"@contexts/accessControl\";\nimport { AuditLogContextProvider } from \"@contexts/auditLog\";\nimport {\n    AuthBindingsContextProvider,\n    LegacyAuthContextProvider,\n} from \"@contexts/auth\";\nimport { DataContextProvider } from \"@contexts/data\";\nimport { LegacyRouterContextProvider } from \"@contexts/legacy-router\";\nimport { LiveContextProvider } from \"@contexts/live\";\nimport { NotificationContextProvider } from \"@contexts/notification\";\nimport { RefineContextProvider } from \"@contexts/refine\";\nimport { ResourceContextProvider } from \"@contexts/resource\";\nimport { TranslationContextProvider } from \"@contexts/translation\";\nimport { UndoableQueueContextProvider } from \"@contexts/undoableQueue\";\nimport { UnsavedWarnContextProvider } from \"@contexts/unsavedWarn\";\nimport { handleRefineOptions } from \"@definitions\";\nimport { useDeepMemo } from \"@hooks/deepMemo\";\nimport { RouterBindings } from \"src/interfaces/bindings\";\n\nimport { RouterPickerProvider } from \"@contexts/router-picker\";\nimport { RouterBindingsProvider } from \"../../../contexts/router\";\nimport { useRouterMisuseWarning } from \"../../../hooks/router/use-router-misuse-warning/index\";\nimport {\n    AccessControlProvider,\n    AuditLogProvider,\n    AuthBindings,\n    DashboardPageProps,\n    I18nProvider,\n    IDataContextProvider,\n    IDataMultipleContextProvider,\n    ILiveContext,\n    INotificationContext,\n    IRefineOptions,\n    IRouterProvider,\n    LayoutProps,\n    LegacyAuthProvider,\n    LiveModeProps,\n    NotificationProvider,\n    TitleProps,\n} from \"../../../interfaces\";\nimport { ResourceProps } from \"../../../interfaces/bindings/resource\";\n\nexport interface RefineProps {\n    children?: React.ReactNode;\n    /**\n     * `resources` is the predefined interaction points for a refine app. A resource represents an entity in an endpoint in the API.\n     * While this is not a required property, it is used in resource detection and creation of routes for the app.\n     * @type [`ResourceProps[]`](https://refine.dev/docs/api-reference/core/components/refine-config/#resources)\n     */\n    resources?: ResourceProps[];\n    /**\n     * **refine** needs some router functions to create resource pages, handle navigation, etc. This provider allows you to use the router library you want\n     * @type [`IRouterProvider`](https://refine.dev/docs/api-reference/core/providers/router-provider/)\n     * @deprecated This property is deprecated and was the legacy way of routing. Please use `routerProvider` with new router bindings instead.\n     */\n    legacyRouterProvider?: IRouterProvider;\n    /**\n     * Router bindings for **refine**. A simple interface for **refine** to interact with your router in a flexible way.\n     * @type [`RouterBindings`](https://refine.dev/docs/api-reference/core/bindings/router/)\n     */\n    routerProvider?: RouterBindings;\n    /**\n     * A `dataProvider` is the place where a refine app communicates with an API. Data providers also act as adapters for refine, making it possible for it to consume different API's and data services.\n     * @type [`IDataContextProvider` | `IDataMultipleContextProvider`](https://refine.dev/docs/api-reference/core/providers/data-provider/)\n     */\n    dataProvider: IDataContextProvider | IDataMultipleContextProvider;\n    /**\n     * `authProvider` handles authentication logic like login, logout flow and checking user credentials. It is an object with methods that refine uses when necessary.\n     * @type [`AuthBindings`](https://refine.dev/docs/api-reference/core/providers/auth-provider/)\n     */\n    authProvider?: AuthBindings;\n    /**\n     * `legacyAuthProvider` handles authentication logic like login, logout flow and checking user credentials. It is an object with methods that refine uses when necessary.\n     * @type [`AuthProvider`](https://refine.dev/docs/api-reference/core/providers/auth-provider/)\n     * @deprecated `legacyAuthProvider` is deprecated with refine@4, use `authProvider` instead.\n     */\n    legacyAuthProvider?: LegacyAuthProvider;\n    /**\n     * **refine** lets you add Realtime support to your app via `liveProvider`. It can be used to update and show data in Realtime throughout your app.\n     * @type [`ILiveContext`](https://refine.dev/docs/api-reference/core/providers/live-provider/)\n     */\n    liveProvider?: ILiveContext;\n    /**\n     * `notificationProvider` handles notification logics. It is an object with methods that refine uses when necessary.\n     * @type [`NotificationProvider` | `(() => NotificationProvider)`](https://refine.dev/docs/api-reference/core/providers/notification-provider/)\n     */\n    notificationProvider?: NotificationProvider | (() => NotificationProvider);\n    /**\n     * `accessControlProvider` is the entry point for implementing access control for refine apps.\n     * @type [`AccessControlProvider`](https://refine.dev/docs/api-reference/core/providers/accessControl-provider/)\n     */\n    accessControlProvider?: AccessControlProvider;\n    /**\n     * **refine** allows you to track changes in your data and keep track of who made the changes.\n     * @type [`AuditLogProvider`](https://refine.dev/docs/api-reference/core/providers/audit-log-provider#overview)\n     */\n    auditLogProvider?: AuditLogProvider;\n    /**\n     * `i18nProvider` property lets you add i18n support to your app. Making you able to use any i18n framework.\n     * @type [`i18nProvider`](https://refine.dev/docs/api-reference/core/providers/i18n-provider/)\n     */\n    i18nProvider?: I18nProvider;\n    /**\n     * A custom error component.\n     * @type [`ReactNode`](https://refine.dev/docs/api-reference/core/components/refine-config/#catchall)\n     * @deprecated Please use the `catchAll` element in your routes instead.\n     */\n    catchAll?: React.ReactNode;\n    /**\n     * Custom login component can be passed to the `LoginPage` property.\n     * @type [`React.FC`](https://refine.dev/docs/api-reference/core/components/refine-config/#loginpage)\n     * @deprecated Please use the `LoginPage` component in your routes instead.\n     */\n    LoginPage?: React.FC;\n    /**\n     * A custom dashboard page can be passed to the `DashboardPage` prop which is accessible on root route.\n     * @type [`React.FC<DashboardPageProps>`](https://refine.dev/docs/api-reference/core/components/refine-config/#dashboardpage)\n     * @deprecated Please use the `DashboardPage` component in your routes instead.\n     */\n    DashboardPage?: React.FC<DashboardPageProps>;\n    /**\n     * Custom ready page component can be set by passing to `ReadyPage` property.\n     * @type [`React.FC`](https://refine.dev/docs/api-reference/core/components/refine-config/#readypage)\n     * @deprecated This component is only used with the legacy router and will be removed in the future.\n     */\n    ReadyPage?: React.FC;\n    /**\n     * Default layout can be customized by passing the `Layout` property.\n     * @type [`React.FC<LayoutProps>`](https://refine.dev/docs/api-reference/core/components/refine-config/#layout)\n     * @deprecated Please use the `Layout` component as a children instead of a prop.\n     */\n    Layout?: React.FC<LayoutProps>;\n    /**\n     * The default sidebar can be customized by using refine hooks and passing custom components to `Sider` property.\n     * @type [`React.FC`](https://refine.dev/docs/api-reference/core/components/refine-config/#sider)\n     * @deprecated Please pass the `Sider` component to your `Layout` component.\n     */\n    Sider?: React.FC;\n    /**\n     * The default app header can be customized by passing the `Header` property.\n     * @type [`React.FC`](https://refine.dev/docs/api-reference/core/components/refine-config/#header)\n     * @deprecated Please pass the `Header` component to your `Layout` component.\n     */\n    Header?: React.FC;\n    /**\n     *The default app footer can be customized by passing the `Footer` property.\n     * @type [`React.FC`](https://refine.dev/docs/api-reference/core/components/refine-config/#footer)\n     * @deprecated Please pass the `Footer` component to your `Layout` component.\n     */\n    Footer?: React.FC;\n    /**\n     * The component wanted to be placed out of app layout structure can be set by passing to `OffLayoutArea` prop.\n     * @type [`React.FC`](https://refine.dev/docs/api-reference/core/components/refine-config/#offlayoutarea)\n     * @deprecated Please use your `OffLayoutArea` component as a children instead of a prop.\n     */\n    OffLayoutArea?: React.FC;\n    /**\n     * TThe app title can be set by passing the `Title` property.\n     * @type [`React.FC<TitleProps>`](https://refine.dev/docs/api-reference/core/components/refine-config/#title)\n     * @deprecated Please pass the `Title` component to your `Layout` component.\n     */\n    Title?: React.FC<TitleProps>;\n    /**\n     * Callback to handle all live events.\n     * @type [`(event: LiveEvent) => void`](https://refine.dev/docs/api-reference/core/providers/live-provider/#onliveevent)\n     */\n    onLiveEvent?: LiveModeProps[\"onLiveEvent\"];\n    /**\n     * `options` is used to configure the app.\n     * @type [`IRefineOptions`](https://refine.dev/docs/api-reference/core/components/refine-config/#options)\n     * */\n    options?: IRefineOptions;\n}\n\n/**\n * {@link https://refine.dev/docs/api-reference/core/components/refine-config `<Refine> component`} is the entry point of a refine app.\n * It is where the highest level of configuration of the app occurs.\n * Only a dataProvider is required to bootstrap the app. After adding a dataProvider, resources can be added as property.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/components/refine-config} for more details.\n */\nexport const Refine: React.FC<RefineProps> = ({\n    legacyAuthProvider,\n    authProvider,\n    dataProvider,\n    legacyRouterProvider,\n    routerProvider,\n    notificationProvider,\n    accessControlProvider,\n    auditLogProvider,\n    resources,\n    DashboardPage,\n    ReadyPage,\n    LoginPage,\n    catchAll,\n    children,\n    liveProvider,\n    i18nProvider,\n    Title,\n    Layout,\n    Sider,\n    Header,\n    Footer,\n    OffLayoutArea,\n    onLiveEvent,\n    options,\n}) => {\n    const {\n        optionsWithDefaults,\n        disableTelemetryWithDefault,\n        reactQueryWithDefaults,\n    } = handleRefineOptions({\n        options,\n    });\n\n    const queryClient = useDeepMemo(() => {\n        if (reactQueryWithDefaults.clientConfig instanceof QueryClient) {\n            return reactQueryWithDefaults.clientConfig;\n        }\n\n        return new QueryClient({\n            ...reactQueryWithDefaults.clientConfig,\n            defaultOptions: {\n                ...reactQueryWithDefaults.clientConfig.defaultOptions,\n                queries: {\n                    refetchOnWindowFocus: false,\n                    keepPreviousData: true,\n                    ...reactQueryWithDefaults.clientConfig.defaultOptions\n                        ?.queries,\n                },\n            },\n        });\n    }, [reactQueryWithDefaults.clientConfig]);\n\n    useQuerySubscription(queryClient);\n\n    const useNotificationProviderValues = React.useMemo(() => {\n        return typeof notificationProvider === \"function\"\n            ? notificationProvider\n            : () => notificationProvider ?? ({} as INotificationContext);\n    }, [notificationProvider]);\n\n    const notificationProviderContextValues = useNotificationProviderValues();\n\n    /**\n     * Warn our users if they are using the old way of routing in the wrong prop.\n     */\n    useRouterMisuseWarning(routerProvider);\n    /** */\n\n    /**\n     * `<ReadyPage />` is only used in the legacy routing and is not used in the new routing.\n     * If `legacyRouterProvider` is provided and `routerProvider` is not, we'll check for the `resources` prop to be empty.\n     * If `resources` is empty, then we'll render `<ReadyPage />` component.\n     */\n    if (\n        legacyRouterProvider &&\n        !routerProvider &&\n        (resources ?? []).length === 0\n    ) {\n        return ReadyPage ? <ReadyPage /> : <DefaultReadyPage />;\n    }\n\n    /** Router\n     *\n     * Handle routing from `RouterBindingsProvider` and `router` prop for the brand new way\n     * If `router` is not provided, then we'r checking for `routerProvider` prop\n     * If `routerProvider` is provided, then `RouterContextProvider` is used\n     * If none of them is provided, then `RouterBindingsProvider` is used because it supports undefined router\n     *\n     * `RouterContextProvider` is skipped whenever possible and by this way,\n     * we can achieve backward compability only when its provided by user\n     *\n     */\n    const { RouterComponent = React.Fragment } = !routerProvider\n        ? legacyRouterProvider ?? {}\n        : {};\n    /** */\n\n    return (\n        <QueryClientProvider client={queryClient}>\n            <NotificationContextProvider {...notificationProviderContextValues}>\n                <LegacyAuthContextProvider\n                    {...(legacyAuthProvider ?? {})}\n                    isProvided={Boolean(legacyAuthProvider)}\n                >\n                    <AuthBindingsContextProvider\n                        {...(authProvider ?? {})}\n                        isProvided={Boolean(authProvider)}\n                    >\n                        <DataContextProvider {...dataProvider}>\n                            <LiveContextProvider liveProvider={liveProvider}>\n                                <RouterPickerProvider\n                                    value={\n                                        legacyRouterProvider && !routerProvider\n                                            ? \"legacy\"\n                                            : \"new\"\n                                    }\n                                >\n                                    <RouterBindingsProvider\n                                        router={routerProvider}\n                                    >\n                                        <LegacyRouterContextProvider\n                                            {...legacyRouterProvider}\n                                        >\n                                            <ResourceContextProvider\n                                                resources={resources ?? []}\n                                            >\n                                                <TranslationContextProvider\n                                                    i18nProvider={i18nProvider}\n                                                >\n                                                    <AccessControlContextProvider\n                                                        {...(accessControlProvider ??\n                                                            {})}\n                                                    >\n                                                        <AuditLogContextProvider\n                                                            {...(auditLogProvider ??\n                                                                {})}\n                                                        >\n                                                            <UndoableQueueContextProvider>\n                                                                <RefineContextProvider\n                                                                    mutationMode={\n                                                                        optionsWithDefaults.mutationMode\n                                                                    }\n                                                                    warnWhenUnsavedChanges={\n                                                                        optionsWithDefaults.warnWhenUnsavedChanges\n                                                                    }\n                                                                    syncWithLocation={\n                                                                        optionsWithDefaults.syncWithLocation\n                                                                    }\n                                                                    Title={\n                                                                        Title\n                                                                    }\n                                                                    undoableTimeout={\n                                                                        optionsWithDefaults.undoableTimeout\n                                                                    }\n                                                                    catchAll={\n                                                                        catchAll\n                                                                    }\n                                                                    DashboardPage={\n                                                                        DashboardPage\n                                                                    }\n                                                                    LoginPage={\n                                                                        LoginPage\n                                                                    }\n                                                                    Layout={\n                                                                        Layout\n                                                                    }\n                                                                    Sider={\n                                                                        Sider\n                                                                    }\n                                                                    Footer={\n                                                                        Footer\n                                                                    }\n                                                                    Header={\n                                                                        Header\n                                                                    }\n                                                                    OffLayoutArea={\n                                                                        OffLayoutArea\n                                                                    }\n                                                                    hasDashboard={\n                                                                        !!DashboardPage\n                                                                    }\n                                                                    liveMode={\n                                                                        optionsWithDefaults.liveMode\n                                                                    }\n                                                                    onLiveEvent={\n                                                                        onLiveEvent\n                                                                    }\n                                                                    options={\n                                                                        optionsWithDefaults\n                                                                    }\n                                                                >\n                                                                    <UnsavedWarnContextProvider>\n                                                                        <RouterComponent>\n                                                                            {\n                                                                                children\n                                                                            }\n                                                                            {!disableTelemetryWithDefault && (\n                                                                                <Telemetry />\n                                                                            )}\n                                                                            <RouteChangeHandler />\n                                                                        </RouterComponent>\n                                                                    </UnsavedWarnContextProvider>\n                                                                </RefineContextProvider>\n                                                            </UndoableQueueContextProvider>\n                                                        </AuditLogContextProvider>\n                                                    </AccessControlContextProvider>\n                                                </TranslationContextProvider>\n                                            </ResourceContextProvider>\n                                        </LegacyRouterContextProvider>\n                                    </RouterBindingsProvider>\n                                </RouterPickerProvider>\n                            </LiveContextProvider>\n                        </DataContextProvider>\n                    </AuthBindingsContextProvider>\n                </LegacyAuthContextProvider>\n            </NotificationContextProvider>\n        </QueryClientProvider>\n    );\n};\n","import React from \"react\";\n\nimport { useTelemetryData } from \"@hooks/useTelemetryData\";\n\nimport { ITelemetryData } from \"../../interfaces/telemetry\";\n\nconst encode = (payload: ITelemetryData): string | undefined => {\n    try {\n        const stringifiedPayload = JSON.stringify(payload || {});\n\n        if (typeof btoa !== \"undefined\") {\n            return btoa(stringifiedPayload);\n        }\n\n        return Buffer.from(stringifiedPayload).toString(\"base64\");\n    } catch (err) {\n        return undefined;\n    }\n};\n\nconst throughImage = (src: string) => {\n    const img = new Image();\n\n    img.src = src;\n};\n\nconst throughFetch = (src: string) => {\n    fetch(src);\n};\n\nconst transport = (src: string) => {\n    if (typeof Image !== \"undefined\") {\n        throughImage(src);\n    } else if (typeof fetch !== \"undefined\") {\n        throughFetch(src);\n    }\n};\n\nexport const Telemetry: React.FC<{}> = () => {\n    const payload = useTelemetryData();\n    const sent = React.useRef(false);\n\n    React.useEffect(() => {\n        if (sent.current) {\n            return;\n        }\n        const encoded = encode(payload);\n\n        if (!encoded) {\n            return;\n        }\n\n        transport(`https://telemetry.refine.dev/telemetry?payload=${encoded}`);\n        sent.current = true;\n    }, []);\n\n    return null;\n};\n","import { useContext } from \"react\";\n\nimport { AuditLogContext } from \"@contexts/auditLog\";\nimport { LiveContext } from \"@contexts/live\";\nimport { RouterContext } from \"@contexts/legacy-router\";\nimport { DataContext } from \"@contexts/data\";\nimport { TranslationContext } from \"@contexts/translation\";\nimport { NotificationContext } from \"@contexts/notification\";\nimport { AccessControlContext } from \"@contexts/accessControl\";\nimport { useResource } from \"@hooks/resource\";\n\nimport { ITelemetryData } from \"../../interfaces/telemetry\";\nimport { useIsExistAuthentication, useRefineContext } from \"..\";\n\n// It reads and updates from package.json during build. ref: tsup.config.ts\nconst REFINE_VERSION = \"4.45.0\";\n\nexport const useTelemetryData = (): ITelemetryData => {\n    const auth = useIsExistAuthentication();\n    const auditLogContext = useContext(AuditLogContext);\n    const liveContext = useContext(LiveContext);\n    const routerContext = useContext(RouterContext);\n    const dataContext = useContext(DataContext);\n    const { i18nProvider } = useContext(TranslationContext);\n    const notificationContext = useContext(NotificationContext);\n    const accessControlContext = useContext(AccessControlContext);\n    const { resources } = useResource();\n    const refineOptions = useRefineContext();\n\n    const auditLog =\n        !!auditLogContext.create ||\n        !!auditLogContext.get ||\n        !!auditLogContext.update;\n\n    const live =\n        !!liveContext?.publish ||\n        !!liveContext?.subscribe ||\n        !!liveContext?.unsubscribe;\n\n    const router =\n        !!routerContext.useHistory ||\n        !!routerContext.Link ||\n        !!routerContext.Prompt ||\n        !!routerContext.useLocation ||\n        !!routerContext.useParams;\n\n    const data = !!dataContext;\n\n    const i18n =\n        !!i18nProvider?.changeLocale ||\n        !!i18nProvider?.getLocale ||\n        !!i18nProvider?.translate;\n\n    const notification =\n        !!notificationContext.close || !!notificationContext.open;\n\n    const accessControl = !!accessControlContext.can;\n\n    const projectId = refineOptions?.options?.projectId;\n\n    return {\n        providers: {\n            auth,\n            auditLog,\n            live,\n            router,\n            data,\n            i18n,\n            notification,\n            accessControl,\n        },\n        version: REFINE_VERSION,\n        resourceCount: resources.length,\n        projectId,\n    };\n};\n","import { IRouterProvider, RouterBindings } from \"src/interfaces\";\n\nexport const checkRouterPropMisuse = (\n    value: IRouterProvider | RouterBindings,\n) => {\n    // check if `routerProvider` prop is passed with legacy properties.\n    // If yes, console.warn the user to use `legacyRuterProvider` prop instead.\n    const bindings = [\"go\", \"parse\", \"back\", \"Link\"];\n\n    // check if `value` contains properties other than `bindings`\n    const otherProps = Object.keys(value).filter(\n        (key) => !bindings.includes(key),\n    );\n\n    const hasOtherProps = otherProps.length > 0;\n\n    if (hasOtherProps) {\n        console.warn(\n            `Unsupported properties are found in \\`routerProvider\\` prop. You provided \\`${otherProps.join(\n                \", \",\n            )}\\`. Supported properties are \\`${bindings.join(\n                \", \",\n            )}\\`. You may wanted to use \\`legacyRouterProvider\\` prop instead.`,\n        );\n\n        return true;\n    }\n\n    return false;\n};\n","import { checkRouterPropMisuse } from \"@definitions/helpers/check-router-prop-misuse\";\nimport React from \"react\";\nimport { RouterBindings } from \"src/interfaces\";\n\nexport const useRouterMisuseWarning = (value?: RouterBindings) => {\n    const warned = React.useRef(false);\n\n    React.useEffect(() => {\n        if (warned.current === false) {\n            if (value) {\n                const warn = checkRouterPropMisuse(value);\n                if (warn) {\n                    warned.current = true;\n                }\n            }\n        }\n    }, [value]);\n};\n","import React, { useEffect, useState } from \"react\";\n\nimport { ActionTypes } from \"@contexts/undoableQueue\";\nimport { useCancelNotification, useNotification, useTranslate } from \"@hooks\";\nimport { IUndoableQueue } from \"../../interfaces\";\n\nimport { userFriendlySecond } from \"@definitions/helpers\";\n\nexport const UndoableQueue: React.FC<{\n    notification: IUndoableQueue;\n}> = ({ notification }) => {\n    const translate = useTranslate();\n\n    const { notificationDispatch } = useCancelNotification();\n    const { open } = useNotification();\n\n    const [timeoutId, setTimeoutId] = useState<number | undefined>();\n\n    const cancelNotification = () => {\n        if (notification.isRunning === true) {\n            if (notification.seconds === 0) {\n                notification.doMutation();\n            }\n            if (!notification.isSilent) {\n                open?.({\n                    key: `${notification.id}-${notification.resource}-notification`,\n                    type: \"progress\",\n                    message: translate(\n                        \"notifications.undoable\",\n                        {\n                            seconds: userFriendlySecond(notification.seconds),\n                        },\n                        `You have ${userFriendlySecond(\n                            notification.seconds,\n                        )} seconds to undo`,\n                    ),\n                    cancelMutation: notification.cancelMutation,\n                    undoableTimeout: userFriendlySecond(notification.seconds),\n                });\n            }\n\n            if (notification.seconds > 0) {\n                if (timeoutId) {\n                    clearTimeout(timeoutId);\n                }\n\n                const newTimeoutId = setTimeout(() => {\n                    notificationDispatch({\n                        type: ActionTypes.DECREASE_NOTIFICATION_SECOND,\n                        payload: {\n                            id: notification.id,\n                            seconds: notification.seconds,\n                            resource: notification.resource,\n                        },\n                    });\n                }, 1000) as unknown as number;\n\n                setTimeoutId(newTimeoutId);\n            }\n        }\n    };\n\n    useEffect(() => {\n        cancelNotification();\n    }, [notification]);\n\n    return null;\n};\n","import React, { useEffect } from \"react\";\n\nimport {\n    useRefineContext,\n    useRouterContext,\n    useTranslate,\n    useWarnAboutChange,\n} from \"@hooks\";\nimport { LayoutProps, TitleProps } from \"../../interfaces\";\n\nexport interface LayoutWrapperProps {\n    /**\n     * Outer component that renders other components\n     * @default *\n     */\n    Layout?: React.FC<LayoutProps>;\n    /**\n     * [Custom sider to use](/api-reference/core/components/refine-config.md#sider)\n     * @default *\n     */\n    Sider?: React.FC;\n    /**\n     * [Custom header to use](/api-reference/core/components/refine-config.md#header)\n     * @default *\n     */\n    Header?: React.FC;\n    /**\n     * [Custom title to use](/api-reference/core/components/refine-config.md#title)\n     * @default *\n     */\n    Title?: React.FC<TitleProps>;\n    /**\n     * [Custom footer to use](/api-reference/core/components/refine-config.md#footer)\n     * @default *\n     */\n    Footer?: React.FC;\n    /**\n     * [Custom off layout area to use](/api-reference/core/components/refine-config.md#offlayoutarea)\n     * @default *\n     */\n    OffLayoutArea?: React.FC;\n    children: React.ReactNode;\n}\n\n/**\n * `<LayoutWrapper>` wraps its contents in **refine's** layout with all customizations made in {@link https://refine.dev/docs/core/components/refine-config `<Refine>`} component.\n * It is the default layout used in resource pages.\n * It can be used in custom pages to use global layout.\n *\n * @see {@link https://refine.dev/docs/core/components/layout-wrapper} for more details.\n *\n * @deprecated This component is obsolete and only works with the legacy router providers.\n */\nexport const LayoutWrapper: React.FC<LayoutWrapperProps> = ({\n    children,\n    Layout: LayoutFromProps,\n    Sider: SiderFromProps,\n    Header: HeaderFromProps,\n    Title: TitleFromProps,\n    Footer: FooterFromProps,\n    OffLayoutArea: OffLayoutAreaFromProps,\n}) => {\n    const { Layout, Footer, Header, Sider, Title, OffLayoutArea } =\n        useRefineContext();\n\n    const LayoutToRender = LayoutFromProps ?? Layout;\n\n    return (\n        <LayoutToRender\n            Sider={SiderFromProps ?? Sider}\n            Header={HeaderFromProps ?? Header}\n            Footer={FooterFromProps ?? Footer}\n            Title={TitleFromProps ?? Title}\n            OffLayoutArea={OffLayoutAreaFromProps ?? OffLayoutArea}\n        >\n            {children}\n            <UnsavedPrompt />\n        </LayoutToRender>\n    );\n};\n\nconst UnsavedPrompt: React.FC = () => {\n    const { Prompt } = useRouterContext();\n\n    const translate = useTranslate();\n\n    const { warnWhen, setWarnWhen } = useWarnAboutChange();\n\n    const warnWhenListener = (e: {\n        preventDefault: () => void;\n        returnValue: string;\n    }) => {\n        e.preventDefault();\n\n        e.returnValue = translate(\n            \"warnWhenUnsavedChanges\",\n            \"Are you sure you want to leave? You have unsaved changes.\",\n        );\n\n        return e.returnValue;\n    };\n\n    useEffect(() => {\n        if (warnWhen) {\n            window.addEventListener(\"beforeunload\", warnWhenListener);\n        }\n\n        return window.removeEventListener(\"beforeunload\", warnWhenListener);\n    }, [warnWhen]);\n\n    return (\n        <Prompt\n            when={warnWhen}\n            message={translate(\n                \"warnWhenUnsavedChanges\",\n                \"Are you sure you want to leave? You have unsaved changes.\",\n            )}\n            setWarnWhen={setWarnWhen}\n        />\n    );\n};\n","import React from \"react\";\n\nimport {\n    useGo,\n    useNavigation,\n    useParsed,\n    useRouterContext,\n    useRouterType,\n    useIsAuthenticated,\n} from \"@hooks\";\nimport { useActiveAuthProvider } from \"@definitions/index\";\nimport { GoConfig } from \"src/interfaces\";\n\n/**\n * This hook is used to avoid React's invalid setState call warning.\n * When `go` is called during the render phase, it's updating the internal router state before the render phase is finished.\n * This causes React to throw an error. This hook is used to defer the `go` call to the effect calls.\n */\nconst useDeferredGo = () => {\n    const go = useGo();\n\n    const [config, setConfig] = React.useState<GoConfig | undefined>(undefined);\n\n    React.useEffect(() => {\n        if (config) {\n            go(config);\n        }\n    }, [config]);\n\n    const cb = React.useCallback(\n        (props: GoConfig) => {\n            if (!config) {\n                setConfig(props);\n            }\n        },\n        [config],\n    );\n\n    return cb;\n};\n\nexport type AuthenticatedCommonProps = {\n    /**\n     * Whether to redirect user if not logged in or not.\n     * If not set, user will be redirected to `redirectTo` property of the `check` function's response.\n     * This behavior is only available for new auth providers.\n     * Legacy auth providers will redirect to `/login` by default if this property is not set.\n     * If set to a string, user will be redirected to that string.\n     *\n     * This property only works if `fallback` is **not set**.\n     */\n    redirectOnFail?: string | true;\n    /**\n     * Whether to append current path to search params of the redirect url at `to` property.\n     *\n     * By default, `to` parameter is used by successful invocations of the `useLogin` hook.\n     * If `to` present, it will be used as the redirect url after successful login.\n     */\n    appendCurrentPathToQuery?: boolean;\n    /**\n     * Content to show if user is not logged in.\n     */\n    fallback?: React.ReactNode;\n    /**\n     * Content to show while checking whether user is logged in or not.\n     */\n    loading?: React.ReactNode;\n    /**\n     * Content to show if user is logged in\n     */\n    children?: React.ReactNode;\n};\n\nexport type LegacyAuthenticatedProps = {\n    v3LegacyAuthProviderCompatible: true;\n} & AuthenticatedCommonProps;\n\nexport type AuthenticatedProps = {\n    v3LegacyAuthProviderCompatible?: false;\n} & AuthenticatedCommonProps;\n\nexport function Authenticated(\n    props: LegacyAuthenticatedProps,\n): JSX.Element | null;\n\nexport function Authenticated(props: AuthenticatedProps): JSX.Element | null;\n\n/**\n * `<Authenticated>` is the component form of {@link https://refine.dev/docs/api-reference/core/hooks/auth/useAuthenticated `useAuthenticated`}. It internally uses `useAuthenticated` to provide it's functionality.\n *\n * @see {@link https://refine.dev/docs/core/components/auth/authenticated `<Authenticated>`} component for more details.\n */\nexport function Authenticated({\n    redirectOnFail = true,\n    appendCurrentPathToQuery = true,\n    children,\n    fallback: fallbackContent,\n    loading: loadingContent,\n}: AuthenticatedProps | LegacyAuthenticatedProps): JSX.Element | null {\n    const activeAuthProvider = useActiveAuthProvider();\n    const routerType = useRouterType();\n\n    const hasAuthProvider = Boolean(activeAuthProvider?.isProvided);\n    const isLegacyAuth = Boolean(activeAuthProvider?.isLegacy);\n    const isLegacyRouter = routerType === \"legacy\";\n\n    const parsed = useParsed();\n    const go = useGo();\n    const deferredGo = useDeferredGo();\n    const { replace } = useNavigation();\n    const { useLocation } = useRouterContext();\n    const legacyLocation = useLocation();\n\n    const {\n        isLoading,\n        isFetching,\n        // isRefetching,\n        isSuccess,\n        data: {\n            authenticated: isAuthenticatedStatus,\n            redirectTo: authenticatedRedirect,\n        } = {},\n        refetch,\n    } = useIsAuthenticated({\n        v3LegacyAuthProviderCompatible: isLegacyAuth,\n    });\n\n    React.useEffect(() => {\n        /**\n         * Refetch the authentication status if the content is changed (e.g. redirected or updated)\n         *\n         * This is done to avoid re-rendering the wrappers with the same content.\n         */\n\n        refetch();\n    }, [children, fallbackContent]);\n\n    const state = React.useRef<{\n        status: \"initial\" | \"pending\" | \"settled\";\n        content: React.ReactNode;\n    }>({\n        status: isLoading ? \"initial\" : \"pending\",\n        content: loadingContent ?? null,\n    });\n\n    /**\n     * Update state when fetching the authentication response.\n     */\n    if (isFetching) {\n        state.current.status = \"pending\";\n    } else if (!isFetching) {\n        state.current.status = \"settled\";\n    }\n\n    /**\n     * Authentication status\n     */\n    const isAuthenticated = hasAuthProvider\n        ? isLegacyAuth\n            ? isSuccess\n            : isAuthenticatedStatus\n        : true;\n\n    if (state.current.status === \"settled\") {\n        /**\n         * If the state is settled, and query is resolved.\n         */\n        if (isAuthenticated) {\n            /**\n             * If user is authenticated, show the children.\n             */\n            state.current.content = <>{children ?? null}</>;\n        } else if (typeof fallbackContent !== \"undefined\") {\n            /**\n             * If user is not authenticated, and `fallback` is present, show the fallback content.\n             */\n            state.current.content = <>{fallbackContent}</>;\n        } else {\n            /**\n             * If there's no `fallback` content, redirect will be applied.\n             */\n\n            /**\n             * Current pathname to append to the redirect url.\n             */\n            const pathname = `${\n                isLegacyRouter ? legacyLocation?.pathname : parsed.pathname\n            }`.replace(/(\\?.*|#.*)$/, \"\");\n\n            /**\n             * Redirect url to use, if `redirectOnFail` is set to a string,\n             * it will be used instead of `redirectTo` property of the `check` function's response.\n             */\n            const appliedRedirect = isLegacyAuth\n                ? typeof redirectOnFail === \"string\"\n                    ? redirectOnFail\n                    : \"/login\"\n                : typeof redirectOnFail === \"string\"\n                ? redirectOnFail\n                : (authenticatedRedirect as string | undefined);\n\n            /**\n             * Redirect if `appliedRedirect` is set.\n             */\n            if (appliedRedirect) {\n                if (isLegacyRouter) {\n                    const toQuery = appendCurrentPathToQuery\n                        ? `?to=${encodeURIComponent(pathname)}`\n                        : \"\";\n                    replace(`${appliedRedirect}${toQuery}`);\n                } else {\n                    deferredGo({\n                        to: appliedRedirect,\n                        query: appendCurrentPathToQuery\n                            ? {\n                                  to: parsed.params?.to\n                                      ? parsed.params.to\n                                      : go({\n                                            to: pathname,\n                                            options: { keepQuery: true },\n                                            type: \"path\",\n                                        }),\n                              }\n                            : undefined,\n                        type: \"replace\",\n                    });\n                }\n            }\n        }\n    }\n\n    /**\n     * If there's no `authProvider` set, we don't need to check whether user is logged in or not.\n     */\n    if (!hasAuthProvider) {\n        return <>{children ?? null}</>;\n    }\n\n    /**\n     * Returning the content based on the state, `fallback` or `children`.\n     */\n    return <>{state.current.content}</>;\n}\n","import { useEffect } from \"react\";\nimport { useRouterContext } from \"@hooks\";\nimport { useLegacyAuthContext } from \"@contexts/auth\";\n\nexport const RouteChangeHandler: React.FC = () => {\n    const { useLocation } = useRouterContext();\n\n    const { checkAuth } = useLegacyAuthContext();\n    const location = useLocation();\n\n    useEffect(() => {\n        checkAuth?.().catch(() => false);\n    }, [location?.pathname]);\n\n    return null;\n};\n","import React, { useEffect } from \"react\";\n\nimport { useCan, useResource } from \"@hooks\";\nimport { BaseKey, IResourceItem, ITreeMenu } from \"../../interfaces\";\n\ntype CanParams = {\n    resource?: IResourceItem & { children?: ITreeMenu[] };\n    id?: BaseKey;\n    [key: string]: any;\n};\n\ntype OnUnauthorizedProps = {\n    resource?: string;\n    reason?: string;\n    action: string;\n    params: CanParams;\n};\n\ntype CanAccessBaseProps = {\n    /**\n     * Resource name for API data interactions\n     */\n    resource?: string;\n    /**\n     * Intended action on resource\n     */\n    action: string;\n    /**\n     * Parameters associated with the resource\n     * @type { resource?: [IResourceItem](https://refine.dev/docs/api-reference/core/interfaceReferences/#canparams), id?: [BaseKey](https://refine.dev/docs/api-reference/core/interfaceReferences/#basekey), [key: string]: any }\n     */\n    params?: CanParams;\n    /**\n     * Content to show if access control returns `false`\n     */\n    fallback?: React.ReactNode;\n    /**\n     * Callback function to be called if access control returns `can: false`\n     */\n    onUnauthorized?: (props: OnUnauthorizedProps) => void;\n    children: React.ReactNode;\n};\n\ntype CanAccessWithoutParamsProps = {\n    [key in Exclude<\n        keyof CanAccessBaseProps,\n        \"fallback\" | \"children\"\n    >]?: undefined;\n} & {\n    [key in \"fallback\" | \"children\"]?: CanAccessBaseProps[key];\n};\n\nexport type CanAccessProps = CanAccessBaseProps | CanAccessWithoutParamsProps;\n\nexport const CanAccess: React.FC<CanAccessProps> = ({\n    resource: resourceFromProp,\n    action: actionFromProp,\n    params: paramsFromProp,\n    fallback,\n    onUnauthorized,\n    children,\n    ...rest\n}) => {\n    const {\n        resource,\n        id: idFromRoute,\n        action: actionFromRoute,\n    } = useResource(resourceFromProp);\n    const { identifier } = useResource();\n\n    const getDefaultId = () => {\n        const idFromPropsOrRoute = paramsFromProp?.id ?? idFromRoute;\n\n        if (resourceFromProp && resourceFromProp !== identifier) {\n            return paramsFromProp?.id;\n        }\n\n        return idFromPropsOrRoute;\n    };\n    const defaultId = getDefaultId();\n\n    const resourceName = resourceFromProp ?? resource?.name;\n    const action = actionFromProp ?? actionFromRoute ?? \"\";\n    const params = paramsFromProp ?? {\n        id: defaultId,\n        resource: resource,\n    };\n\n    const { data } = useCan({\n        resource: resourceName,\n        action,\n        params,\n    });\n\n    useEffect(() => {\n        if (onUnauthorized && data?.can === false) {\n            onUnauthorized({\n                resource: resourceName,\n                action,\n                reason: data?.reason,\n                params,\n            });\n        }\n    }, [data?.can]);\n\n    if (data?.can) {\n        if (React.isValidElement(children)) {\n            const Children = React.cloneElement(children, rest);\n            return Children;\n        }\n\n        return <>{children}</>;\n    }\n\n    if (data?.can === false) {\n        return <>{fallback ?? null}</>;\n    }\n\n    return null;\n};\n","import React, { useEffect } from \"react\";\nimport { CSSRules } from \"./styles\";\n\nexport const GitHubBanner = () => {\n    useEffect(() => {\n        const styleTag = document.createElement(\"style\");\n        document.head.appendChild(styleTag);\n        CSSRules.forEach((rule) =>\n            styleTag.sheet?.insertRule(rule, styleTag.sheet.cssRules.length),\n        );\n    }, []);\n\n\n    const texts = [\"Be a part of our journey. Star Refine on GitHub!\", \"Join our community. Star Refine on GitHub!\", \"Let's elevate Refine together. Star us on GitHub!\", \"Enhance Refine's reach. Give us a star on GitHub!\"]\n\n    return (\n        <div\n            className=\"banner\"\n            style={{\n                flexDirection: \"row\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                position: \"relative\",\n                padding: \"8px 16px\",\n                backgroundColor: \"#0d0d0d\",\n                borderBottom: \"1px solid rgba(255, 255, 255, 0.15)\",\n            }}\n        >\n            {/* sider offset for center alignment */}\n            <div\n                style={{\n                    width: \"200px\",\n                }}\n            />\n            <a\n                className=\"gh-link\"\n                href=\"https://s.refine.dev/github-support\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n            >\n                <div\n                    className=\"content\"\n                    style={{\n                        position: \"relative\",\n                        zIndex: 2,\n                        color: \"#fff\",\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                        gap: \"8px\",\n                    }}\n                >\n                    <span\n                        style={{\n                            display: \"flex\",\n                            flexDirection: \"row\",\n                            justifyContent: \"center\",\n                            alignItems: \"center\",\n                        }}\n                    >\n                        ⭐️\n                    </span>\n                    <span\n                        className=\"text\"\n                        style={{\n                            padding: \"4px 0\",\n                            fontSize: \"16px\",\n                            lineHeight: \"24px\",\n                            textShadow: \"0px 0px 4px rgba(255, 255, 255, 0.5)\",\n                        }}\n                    >\n                        {texts[Math.floor(Math.random() * texts.length)]}\n                    </span>\n                    <span\n                        style={{\n                            display: \"flex\",\n                            flexDirection: \"row\",\n                            justifyContent: \"center\",\n                            alignItems: \"center\",\n                        }}\n                    >\n                        ⭐️\n                    </span>\n                </div>\n            </a>\n        </div>\n    );\n};\n","export const CSSRules = [\n    `\n    .banner {\n        display: flex;\n        @media (max-width: 1000px) {\n            display: none;\n        }\n    }`,\n    `\n    .banner::before,\n    .banner::after {\n        content: '';\n        position: absolute;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n    }\n    `,\n    `\n    .banner::before {\n        background-image: linear-gradient(\n            270deg,\n            rgba(255, 76, 77, 0.35) 0%,\n            rgba(255, 153, 51, 0.35) 12.5%,\n            rgba(255, 191, 0, 0.35) 25%,\n            rgba(38, 217, 127, 0.35) 37.5%,\n            rgba(71, 235, 235, 0.35) 50%,\n            rgba(0, 128, 255, 0.35) 62.5%,\n            rgba(51, 51, 255, 0.35) 75%,\n            rgba(128, 0, 255, 0.35) 87.5%,\n            rgba(237, 94, 201, 0.35) 100%\n        );\n        background-position: 0 0;\n        background-size: 200% 100%;\n        background-repeat: repeat-x;\n        animation: bgpos 4s linear infinite;\n      }\n    `,\n    `\n    .banner::after {\n        background: linear-gradient(\n          180deg,\n          rgba(13, 13, 13, 0.85) 0%,\n          rgba(13, 13, 13, 0) 100%\n        );\n    }\n    `,\n    `\n    @keyframes bgpos {\n        0% {\n            background-position: 0 0;\n        }\n\n        100% {\n            background-position: -200% 0;\n        }\n    }\n    `,\n    `\n    .gh-link, .gh-link:hover, .gh-link:active, .gh-link:visited, .gh-link:focus {\n        text-decoration: none;\n        z-index: 9;\n    }\n    `,\n];\n","import React from \"react\";\nimport { AutoSaveIndicatorProps } from \"../../interfaces\";\nimport { useTranslate } from \"@hooks/translate\";\n\nexport const AutoSaveIndicator: React.FC<AutoSaveIndicatorProps> = ({\n    status,\n    elements: {\n        success = <Message key=\"autoSave.success\" defaultMessage=\"saved\" />,\n        error = (\n            <Message key=\"autoSave.error\" defaultMessage=\"auto save failure\" />\n        ),\n        loading = <Message key=\"autoSave.loading\" defaultMessage=\"saving...\" />,\n        idle = (\n            <Message key=\"autoSave.idle\" defaultMessage=\"waiting for changes\" />\n        ),\n    } = {},\n}) => {\n    switch (status) {\n        case \"success\":\n            return <>{success}</>;\n        case \"error\":\n            return <>{error}</>;\n        case \"loading\":\n            return <>{loading}</>;\n        default:\n            return <>{idle}</>;\n    }\n};\n\nconst Message = ({\n    key,\n    defaultMessage,\n}: {\n    key: string;\n    defaultMessage: string;\n}) => {\n    const translate = useTranslate();\n\n    return <span>{translate(key, defaultMessage)}</span>;\n};\n","export type { RefineBreadcrumbProps } from \"./types\";\n\nexport type {\n    RefineButtonCommonProps,\n    RefineButtonDataProps,\n    RefineButtonLinkingProps,\n    RefineButtonResourceProps,\n    RefineButtonSingleProps,\n    RefineCloneButtonProps,\n    RefineCreateButtonProps,\n    RefineDeleteButtonProps,\n    RefineEditButtonProps,\n    RefineExportButtonProps,\n    RefineImportButtonProps,\n    RefineListButtonProps,\n    RefineRefreshButtonProps,\n    RefineSaveButtonProps,\n    RefineShowButtonProps,\n} from \"./types\";\n\nexport type {\n    RefineCrudCreateProps,\n    RefineCrudEditProps,\n    RefineCrudListProps,\n    RefineCrudShowProps,\n    ActionButtonRenderer,\n} from \"./types\";\n\nexport type { RefineErrorPageProps, RefineReadyPageProps } from \"./types\";\n\nexport type {\n    RefineFieldBooleanProps,\n    RefineFieldCommonProps,\n    RefineFieldDateProps,\n    RefineFieldEmailProps,\n    RefineFieldFileProps,\n    RefineFieldImageProps,\n    RefineFieldUrlProps,\n    RefineFieldMarkdownProps,\n    RefineFieldNumberProps,\n    RefineFieldTagProps,\n    RefineFieldTextProps,\n    RefineFieldTooltipProps,\n} from \"./types\";\n\nexport type {\n    RefineLayoutFooterProps,\n    RefineLayoutHeaderProps,\n    RefineLayoutLayoutProps,\n    RefineLayoutSiderProps,\n    RefineLayoutTitleProps,\n    RefineThemedLayoutSiderProps,\n    RefineThemedLayoutHeaderProps,\n    RefineThemedLayoutProps,\n    RefineLayoutThemedTitleProps,\n    RefineThemedLayoutV2Props,\n    RefineThemedLayoutV2SiderProps,\n    RefineThemedLayoutV2HeaderProps,\n} from \"./types\";\n\nexport { RefineButtonTestIds } from \"./ids\";\nexport * from \"./classNames\";\n","export const RefineButtonTestIds = {\n    CloneButton: \"refine-clone-button\",\n    DeleteButton: \"refine-delete-button\",\n    EditButton: \"refine-edit-button\",\n    SaveButton: \"refine-save-button\",\n    CreateButton: \"refine-create-button\",\n    ImportButton: \"refine-import-button\",\n    ExportButton: \"refine-export-button\",\n    ListButton: \"refine-list-button\",\n    RefreshButton: \"refine-refresh-button\",\n    ShowButton: \"refine-show-button\",\n};\n","export const RefinePageHeaderClassNames = {\n    Title: \"refine-pageHeader-title\",\n    SubTitle: \"refine-pageHeader-subTitle\",\n};\n\nexport const RefineButtonClassNames = {\n    CloneButton: \"refine-clone-button\",\n    DeleteButton: \"refine-delete-button\",\n    EditButton: \"refine-edit-button\",\n    SaveButton: \"refine-save-button\",\n    CreateButton: \"refine-create-button\",\n    ImportButton: \"refine-import-button\",\n    ExportButton: \"refine-export-button\",\n    ListButton: \"refine-list-button\",\n    RefreshButton: \"refine-refresh-button\",\n    ShowButton: \"refine-show-button\",\n};\n","import React from \"react\";\nimport { FormInstance, FormProps, Form, ButtonProps } from \"antd\";\nimport { useForm as useFormSF } from \"sunflower-antd\";\nimport {\n    AutoSaveProps,\n    flattenObjectKeys,\n    propertyPathToArray,\n} from \"@refinedev/core\";\n\nimport {\n    HttpError,\n    BaseRecord,\n    useForm as useFormCore,\n    UseFormReturnType as UseFormReturnTypeCore,\n    useWarnAboutChange,\n    UseFormProps as UseFormPropsCore,\n    CreateResponse,\n    UpdateResponse,\n    pickNotDeprecated,\n    useTranslate,\n    useRefineContext,\n} from \"@refinedev/core\";\n\nexport type UseFormProps<\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n    TData extends BaseRecord = TQueryFnData,\n    TResponse extends BaseRecord = TData,\n    TResponseError extends HttpError = TError,\n> = UseFormPropsCore<\n    TQueryFnData,\n    TError,\n    TVariables,\n    TData,\n    TResponse,\n    TResponseError\n> & {\n    submitOnEnter?: boolean;\n    /**\n     * Shows notification when unsaved changes exist\n     */\n    warnWhenUnsavedChanges?: boolean;\n    /**\n     * Disables server-side validation\n     * @default false\n     * @see {@link https://refine.dev/docs/advanced-tutorials/forms/server-side-form-validation/}\n     */\n    disableServerSideValidation?: boolean;\n} & AutoSaveProps<TVariables>;\n\nexport type UseFormReturnType<\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n    TData extends BaseRecord = TQueryFnData,\n    TResponse extends BaseRecord = TData,\n    TResponseError extends HttpError = TError,\n> = UseFormReturnTypeCore<\n    TQueryFnData,\n    TError,\n    TVariables,\n    TData,\n    TResponse,\n    TResponseError\n> & {\n    form: FormInstance<TVariables>;\n    formProps: FormProps<TVariables>;\n    saveButtonProps: ButtonProps & {\n        onClick: () => void;\n    };\n    onFinish: (\n        values?: TVariables,\n    ) => Promise<CreateResponse<TResponse> | UpdateResponse<TResponse> | void>;\n};\n\n/**\n * `useForm` is used to manage forms. It uses Ant Design {@link https://ant.design/components/form/ Form} data scope management under the hood and returns the required props for managing the form actions.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/useForm} for more details.\n *\n * @typeParam TData - Result data of the query extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences/#httperror `HttpError`}\n * @typeParam TVariables - Values for params. default `{}`\n * @typeParam TData - Result data returned by the `select` function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}. Defaults to `TQueryFnData`\n * @typeParam TResponse - Result data returned by the mutation function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}. Defaults to `TData`\n * @typeParam TResponseError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}. Defaults to `TError`\n *\n *\n */\nexport const useForm = <\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n    TData extends BaseRecord = TQueryFnData,\n    TResponse extends BaseRecord = TData,\n    TResponseError extends HttpError = TError,\n>({\n    action,\n    resource,\n    onMutationSuccess: onMutationSuccessProp,\n    onMutationError: onMutationErrorProp,\n    autoSave,\n    submitOnEnter = false,\n    warnWhenUnsavedChanges: warnWhenUnsavedChangesProp,\n    redirect,\n    successNotification,\n    errorNotification,\n    meta,\n    metaData,\n    queryMeta,\n    mutationMeta,\n    liveMode,\n    liveParams,\n    mutationMode,\n    dataProviderName,\n    onLiveEvent,\n    invalidates,\n    undoableTimeout,\n    queryOptions,\n    createMutationOptions,\n    updateMutationOptions,\n    id: idFromProps,\n    overtimeOptions,\n    optimisticUpdateMap,\n    disableServerSideValidation: disableServerSideValidationProp = false,\n}: UseFormProps<\n    TQueryFnData,\n    TError,\n    TVariables,\n    TData,\n    TResponse,\n    TResponseError\n> = {}): UseFormReturnType<\n    TQueryFnData,\n    TError,\n    TVariables,\n    TData,\n    TResponse,\n    TResponseError\n> => {\n    const { options } = useRefineContext();\n    const disableServerSideValidation =\n        options?.disableServerSideValidation || disableServerSideValidationProp;\n\n    const translate = useTranslate();\n\n    const [formAnt] = Form.useForm();\n    const formSF = useFormSF<TResponse, TVariables>({\n        form: formAnt,\n    });\n    const { form } = formSF;\n\n    const useFormCoreResult = useFormCore<\n        TQueryFnData,\n        TError,\n        TVariables,\n        TData,\n        TResponse,\n        TResponseError\n    >({\n        onMutationSuccess: onMutationSuccessProp\n            ? onMutationSuccessProp\n            : undefined,\n        onMutationError: async (error, _variables, _context) => {\n            if (disableServerSideValidation) {\n                onMutationErrorProp?.(error, _variables, _context);\n                return;\n            }\n\n            // antd form expects error object to be in a specific format.\n            let parsedErrors: {\n                name: string | number | (string | number)[];\n                errors?: string[] | undefined;\n            }[] = [];\n\n            // reset antd errors before setting new errors\n            const fieldsValue = form.getFieldsValue() as unknown as object;\n\n            const fields = Object.keys(flattenObjectKeys(fieldsValue));\n\n            parsedErrors = fields.map((field) => {\n                return {\n                    name: propertyPathToArray(field),\n                    errors: undefined,\n                };\n            });\n\n            form.setFields(parsedErrors);\n\n            const errors = error?.errors;\n            // parse errors to antd form errors\n            for (const key in errors) {\n                const fieldError = errors[key];\n\n                let newError: string[] = [];\n\n                if (Array.isArray(fieldError)) {\n                    newError = fieldError;\n                }\n\n                if (typeof fieldError === \"string\") {\n                    newError = [fieldError];\n                }\n\n                if (typeof fieldError === \"boolean\" && fieldError) {\n                    newError = [\"Field is not valid.\"];\n                }\n\n                if (typeof fieldError === \"object\" && \"key\" in fieldError) {\n                    const translatedMessage = translate(\n                        fieldError.key,\n                        fieldError.message,\n                    );\n\n                    newError = [translatedMessage];\n                }\n\n                parsedErrors.push({\n                    name: propertyPathToArray(key),\n                    errors: newError,\n                });\n            }\n\n            form.setFields([...parsedErrors]);\n\n            onMutationErrorProp?.(error, _variables, _context);\n        },\n        redirect,\n        action,\n        resource,\n        successNotification,\n        errorNotification,\n        meta: pickNotDeprecated(meta, metaData),\n        metaData: pickNotDeprecated(meta, metaData),\n        queryMeta,\n        mutationMeta,\n        liveMode,\n        liveParams,\n        mutationMode,\n        dataProviderName,\n        onLiveEvent,\n        invalidates,\n        undoableTimeout,\n        queryOptions,\n        createMutationOptions,\n        updateMutationOptions,\n        id: idFromProps,\n        overtimeOptions,\n        optimisticUpdateMap,\n        autoSave,\n    });\n\n    const { formLoading, onFinish, queryResult, id, onFinishAutoSave } =\n        useFormCoreResult;\n\n    const {\n        warnWhenUnsavedChanges: warnWhenUnsavedChangesRefine,\n        setWarnWhen,\n    } = useWarnAboutChange();\n    const warnWhenUnsavedChanges =\n        warnWhenUnsavedChangesProp ?? warnWhenUnsavedChangesRefine;\n\n    React.useEffect(() => {\n        form.resetFields();\n    }, [queryResult?.data?.data, id]);\n\n    const onKeyUp = (event: React.KeyboardEvent<HTMLFormElement>) => {\n        if (submitOnEnter && event.key === \"Enter\") {\n            form.submit();\n        }\n    };\n\n    const onValuesChange = (changeValues: object, allValues: any) => {\n        if (changeValues && warnWhenUnsavedChanges) {\n            setWarnWhen(true);\n        }\n\n        if (autoSave?.enabled) {\n            setWarnWhen(false);\n\n            const onFinishFromProps =\n                autoSave?.onFinish ?? ((values) => values);\n\n            return onFinishAutoSave(onFinishFromProps(allValues));\n        }\n\n        return changeValues;\n    };\n\n    const saveButtonProps = {\n        disabled: formLoading,\n        onClick: () => {\n            form.submit();\n        },\n    };\n\n    return {\n        form: formSF.form,\n        formProps: {\n            ...formSF.formProps,\n            onFinish: (values: TVariables) =>\n                onFinish(values).catch((error) => error),\n            onKeyUp,\n            onValuesChange,\n            initialValues: queryResult?.data?.data,\n        },\n        saveButtonProps,\n        ...useFormCoreResult,\n        onFinish: async (values?: TVariables) => {\n            return await onFinish(values ?? formSF.form.getFieldsValue(true));\n        },\n    };\n};\n","import React, { useCallback } from \"react\";\nimport { FormInstance, FormProps, ModalProps } from \"antd\";\n\nimport {\n    useTranslate,\n    useWarnAboutChange,\n    HttpError,\n    UseFormProps as UseFormPropsCore,\n    BaseRecord,\n    LiveModeProps,\n    BaseKey,\n    useUserFriendlyName,\n    useResource,\n    FormWithSyncWithLocationParams,\n    useParsed,\n    useGo,\n    useInvalidate,\n} from \"@refinedev/core\";\nimport { useForm, UseFormProps, UseFormReturnType } from \"../useForm\";\nimport { useModal } from \"@hooks/modal\";\n\nexport type useModalFormFromSFReturnType<TResponse, TVariables> = {\n    open: boolean;\n    form: FormInstance<TVariables>;\n    show: (id?: BaseKey) => void;\n    close: () => void;\n    modalProps: ModalProps;\n    formProps: FormProps<TVariables>;\n    formLoading: boolean;\n    defaultFormValuesLoading: boolean;\n    formValues: {};\n    initialValues: {};\n    formResult: undefined;\n    submit: (values?: TVariables) => Promise<TResponse>;\n    /** @deprecated Please use `open` instead. */\n    visible: boolean;\n};\n\ntype useModalFormConfig = {\n    action: \"show\" | \"edit\" | \"create\" | \"clone\";\n};\n\nexport type UseModalFormReturnType<\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n    TData extends BaseRecord = TQueryFnData,\n    TResponse extends BaseRecord = TData,\n    TResponseError extends HttpError = TError,\n> = Omit<\n    UseFormReturnType<\n        TQueryFnData,\n        TError,\n        TVariables,\n        TData,\n        TResponse,\n        TResponseError\n    >,\n    \"saveButtonProps\" | \"deleteButtonProps\"\n> &\n    useModalFormFromSFReturnType<TResponse, TVariables>;\n\nexport type UseModalFormProps<\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n    TData extends BaseRecord = TQueryFnData,\n    TResponse extends BaseRecord = TData,\n    TResponseError extends HttpError = TError,\n> = UseFormPropsCore<\n    TQueryFnData,\n    TError,\n    TVariables,\n    TData,\n    TResponse,\n    TResponseError\n> &\n    UseFormProps<\n        TQueryFnData,\n        TError,\n        TVariables,\n        TData,\n        TResponse,\n        TResponseError\n    > &\n    useModalFormConfig &\n    LiveModeProps &\n    FormWithSyncWithLocationParams & {\n        defaultVisible?: boolean;\n        autoSubmitClose?: boolean;\n        autoResetForm?: boolean;\n    };\n/**\n * `useModalForm` hook allows you to manage a form within a modal. It returns Ant Design {@link https://ant.design/components/form/ Form} and {@link https://ant.design/components/modal/ Modal} components props.\n *\n * @see {@link https://refine.dev/docs/api-reference/antd/hooks/form/useModalForm} for more details.\n *\n * @typeParam TData - Result data of the query extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences/#httperror `HttpError`}\n * @typeParam TVariables - Values for params. default `{}`\n *\n *\n */\nexport const useModalForm = <\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n    TData extends BaseRecord = TQueryFnData,\n    TResponse extends BaseRecord = TData,\n    TResponseError extends HttpError = TError,\n>({\n    syncWithLocation,\n    defaultVisible = false,\n    autoSubmitClose = true,\n    autoResetForm = true,\n    autoSave,\n    invalidates,\n    ...rest\n}: UseModalFormProps<\n    TQueryFnData,\n    TError,\n    TVariables,\n    TData,\n    TResponse,\n    TResponseError\n>): UseModalFormReturnType<\n    TQueryFnData,\n    TError,\n    TVariables,\n    TData,\n    TResponse,\n    TResponseError\n> => {\n    const [initiallySynced, setInitiallySynced] = React.useState(false);\n    const invalidate = useInvalidate();\n\n    const {\n        resource,\n        action: actionFromParams,\n        identifier,\n    } = useResource(rest.resource);\n\n    const parsed = useParsed();\n    const go = useGo();\n    const getUserFriendlyName = useUserFriendlyName();\n\n    const action = rest.action ?? actionFromParams ?? \"\";\n\n    const syncingId = !(\n        typeof syncWithLocation === \"object\" &&\n        syncWithLocation?.syncId === false\n    );\n\n    const syncWithLocationKey =\n        typeof syncWithLocation === \"object\" && \"key\" in syncWithLocation\n            ? syncWithLocation.key\n            : resource && action && syncWithLocation\n            ? `modal-${identifier}-${action}`\n            : undefined;\n\n    const useFormProps = useForm<\n        TQueryFnData,\n        TError,\n        TVariables,\n        TData,\n        TResponse,\n        TResponseError\n    >({\n        meta: {\n            ...(syncWithLocationKey\n                ? { [syncWithLocationKey]: undefined }\n                : {}),\n            ...rest.meta,\n        },\n        autoSave,\n        invalidates,\n        ...rest,\n    });\n\n    const { form, formProps, id, setId, formLoading, onFinish, autoSaveProps } =\n        useFormProps;\n\n    const translate = useTranslate();\n\n    const { warnWhen, setWarnWhen } = useWarnAboutChange();\n\n    const { show, close, modalProps } = useModal({\n        modalProps: {\n            open: defaultVisible,\n        },\n    });\n\n    const visible = modalProps.open || false;\n    const sunflowerUseModal: useModalFormFromSFReturnType<\n        TResponse,\n        TVariables\n    > = {\n        modalProps,\n        form,\n        formLoading,\n        formProps,\n        formResult: undefined,\n        formValues: form.getFieldsValue,\n        defaultFormValuesLoading: false,\n        initialValues: {},\n        submit: onFinish as any,\n        close,\n        open: modalProps.open || false,\n        show,\n        visible,\n    };\n\n    React.useEffect(() => {\n        if (initiallySynced === false && syncWithLocationKey) {\n            const openStatus = parsed?.params?.[syncWithLocationKey]?.open;\n\n            if (typeof openStatus === \"boolean\") {\n                if (openStatus) {\n                    show();\n                }\n            } else if (typeof openStatus === \"string\") {\n                if (openStatus === \"true\") {\n                    show();\n                }\n            }\n\n            if (syncingId) {\n                const idFromParams = parsed?.params?.[syncWithLocationKey]?.id;\n                if (idFromParams) {\n                    setId?.(idFromParams);\n                }\n            }\n\n            setInitiallySynced(true);\n        }\n    }, [syncWithLocationKey, parsed, syncingId, setId]);\n\n    React.useEffect(() => {\n        if (initiallySynced === true) {\n            if (visible && syncWithLocationKey) {\n                go({\n                    query: {\n                        [syncWithLocationKey]: {\n                            ...parsed?.params?.[syncWithLocationKey],\n                            open: true,\n                            ...(syncingId && id && { id }),\n                        },\n                    },\n                    options: { keepQuery: true },\n                    type: \"replace\",\n                });\n            } else if (syncWithLocationKey && !visible) {\n                go({\n                    query: {\n                        [syncWithLocationKey]: undefined,\n                    },\n                    options: { keepQuery: true },\n                    type: \"replace\",\n                });\n            }\n        }\n    }, [id, visible, show, syncWithLocationKey, syncingId]);\n\n    const saveButtonPropsSF = {\n        disabled: formLoading,\n        loading: formLoading,\n        onClick: () => {\n            form.submit();\n        },\n    };\n\n    const handleClose = useCallback(() => {\n        if (autoSaveProps.status === \"success\" && autoSave?.invalidateOnClose) {\n            invalidate({\n                id,\n                invalidates: invalidates || [\"list\", \"many\", \"detail\"],\n                dataProviderName: rest.dataProviderName,\n                resource: identifier,\n            });\n        }\n\n        if (warnWhen) {\n            const warnWhenConfirm = window.confirm(\n                translate(\n                    \"warnWhenUnsavedChanges\",\n                    \"Are you sure you want to leave? You have unsaved changes.\",\n                ),\n            );\n\n            if (warnWhenConfirm) {\n                setWarnWhen(false);\n            } else {\n                return;\n            }\n        }\n\n        setId?.(undefined);\n        sunflowerUseModal.close();\n    }, [warnWhen, autoSaveProps.status]);\n\n    const handleShow = useCallback(\n        (showId?: BaseKey) => {\n            if (typeof showId !== \"undefined\") {\n                setId?.(showId);\n            }\n            const needsIdToOpen = action === \"edit\" || action === \"clone\";\n            const hasId =\n                typeof showId !== \"undefined\" || typeof id !== \"undefined\";\n            if (needsIdToOpen ? hasId : true) {\n                sunflowerUseModal.show();\n            }\n        },\n        [id],\n    );\n\n    const { visible: _visible, ...otherModalProps } = modalProps;\n    const newModalProps = { open: _visible, ...otherModalProps };\n\n    return {\n        ...useFormProps,\n        ...sunflowerUseModal,\n        show: handleShow,\n        close: handleClose,\n        open: visible,\n        formProps: {\n            ...formProps,\n            ...useFormProps.formProps,\n            onValuesChange: formProps?.onValuesChange,\n            onKeyUp: formProps?.onKeyUp,\n            onFinish: async (values) => {\n                await onFinish(values);\n\n                if (autoSubmitClose) {\n                    close();\n                }\n\n                if (autoResetForm) {\n                    form.resetFields();\n                }\n            },\n        },\n        modalProps: {\n            ...newModalProps,\n            width: \"1000px\",\n            okButtonProps: saveButtonPropsSF,\n            title: translate(\n                `${identifier}.titles.${rest.action}`,\n                `${getUserFriendlyName(\n                    `${rest.action} ${\n                        resource?.meta?.label ??\n                        resource?.options?.label ??\n                        resource?.label ??\n                        identifier\n                    }`,\n                    \"singular\",\n                )}`,\n            ),\n            okText: translate(\"buttons.save\", \"Save\"),\n            cancelText: translate(\"buttons.cancel\", \"Cancel\"),\n            onCancel: handleClose,\n            forceRender: true,\n        },\n        formLoading,\n    };\n};\n","import { ModalProps } from \"antd\";\nimport {\n    useModal as useCoreModal,\n    useModalReturnType as useCoreModelReturnType,\n} from \"@refinedev/core\";\n\nexport type useModalReturnType = {\n    modalProps: ModalProps;\n} & Omit<useCoreModelReturnType, \"visible\">;\n\nexport type useModalProps = {\n    /**\n     * Default props for Ant Design {@link https://ant.design/components/modal/ `<Modal>`} component.\n     */\n    modalProps?: ModalProps;\n};\n\n/**\n * By using `useModal` you get props for your records from API in accordance with Ant Design {@link https://ant.design/components/modal/ `<Modal>`} component.\n *\n * @see {@link https://refine.dev/docs/api-reference/antd/hooks/ui/useModal} for more details.\n */\nexport const useModal = ({\n    modalProps = {},\n}: useModalProps = {}): useModalReturnType => {\n    const { show, close, visible } = useCoreModal({\n        defaultVisible: modalProps.open,\n    });\n\n    return {\n        modalProps: {\n            ...modalProps,\n            onCancel: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n                modalProps.onCancel?.(e);\n                close();\n            },\n            open: visible,\n            visible,\n        },\n        show,\n        close,\n    };\n};\n","import React, { useCallback } from \"react\";\nimport { UseFormConfig } from \"sunflower-antd\";\nimport { FormInstance, FormProps, DrawerProps, ButtonProps } from \"antd\";\nimport {\n    useTranslate,\n    useWarnAboutChange,\n    UseFormProps as UseFormPropsCore,\n    HttpError,\n    LiveModeProps,\n    BaseRecord,\n    FormWithSyncWithLocationParams,\n    BaseKey,\n    useResource,\n    useParsed,\n    useGo,\n    useModal,\n    useInvalidate,\n} from \"@refinedev/core\";\n\nimport { useForm, UseFormProps, UseFormReturnType } from \"../useForm\";\nimport { DeleteButtonProps } from \"../../../components\";\n\nexport interface UseDrawerFormConfig extends UseFormConfig {\n    action: \"show\" | \"edit\" | \"create\" | \"clone\";\n}\n\nexport type UseDrawerFormProps<\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n    TData extends BaseRecord = TQueryFnData,\n    TResponse extends BaseRecord = TData,\n    TResponseError extends HttpError = TError,\n> = UseFormPropsCore<\n    TQueryFnData,\n    TError,\n    TVariables,\n    TData,\n    TResponse,\n    TResponseError\n> &\n    UseFormProps<\n        TQueryFnData,\n        TError,\n        TVariables,\n        TData,\n        TResponse,\n        TResponseError\n    > &\n    UseDrawerFormConfig &\n    LiveModeProps &\n    FormWithSyncWithLocationParams & {\n        defaultVisible?: boolean;\n        autoSubmitClose?: boolean;\n        autoResetForm?: boolean;\n    };\n\nexport type UseDrawerFormReturnType<\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n    TData extends BaseRecord = TQueryFnData,\n    TResponse extends BaseRecord = TData,\n    TResponseError extends HttpError = TError,\n> = UseFormReturnType<\n    TQueryFnData,\n    TError,\n    TVariables,\n    TData,\n    TResponse,\n    TResponseError\n> & {\n    formProps: FormProps<TVariables> & {\n        form: FormInstance<TVariables>;\n    };\n    show: (id?: BaseKey) => void;\n    close: () => void;\n    drawerProps: DrawerProps;\n    saveButtonProps: ButtonProps;\n    deleteButtonProps: DeleteButtonProps;\n    formLoading: boolean;\n};\n\n/**\n * `useDrawerForm` hook allows you to manage a form within a drawer. It returns Ant Design {@link https://ant.design/components/form/ Form} and {@link https://ant.design/components/drawer/ Drawer} components props.\n *\n * @see {@link https://refine.dev/docs/api-reference/antd/hooks/form/useDrawerForm} for more details.\n *\n * @typeParam TData - Result data of the query extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences/#httperror `HttpError`}\n * @typeParam TVariables - Values for params. default `{}`\n *\n *\n */\n\nexport const useDrawerForm = <\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n    TData extends BaseRecord = TQueryFnData,\n    TResponse extends BaseRecord = TData,\n    TResponseError extends HttpError = TError,\n>({\n    syncWithLocation,\n    defaultVisible = false,\n    autoSubmitClose = true,\n    autoResetForm = true,\n    autoSave,\n    invalidates,\n    ...rest\n}: UseDrawerFormProps<\n    TQueryFnData,\n    TError,\n    TVariables,\n    TData,\n    TResponse,\n    TResponseError\n>): UseDrawerFormReturnType<\n    TQueryFnData,\n    TError,\n    TVariables,\n    TData,\n    TResponse,\n    TResponseError\n> => {\n    const invalidate = useInvalidate();\n    const [initiallySynced, setInitiallySynced] = React.useState(false);\n\n    const { visible, show, close } = useModal({\n        defaultVisible,\n    });\n\n    const {\n        resource,\n        action: actionFromParams,\n        identifier,\n    } = useResource(rest.resource);\n\n    const parsed = useParsed();\n    const go = useGo();\n\n    const action = rest.action ?? actionFromParams ?? \"\";\n\n    const syncingId = !(\n        typeof syncWithLocation === \"object\" &&\n        syncWithLocation?.syncId === false\n    );\n\n    const syncWithLocationKey =\n        typeof syncWithLocation === \"object\" && \"key\" in syncWithLocation\n            ? syncWithLocation.key\n            : resource && action && syncWithLocation\n            ? `drawer-${resource?.identifier ?? resource?.name}-${action}`\n            : undefined;\n\n    const useFormProps = useForm<\n        TQueryFnData,\n        TError,\n        TVariables,\n        TData,\n        TResponse,\n        TResponseError\n    >({\n        meta: {\n            ...(syncWithLocationKey\n                ? { [syncWithLocationKey]: undefined }\n                : {}),\n            ...rest.meta,\n        },\n        autoSave,\n        invalidates,\n        ...rest,\n    });\n\n    const { form, formProps, formLoading, id, setId, onFinish, autoSaveProps } =\n        useFormProps;\n\n    React.useEffect(() => {\n        if (initiallySynced === false && syncWithLocationKey) {\n            const openStatus = parsed?.params?.[syncWithLocationKey]?.open;\n            if (typeof openStatus === \"boolean\") {\n                openStatus ? show() : close();\n            } else if (typeof openStatus === \"string\") {\n                if (openStatus === \"true\") {\n                    show();\n                }\n            }\n\n            if (syncingId) {\n                const idFromParams = parsed?.params?.[syncWithLocationKey]?.id;\n                if (idFromParams) {\n                    setId?.(idFromParams);\n                }\n            }\n\n            setInitiallySynced(true);\n        }\n    }, [syncWithLocationKey, parsed, syncingId, setId, initiallySynced]);\n\n    React.useEffect(() => {\n        if (initiallySynced === true) {\n            if (visible && syncWithLocationKey) {\n                go({\n                    query: {\n                        [syncWithLocationKey]: {\n                            ...parsed?.params?.[syncWithLocationKey],\n                            open: true,\n                            ...(syncingId && id && { id }),\n                        },\n                    },\n                    options: { keepQuery: true },\n                    type: \"replace\",\n                });\n            } else if (syncWithLocationKey && !visible) {\n                go({\n                    query: {\n                        [syncWithLocationKey]: undefined,\n                    },\n                    options: { keepQuery: true },\n                    type: \"replace\",\n                });\n            }\n        }\n    }, [\n        id,\n        visible,\n        show,\n        close,\n        syncWithLocationKey,\n        syncingId,\n        initiallySynced,\n    ]);\n\n    const translate = useTranslate();\n\n    const { warnWhen, setWarnWhen } = useWarnAboutChange();\n\n    const saveButtonProps = {\n        disabled: formLoading,\n        onClick: () => {\n            form.submit();\n        },\n        loading: formLoading,\n    };\n\n    const deleteButtonProps = {\n        recordItemId: id,\n        onSuccess: () => {\n            setId?.(undefined);\n            close();\n        },\n    };\n\n    const handleClose = useCallback(() => {\n        if (autoSaveProps.status === \"success\" && autoSave?.invalidateOnClose) {\n            invalidate({\n                id,\n                invalidates: invalidates || [\"list\", \"many\", \"detail\"],\n                dataProviderName: rest.dataProviderName,\n                resource: identifier,\n            });\n        }\n\n        if (warnWhen) {\n            const warnWhenConfirm = window.confirm(\n                translate(\n                    \"warnWhenUnsavedChanges\",\n                    \"Are you sure you want to leave? You have unsaved changes.\",\n                ),\n            );\n\n            if (warnWhenConfirm) {\n                setWarnWhen(false);\n            } else {\n                return;\n            }\n        }\n\n        close();\n        setId?.(undefined);\n    }, [warnWhen]);\n\n    const handleShow = useCallback(\n        (showId?: BaseKey) => {\n            if (typeof showId !== \"undefined\") {\n                setId?.(showId);\n            }\n            const needsIdToOpen = action === \"edit\" || action === \"clone\";\n            const hasId =\n                typeof showId !== \"undefined\" || typeof id !== \"undefined\";\n            if (needsIdToOpen ? hasId : true) {\n                show();\n            }\n        },\n        [id],\n    );\n\n    return {\n        ...useFormProps,\n        show: handleShow,\n        close: handleClose,\n        formProps: {\n            form,\n            ...useFormProps.formProps,\n            onValuesChange: formProps?.onValuesChange,\n            onKeyUp: formProps?.onKeyUp,\n            onFinish: async (values) => {\n                await onFinish(values);\n\n                if (autoSubmitClose) {\n                    close();\n                }\n\n                if (autoResetForm) {\n                    form.resetFields();\n                }\n            },\n        },\n        drawerProps: {\n            width: \"500px\",\n            onClose: handleClose,\n            open: visible,\n            forceRender: true,\n        },\n        saveButtonProps,\n        deleteButtonProps,\n        formLoading,\n    };\n};\n","import {\n    useStepsForm as useStepsFormSF,\n    UseStepsFormConfig,\n} from \"sunflower-antd\";\nimport { FormInstance, FormProps } from \"antd\";\n\nimport {\n    HttpError,\n    UseFormProps as UseFormPropsCore,\n    BaseRecord,\n} from \"@refinedev/core\";\n\nimport { useForm, UseFormProps, UseFormReturnType } from \"../useForm\";\n\nexport type UseStepsFormFromSFReturnType<TResponse, TVariables> = {\n    current: number;\n    gotoStep: (step: number) => Promise<TVariables> | true;\n    stepsProps: {\n        current: number;\n        onChange: (currentStep: number) => void;\n    };\n    formProps: FormProps<TVariables>;\n    formLoading: boolean;\n    defaultFormValuesLoading: boolean;\n    formValues: {};\n    initialValues: {};\n    formResult: undefined;\n    form: FormInstance<TVariables>;\n    submit: (values?: TVariables) => Promise<TResponse>;\n};\n\nexport type UseStepsFormReturnType<\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n    TData extends BaseRecord = TQueryFnData,\n    TResponse extends BaseRecord = TData,\n    TResponseError extends HttpError = TError,\n> = UseFormReturnType<\n    TQueryFnData,\n    TError,\n    TVariables,\n    TData,\n    TResponse,\n    TResponseError\n> &\n    UseStepsFormFromSFReturnType<TResponse, TVariables>;\n\nexport type UseStepsFormProps<\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n    TData extends BaseRecord = TQueryFnData,\n    TResponse extends BaseRecord = TData,\n    TResponseError extends HttpError = TError,\n> = UseFormPropsCore<\n    TQueryFnData,\n    TError,\n    TVariables,\n    TData,\n    TResponse,\n    TResponseError\n> &\n    UseFormProps<\n        TQueryFnData,\n        TError,\n        TVariables,\n        TData,\n        TResponse,\n        TResponseError\n    > &\n    UseStepsFormConfig;\n\n/**\n * `useStepsForm` hook allows you to split your form under an Ant Design based {@link https://ant.design/components/steps/ Steps} component and provides you with a few useful functionalities that will help you manage your form.\n *\n * @see {@link https://refine.dev/docs/api-reference/antd/hooks/form/useStepsForm} for more details.\n *\n * @typeParam TData - Result data of the query extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences/#httperror `HttpError`}\n * @typeParam TVariables - Values for params. default `{}`\n *\n *\n */\nexport const useStepsForm = <\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n    TData extends BaseRecord = TQueryFnData,\n    TResponse extends BaseRecord = TData,\n    TResponseError extends HttpError = TError,\n>(\n    props: UseStepsFormProps<\n        TQueryFnData,\n        TError,\n        TVariables,\n        TData,\n        TResponse,\n        TResponseError\n    > = {},\n): UseStepsFormReturnType<\n    TQueryFnData,\n    TError,\n    TVariables,\n    TData,\n    TResponse,\n    TResponseError\n> => {\n    const useFormProps = useForm<\n        TQueryFnData,\n        TError,\n        TVariables,\n        TData,\n        TResponse,\n        TResponseError\n    >({\n        ...props,\n    });\n    const { form, formProps } = useFormProps;\n\n    const stepsPropsSunflower = useStepsFormSF<TResponse, TVariables>({\n        isBackValidate: false,\n        form: form,\n        submit: (values: any) => {\n            formProps?.onFinish?.(values);\n        },\n        ...props,\n    });\n\n    return {\n        ...useFormProps,\n        ...stepsPropsSunflower,\n        formLoading: useFormProps.formLoading,\n        formProps: {\n            ...stepsPropsSunflower.formProps,\n            ...useFormProps.formProps,\n            onValuesChange: formProps?.onValuesChange,\n            onKeyUp: formProps?.onKeyUp,\n        },\n        saveButtonProps: {\n            ...useFormProps.saveButtonProps,\n            onClick: () => stepsPropsSunflower.submit(),\n        },\n    };\n};\n","import React, { Children, createElement, Fragment } from \"react\";\nimport { Grid, FormProps, Form, TablePaginationConfig, TableProps } from \"antd\";\nimport { useForm as useFormSF } from \"sunflower-antd\";\n\nimport { SorterResult } from \"antd/lib/table/interface\";\n\nimport {\n    useLiveMode,\n    BaseRecord,\n    CrudFilters,\n    HttpError,\n    useTable as useTableCore,\n    useTableProps as useTablePropsCore,\n    useTableReturnType as useTableCoreReturnType,\n    pickNotDeprecated,\n} from \"@refinedev/core\";\n\nimport {\n    mapAntdSorterToCrudSorting,\n    mapAntdFilterToCrudFilter,\n} from \"@definitions/table\";\nimport { PaginationLink } from \"./paginationLink\";\n\nexport type useTableProps<TQueryFnData, TError, TSearchVariables, TData> =\n    useTablePropsCore<TQueryFnData, TError, TData> & {\n        onSearch?: (\n            data: TSearchVariables,\n        ) => CrudFilters | Promise<CrudFilters>;\n    };\n\nexport type useTableReturnType<\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TSearchVariables = unknown,\n> = useTableCoreReturnType<TData, TError> & {\n    searchFormProps: FormProps<TSearchVariables>;\n    tableProps: TableProps<TData>;\n};\n\n/**\n * By using useTable, you are able to get properties that are compatible with\n * Ant Design {@link https://ant.design/components/table/ `<Table>`} component.\n * All features such as sorting, filtering and pagination comes as out of box.\n *\n * @see {@link https://refine.dev/docs/api-reference/antd/hooks/table/useTable/} for more details.\n *\n * @typeParam TQueryFnData - Result data returned by the query function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TSearchVariables - Values for search params\n * @typeParam TData - Result data returned by the `select` function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}. Defaults to `TQueryFnData`\n *\n */\n\nexport const useTable = <\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TSearchVariables = unknown,\n    TData extends BaseRecord = TQueryFnData,\n>({\n    onSearch,\n    initialCurrent,\n    initialPageSize,\n    hasPagination = true,\n    pagination,\n    initialSorter,\n    permanentSorter,\n    initialFilter,\n    permanentFilter,\n    defaultSetFilterBehavior,\n    filters: filtersFromProp,\n    sorters: sortersFromProp,\n    syncWithLocation,\n    resource,\n    successNotification,\n    errorNotification,\n    queryOptions,\n    liveMode: liveModeFromProp,\n    onLiveEvent,\n    liveParams,\n    meta,\n    metaData,\n    dataProviderName,\n}: useTableProps<\n    TQueryFnData,\n    TError,\n    TSearchVariables,\n    TData\n> = {}): useTableReturnType<TData, TError, TSearchVariables> => {\n    const {\n        tableQueryResult,\n        current,\n        setCurrent,\n        pageSize,\n        setPageSize,\n        filters,\n        setFilters,\n        sorters,\n        setSorters,\n        sorter,\n        setSorter,\n        createLinkForSyncWithLocation,\n        pageCount,\n        overtime,\n    } = useTableCore<TQueryFnData, TError, TData>({\n        permanentSorter,\n        permanentFilter,\n        initialCurrent,\n        initialPageSize,\n        pagination,\n        hasPagination,\n        filters: filtersFromProp,\n        sorters: sortersFromProp,\n        initialSorter,\n        initialFilter,\n        syncWithLocation,\n        resource,\n        defaultSetFilterBehavior,\n        successNotification,\n        errorNotification,\n        queryOptions,\n        liveMode: liveModeFromProp,\n        onLiveEvent,\n        liveParams,\n        meta: pickNotDeprecated(meta, metaData),\n        metaData: pickNotDeprecated(meta, metaData),\n        dataProviderName,\n    });\n    const breakpoint = Grid.useBreakpoint();\n    const [form] = Form.useForm<TSearchVariables>();\n    const formSF = useFormSF<any, TSearchVariables>({\n        form: form,\n    });\n    const liveMode = useLiveMode(liveModeFromProp);\n\n    const hasPaginationString = hasPagination === false ? \"off\" : \"server\";\n    const isPaginationEnabled =\n        (pagination?.mode ?? hasPaginationString) !== \"off\";\n\n    const preferredInitialFilters = pickNotDeprecated(\n        filtersFromProp?.initial,\n        initialFilter,\n    );\n\n    const { data, isFetched, isLoading } = tableQueryResult;\n\n    const onChange = (\n        paginationState: TablePaginationConfig,\n        tableFilters: Record<\n            string,\n            (string | number | boolean) | (string | number | boolean)[] | null\n        >,\n        sorter: SorterResult<any> | SorterResult<any>[],\n    ) => {\n        if (tableFilters && Object.keys(tableFilters).length > 0) {\n            // Map Antd:Filter -> refine:CrudFilter\n            const crudFilters = mapAntdFilterToCrudFilter(\n                tableFilters,\n                filters,\n                preferredInitialFilters,\n            );\n            setFilters(crudFilters);\n        }\n\n        if (sorter && Object.keys(sorter).length > 0) {\n            // Map Antd:Sorter -> refine:CrudSorting\n            const crudSorting = mapAntdSorterToCrudSorting(sorter);\n            setSorters(crudSorting);\n        }\n\n        if (isPaginationEnabled) {\n            setCurrent?.(paginationState.current || 1);\n            setPageSize?.(paginationState.pageSize || 10);\n        }\n    };\n\n    const onFinish = async (value: TSearchVariables) => {\n        if (onSearch) {\n            const searchFilters = await onSearch(value);\n            setFilters(searchFilters);\n\n            if (isPaginationEnabled) {\n                setCurrent?.(1);\n            }\n        }\n    };\n\n    const antdPagination = (): false | TablePaginationConfig => {\n        if (isPaginationEnabled) {\n            return {\n                itemRender: (page, type, element) => {\n                    const link = createLinkForSyncWithLocation({\n                        pagination: {\n                            pageSize,\n                            current: page,\n                        },\n                        sorters,\n                        filters,\n                    });\n\n                    if (type === \"page\") {\n                        return createElement(PaginationLink, {\n                            to: link,\n                            element: `${page}`,\n                        });\n                    }\n                    if (type === \"next\" || type === \"prev\") {\n                        return createElement(PaginationLink, {\n                            to: link,\n                            element: element,\n                        });\n                    }\n\n                    if (type === \"jump-next\" || type === \"jump-prev\") {\n                        const elementChildren = (element as React.ReactElement)\n                            ?.props?.children;\n\n                        return createElement(PaginationLink, {\n                            to: link,\n                            element:\n                                Children.count(elementChildren) > 1\n                                    ? createElement(\n                                          Fragment,\n                                          {},\n                                          elementChildren,\n                                      )\n                                    : elementChildren,\n                        });\n                    }\n\n                    return element;\n                },\n                pageSize,\n                current,\n                simple: !breakpoint.sm,\n                position: !breakpoint.sm ? [\"bottomCenter\"] : [\"bottomRight\"],\n                total: data?.total,\n            };\n        }\n\n        return false;\n    };\n\n    return {\n        searchFormProps: {\n            ...formSF.formProps,\n            onFinish,\n        },\n        tableProps: {\n            dataSource: data?.data,\n            loading: liveMode === \"auto\" ? isLoading : !isFetched,\n            onChange,\n            pagination: antdPagination(),\n            scroll: { x: true },\n        },\n        tableQueryResult,\n        sorters,\n        sorter,\n        filters,\n        setSorters,\n        setSorter,\n        setFilters,\n        current,\n        setCurrent,\n        pageSize,\n        setPageSize,\n        pageCount,\n        createLinkForSyncWithLocation,\n        overtime,\n    };\n};\n","import {\n    CrudFilters,\n    CrudOperators,\n    CrudSorting,\n    CrudFilter,\n    getDefaultFilter as getDefaultFilterCore,\n    getDefaultSortOrder as getDefaultSortOrderCore,\n    ConditionalFilter,\n    LogicalFilter,\n} from \"@refinedev/core\";\nimport { SortOrder, SorterResult } from \"antd/lib/table/interface\";\n\nexport const getDefaultSortOrder = (\n    columnName: string,\n    sorter?: CrudSorting,\n): SortOrder | undefined => {\n    const sort = getDefaultSortOrderCore(columnName, sorter);\n\n    if (sort) {\n        return `${sort}end`;\n    }\n\n    return undefined;\n};\n\n/**\n * @deprecated getDefaultFilter moved to `@refinedev/core`. Use from `@refinedev/core`\n */\nexport const getDefaultFilter = (\n    columnName: string,\n    filters?: CrudFilters,\n    operatorType: CrudOperators = \"eq\",\n): CrudFilter[\"value\"] | undefined => {\n    return getDefaultFilterCore(columnName, filters, operatorType);\n};\n\nexport const mapAntdSorterToCrudSorting = (\n    sorter: SorterResult<any> | SorterResult<any>[],\n): CrudSorting => {\n    const crudSorting: CrudSorting = [];\n    if (Array.isArray(sorter)) {\n        sorter\n            .sort((a, b) => {\n                return ((a.column?.sorter as { multiple?: number }).multiple ??\n                    0) <\n                    ((b.column?.sorter as { multiple?: number }).multiple ?? 0)\n                    ? -1\n                    : 0;\n            })\n            .map((item) => {\n                if (item.field && item.order) {\n                    const field = Array.isArray(item.field)\n                        ? item.field.join(\".\")\n                        : `${item.field}`;\n\n                    crudSorting.push({\n                        field: `${item.columnKey ?? field}`,\n                        order: item.order.replace(\"end\", \"\") as \"asc\" | \"desc\",\n                    });\n                }\n            });\n    } else {\n        if (sorter.field && sorter.order) {\n            const field = Array.isArray(sorter.field)\n                ? sorter.field.join(\".\")\n                : `${sorter.field}`;\n\n            crudSorting.push({\n                field: `${sorter.columnKey ?? field}`,\n                order: sorter.order.replace(\"end\", \"\") as \"asc\" | \"desc\",\n            });\n        }\n    }\n\n    return crudSorting;\n};\n\nexport const mapAntdFilterToCrudFilter = (\n    tableFilters: Record<\n        string,\n        (string | number | boolean) | (string | number | boolean)[] | null\n    >,\n    prevFilters: CrudFilters,\n    initialFilters?: CrudFilters,\n): CrudFilters => {\n    const crudFilters: CrudFilters = [];\n    const mapInitialFilter: Record<string, CrudFilter> = (\n        initialFilters ?? []\n    ).reduce((acc, item) => {\n        const field =\n            (item as ConditionalFilter).key || (item as LogicalFilter).field;\n        return { ...acc, [field]: item };\n    }, {});\n\n    Object.keys(tableFilters).map((field) => {\n        const value = tableFilters[field];\n        const operator =\n            prevFilters\n                .filter((i) => i.operator !== \"or\")\n                .find((p: any) => p.field === field)?.operator ||\n            mapInitialFilter[field]?.operator;\n\n        if (operator !== \"or\" && operator !== \"and\") {\n            crudFilters.push({\n                field,\n                operator: operator ?? (Array.isArray(value) ? \"in\" : \"eq\"),\n                value,\n            });\n        }\n    });\n\n    return crudFilters;\n};\n","import { useLink, useRouterContext, useRouterType } from \"@refinedev/core\";\nimport React, { ReactNode } from \"react\";\n\ninterface PaginationLinkProps {\n    to: string;\n    element: ReactNode;\n}\n\nexport const PaginationLink = ({ to, element }: PaginationLinkProps) => {\n    const { Link: LegacyLink } = useRouterContext();\n    const routerType = useRouterType();\n    const Link = useLink();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    return (\n        <ActiveLink\n            to={to}\n            replace={false}\n            onClick={(e: React.PointerEvent<HTMLButtonElement>) => {\n                e.preventDefault();\n            }}\n        >\n            {element}\n        </ActiveLink>\n    );\n};\n","import { useTable } from \"@hooks\";\nimport { BaseKey, BaseRecord, HttpError, UseFormProps } from \"@refinedev/core\";\nimport { ButtonProps } from \"antd\";\n\nimport { useTableProps, useTableReturnType } from \"../useTable\";\nimport { UseFormReturnType, useForm } from \"../../form/useForm\";\n\nexport type useEditableTableReturnType<\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n    TSearchVariables = unknown,\n    TData extends BaseRecord = TQueryFnData,\n> = useTableReturnType<TData, TError, TSearchVariables> &\n    UseFormReturnType<TQueryFnData, TError, TVariables> & {\n        saveButtonProps: ButtonProps & {\n            onClick: () => void;\n        };\n        cancelButtonProps: ButtonProps & {\n            onClick: () => void;\n        };\n        editButtonProps: (id: BaseKey) => ButtonProps & {\n            onClick: () => void;\n        };\n        isEditing: (id: BaseKey) => boolean;\n    };\n\ntype useEditableTableProps<\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n    TSearchVariables = unknown,\n    TData extends BaseRecord = TQueryFnData,\n> = Omit<\n    useTableProps<TQueryFnData, TError, TSearchVariables, TData>,\n    \"successNotification\" | \"errorNotification\"\n> &\n    UseFormProps<TQueryFnData, TError, TVariables> & {\n        /**\n         * When true, row will be closed after successful submit.\n         */\n        autoSubmitClose?: boolean;\n    };\n\n/**\n * `useEditeableTable` allows you to implement edit feature on the table with ease,\n * on top of all the features that {@link https://refine.dev/docs/api-reference/core/hooks/useTable/ `useTable`} provides.\n * `useEditableTable` return properties that can be used on Ant Design's {@link https://ant.design/components/table/ `<Table>`}\n * and {@link https://ant.design/components/form/ `<Form>`} components.\n *\n * @see {@link https://refine.dev/docs/api-reference/antd/hooks/table/useTable/} for more details.\n *\n * @typeParam TQueryFnData - Result data returned by the query function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TVariables - Values for params\n * @typeParam TSearchVariables - Values for search params\n * @typeParam TData - Result data returned by the `select` function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}. Defaults to `TQueryFnData`\n *\n */\nexport const useEditableTable = <\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n    TSearchVariables = unknown,\n    TData extends BaseRecord = TQueryFnData,\n>({\n    autoSubmitClose = true,\n    ...props\n}: useEditableTableProps<\n    TQueryFnData,\n    TError,\n    TVariables,\n    TSearchVariables,\n    TData\n> = {}): useEditableTableReturnType<\n    TQueryFnData,\n    TError,\n    TVariables,\n    TSearchVariables,\n    TData\n> => {\n    const table = useTable<TQueryFnData, TError, TSearchVariables, TData>({\n        ...props,\n        successNotification: undefined,\n        errorNotification: undefined,\n    });\n    const edit = useForm<TQueryFnData, TError, TVariables>({\n        ...props,\n        action: \"edit\",\n        redirect: false,\n    });\n\n    const { id: editId, setId, saveButtonProps } = edit;\n\n    const cancelButtonProps = {\n        onClick: () => {\n            setId(undefined);\n        },\n    };\n\n    const editButtonProps = (id: BaseKey) => {\n        return {\n            onClick: () => setId(id),\n        };\n    };\n\n    const isEditing = (id: BaseKey) => id === editId;\n\n    return {\n        ...table,\n        ...edit,\n        formProps: {\n            ...edit.formProps,\n            onFinish: async (values) => {\n                const result = await edit.onFinish(values);\n                if (autoSubmitClose) {\n                    setId(undefined);\n                }\n                return result;\n            },\n        },\n        saveButtonProps,\n        cancelButtonProps,\n        editButtonProps,\n        isEditing,\n    };\n};\n","import { SelectProps } from \"antd/lib/select\";\nimport { QueryObserverResult } from \"@tanstack/react-query\";\n\nimport {\n    useSelect as useSelectCore,\n    BaseRecord,\n    GetManyResponse,\n    GetListResponse,\n    HttpError,\n    UseSelectProps,\n    BaseOption,\n} from \"@refinedev/core\";\n\nexport type UseSelectReturnType<\n    TData extends BaseRecord = BaseRecord,\n    TOption extends BaseOption = BaseOption,\n> = {\n    selectProps: SelectProps<TOption>;\n    queryResult: QueryObserverResult<GetListResponse<TData>>;\n    defaultValueQueryResult: QueryObserverResult<GetManyResponse<TData>>;\n};\n\n/**\n * `useSelect` hook allows you to manage an Ant Design {@link https://ant.design/components/select/ Select} component when records in a resource needs to be used as select options.\n *\n * @see {@link https://refine.dev/docs/api-reference/antd/hooks/field/useSelect/} for more details.\n *\n * @typeParam TQueryFnData - Result data returned by the query function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TData - Result data returned by the `select` function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}. Defaults to `TQueryFnData`\n *\n */\n\nexport const useSelect = <\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TData extends BaseRecord = TQueryFnData,\n    TOption extends BaseOption = BaseOption,\n>(\n    props: UseSelectProps<TQueryFnData, TError, TData>,\n): UseSelectReturnType<TData, TOption> => {\n    const { queryResult, defaultValueQueryResult, onSearch, options } =\n        useSelectCore<TQueryFnData, TError, TData, TOption>(props);\n\n    return {\n        selectProps: {\n            options,\n            onSearch,\n            loading: defaultValueQueryResult.isFetching,\n            showSearch: true,\n            filterOption: false,\n        },\n        queryResult,\n        defaultValueQueryResult,\n    };\n};\n","import { QueryObserverResult } from \"@tanstack/react-query\";\nimport type { Checkbox } from \"antd\";\n\nimport {\n    BaseRecord,\n    GetListResponse,\n    HttpError,\n    UseSelectProps,\n    useSelect,\n    BaseKey,\n    pickNotDeprecated,\n    BaseOption,\n} from \"@refinedev/core\";\n\nexport type UseCheckboxGroupReturnType<\n    TData extends BaseRecord = BaseRecord,\n    TOption extends BaseOption = BaseOption,\n> = {\n    checkboxGroupProps: Omit<\n        React.ComponentProps<typeof Checkbox.Group>,\n        \"options\"\n    > & {\n        options: TOption[];\n    };\n    queryResult: QueryObserverResult<GetListResponse<TData>>;\n};\n\ntype UseCheckboxGroupProps<TQueryFnData, TError, TData> = Omit<\n    UseSelectProps<TQueryFnData, TError, TData>,\n    \"defaultValue\"\n> & {\n    /**\n     * Sets the default value\n     */\n    defaultValue?: BaseKey[];\n};\n\n/**\n * `useCheckboxGroup` hook allows you to manage an Ant Design {@link https://ant.design/components/checkbox/#components-checkbox-demo-group Checkbox.Group} component when records in a resource needs to be used as checkbox options.\n *\n * @see {@link https://refine.dev/docs/api-reference/antd/hooks/field/useCheckboxGroup/} for more details\n *\n * @typeParam TQueryFnData - Result data returned by the query function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TData - Result data returned by the `select` function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}. Defaults to `TQueryFnData`\n *\n */\n\nexport const useCheckboxGroup = <\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TData extends BaseRecord = TQueryFnData,\n    TOption extends BaseOption = BaseOption,\n>({\n    resource,\n    sort,\n    sorters,\n    filters,\n    optionLabel,\n    optionValue,\n    queryOptions,\n    fetchSize,\n    pagination,\n    liveMode,\n    defaultValue,\n    onLiveEvent,\n    liveParams,\n    meta,\n    metaData,\n    dataProviderName,\n}: UseCheckboxGroupProps<\n    TQueryFnData,\n    TError,\n    TData\n>): UseCheckboxGroupReturnType<TData, TOption> => {\n    const { queryResult, options } = useSelect<\n        TQueryFnData,\n        TError,\n        TData,\n        TOption\n    >({\n        resource,\n        sort,\n        sorters,\n        filters,\n        optionLabel,\n        optionValue,\n        queryOptions,\n        fetchSize,\n        pagination,\n        liveMode,\n        defaultValue,\n        onLiveEvent,\n        liveParams,\n        meta: pickNotDeprecated(meta, metaData),\n        metaData: pickNotDeprecated(meta, metaData),\n        dataProviderName,\n    });\n    return {\n        checkboxGroupProps: {\n            options,\n            defaultValue,\n        },\n        queryResult,\n    };\n};\n","import { QueryObserverResult } from \"@tanstack/react-query\";\nimport type { Radio } from \"antd\";\n\nimport {\n    BaseKey,\n    BaseOption,\n    BaseRecord,\n    GetListResponse,\n    HttpError,\n    pickNotDeprecated,\n    useSelect,\n    UseSelectProps,\n} from \"@refinedev/core\";\n\nexport type UseRadioGroupReturnType<\n    TData extends BaseRecord = BaseRecord,\n    TOption extends BaseOption = BaseOption,\n> = {\n    radioGroupProps: Omit<\n        React.ComponentProps<typeof Radio.Group>,\n        \"options\"\n    > & {\n        options: TOption[];\n    };\n    queryResult: QueryObserverResult<GetListResponse<TData>>;\n};\n\ntype UseRadioGroupProps<TQueryFnData, TError, TData> = Omit<\n    UseSelectProps<TQueryFnData, TError, TData>,\n    \"defaultValue\"\n> & {\n    /**\n     * Sets the default value\n     */\n    defaultValue?: BaseKey;\n};\n\n/**\n * `useRadioGroup` hook allows you to manage an Ant Design {@link https://ant.design/components/radio/#components-radio-demo-radiogroup-with-name Radio.Group} component when records in a resource needs to be used as radio options.\n *\n * @see {@link https://refine.dev/docs/api-reference/antd/hooks/field/useRadioGroup/} for more details.\n *\n * @typeParam TQueryFnData - Result data returned by the query function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TData - Result data returned by the `select` function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}. Defaults to `TQueryFnData`\n *\n */\n\nexport const useRadioGroup = <\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TData extends BaseRecord = TQueryFnData,\n    TOption extends BaseOption = BaseOption,\n>({\n    resource,\n    sort,\n    sorters,\n    filters,\n    optionLabel,\n    optionValue,\n    queryOptions,\n    fetchSize,\n    pagination,\n    liveMode,\n    defaultValue,\n    onLiveEvent,\n    liveParams,\n    meta,\n    metaData,\n    dataProviderName,\n}: UseRadioGroupProps<TQueryFnData, TError, TData>): UseRadioGroupReturnType<\n    TData,\n    TOption\n> => {\n    const { queryResult, options } = useSelect<\n        TQueryFnData,\n        TError,\n        TData,\n        TOption\n    >({\n        resource,\n        sort,\n        sorters,\n        filters,\n        optionLabel,\n        optionValue,\n        queryOptions,\n        fetchSize,\n        pagination,\n        liveMode,\n        defaultValue,\n        onLiveEvent,\n        liveParams,\n        meta: pickNotDeprecated(meta, metaData),\n        metaData: pickNotDeprecated(meta, metaData),\n        dataProviderName,\n    });\n\n    return {\n        radioGroupProps: {\n            options,\n            defaultValue,\n        },\n        queryResult,\n    };\n};\n","import React from \"react\";\nimport { ButtonProps, notification, UploadProps, Progress } from \"antd\";\nimport {\n    useTranslate,\n    useResource,\n    BaseRecord,\n    HttpError,\n    useImport as useImportCore,\n    UseImportReturnType,\n    ImportOptions,\n    pickNotDeprecated,\n} from \"@refinedev/core\";\n\n/**\n * `useImport` hook allows you to handle your csv import logic easily.\n *\n * @see {@link https://refine.dev/docs/api-reference/antd/hooks/import/useImport} for more details.\n *\n * @typeParam TItem - Interface of parsed csv data\n * @typeParam TData - Result data of the query extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences/#httperror `HttpError`}\n * @typeParam TVariables - Values for mutation function\n *\n */\nexport const useImport = <\n    TItem = any,\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = any,\n>({\n    resource: resourceFromProp,\n    resourceName,\n    mapData = (item) => item as unknown as TVariables,\n    paparseOptions,\n    batchSize = Number.MAX_SAFE_INTEGER,\n    onFinish,\n    meta,\n    metaData,\n    dataProviderName,\n    onProgress: onProgressFromProp,\n}: ImportOptions<TItem, TVariables, TData> = {}): Omit<\n    UseImportReturnType<TData, TVariables, TError>,\n    \"handleChange\" | \"inputProps\"\n> & {\n    uploadProps: UploadProps;\n    buttonProps: ButtonProps;\n} => {\n    const t = useTranslate();\n\n    const { resource } = useResource(resourceFromProp ?? resourceName);\n\n    const { mutationResult, isLoading, handleChange } = useImportCore<\n        TItem,\n        TData,\n        TError,\n        TVariables\n    >({\n        resource: resource?.identifier ?? resource?.name,\n        mapData,\n        paparseOptions,\n        batchSize,\n        meta: pickNotDeprecated(meta, metaData),\n        metaData: pickNotDeprecated(meta, metaData),\n        dataProviderName,\n        onFinish,\n        onProgress:\n            onProgressFromProp ??\n            (({ totalAmount, processedAmount }) => {\n                if (totalAmount > 0 && processedAmount > 0) {\n                    const description = (\n                        <div\n                            style={{\n                                display: \"flex\",\n                                alignItems: \"center\",\n                                justifyContent: \"space-between\",\n                                marginTop: \"-7px\",\n                            }}\n                        >\n                            <Progress\n                                type=\"circle\"\n                                percent={Math.floor(\n                                    (processedAmount / totalAmount) * 100,\n                                )}\n                                width={50}\n                                strokeColor=\"#1890ff\"\n                                status=\"normal\"\n                            />\n                            <span style={{ marginLeft: 8, width: \"100%\" }}>\n                                {t(\n                                    \"notifications.importProgress\",\n                                    {\n                                        processed: processedAmount,\n                                        total: totalAmount,\n                                    },\n                                    `Importing: ${processedAmount}/${totalAmount}`,\n                                )}\n                            </span>\n                        </div>\n                    );\n\n                    notification.open({\n                        description,\n                        message: null,\n                        key: `${resource}-import`,\n                        duration: 0,\n                    });\n\n                    if (processedAmount >= totalAmount) {\n                    }\n\n                    if (processedAmount === totalAmount) {\n                        setTimeout(() => {\n                            notification.destroy(`${resource}-import`);\n                        }, 4500);\n                    }\n                }\n            }),\n    });\n\n    return {\n        uploadProps: {\n            onChange: handleChange,\n            beforeUpload: () => false,\n            showUploadList: false,\n            accept: \".csv\",\n        },\n        buttonProps: {\n            type: \"default\",\n            loading: isLoading,\n        },\n        mutationResult,\n        isLoading,\n    };\n};\n","import { Children, createElement, Fragment } from \"react\";\nimport { ListProps, FormProps, Form, Grid } from \"antd\";\n\nimport {\n    BaseRecord,\n    CrudFilters,\n    HttpError,\n    useTable as useTableCore,\n    useTableProps as useTablePropsCore,\n    useTableReturnType,\n    pickNotDeprecated,\n} from \"@refinedev/core\";\nimport { useLiveMode } from \"@refinedev/core\";\nimport { PaginationLink } from \"@hooks/table/useTable/paginationLink\";\nimport { PaginationConfig } from \"antd/lib/pagination\";\n\nexport type useSimpleListProps<TQueryFnData, TError, TSearchVariables, TData> =\n    useTablePropsCore<TQueryFnData, TError, TData> & {\n        onSearch?: (\n            data: TSearchVariables,\n        ) => CrudFilters | Promise<CrudFilters>;\n    };\n\nexport type useSimpleListReturnType<\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TSearchVariables = unknown,\n    TData extends BaseRecord = TQueryFnData,\n> = Omit<useTableReturnType<TData>, \"tableQueryResult\"> & {\n    listProps: ListProps<TData>;\n    queryResult: useTableReturnType[\"tableQueryResult\"];\n    searchFormProps: FormProps<TSearchVariables>;\n};\n\n/**\n * By using `useSimpleList` you get props for your records from API in accordance with Ant Design {@link https://ant.design/components/list/ `<List>`} component.\n * All features such as pagination, sorting come out of the box.\n *\n * @see {@link https://refine.dev/docs/api-reference/antd/hooks/list/useSimpleList} for more details.\n *\n * @typeParam TQueryFnData - Result data returned by the query function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TSearchVariables - Antd form values\n * @typeParam TData - Result data returned by the `select` function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}. Defaults to `TQueryFnData`\n *\n */\n\nexport const useSimpleList = <\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TSearchVariables = unknown,\n    TData extends BaseRecord = TQueryFnData,\n>({\n    resource,\n    initialCurrent,\n    initialPageSize,\n    pagination,\n    hasPagination = true,\n    initialSorter,\n    permanentSorter,\n    initialFilter,\n    permanentFilter,\n    defaultSetFilterBehavior,\n    filters: filtersFromProp,\n    sorters: sortersFromProp,\n    onSearch,\n    queryOptions,\n    syncWithLocation,\n    successNotification,\n    errorNotification,\n    liveMode: liveModeFromProp,\n    onLiveEvent,\n    liveParams,\n    meta,\n    metaData,\n    dataProviderName,\n}: useSimpleListProps<\n    TQueryFnData,\n    TError,\n    TSearchVariables,\n    TData\n> = {}): useSimpleListReturnType<TData, TSearchVariables> => {\n    const {\n        sorters,\n        sorter,\n        filters,\n        current,\n        pageSize,\n        pageCount,\n        setFilters,\n        setCurrent,\n        setPageSize,\n        setSorter,\n        setSorters,\n        createLinkForSyncWithLocation,\n        tableQueryResult: queryResult,\n        overtime,\n    } = useTableCore({\n        resource,\n        initialSorter,\n        permanentSorter,\n        initialFilter,\n        permanentFilter,\n        filters: filtersFromProp,\n        sorters: sortersFromProp,\n        defaultSetFilterBehavior,\n        initialCurrent,\n        initialPageSize,\n        queryOptions,\n        successNotification,\n        errorNotification,\n        liveMode: liveModeFromProp,\n        onLiveEvent,\n        liveParams,\n        meta: pickNotDeprecated(meta, metaData),\n        metaData: pickNotDeprecated(meta, metaData),\n        syncWithLocation,\n        dataProviderName,\n        pagination,\n        hasPagination,\n    });\n\n    const hasPaginationString = hasPagination === false ? \"off\" : \"server\";\n    const isPaginationEnabled =\n        (pagination?.mode ?? hasPaginationString) !== \"off\";\n\n    const breakpoint = Grid.useBreakpoint();\n\n    const liveMode = useLiveMode(liveModeFromProp);\n\n    const [form] = Form.useForm<TSearchVariables>();\n\n    const { data, isFetched, isLoading } = queryResult;\n\n    const onChange = (page: number, pageSize?: number): void => {\n        if (isPaginationEnabled) {\n            setCurrent(page);\n            setPageSize(pageSize || 10);\n        }\n    };\n\n    const onFinish = async (values: TSearchVariables) => {\n        if (onSearch) {\n            const searchFilters = await onSearch(values);\n            if (isPaginationEnabled) {\n                setCurrent?.(1);\n            }\n            return setFilters(searchFilters);\n        }\n    };\n\n    const antdPagination = (): false | PaginationConfig => {\n        if (isPaginationEnabled) {\n            return {\n                itemRender: (page, type, element) => {\n                    const link = createLinkForSyncWithLocation({\n                        pagination: {\n                            pageSize,\n                            current: page,\n                        },\n                        sorters,\n                        filters,\n                    });\n\n                    if (type === \"page\") {\n                        return createElement(PaginationLink, {\n                            to: link,\n                            element: `${page}`,\n                        });\n                    }\n                    if (type === \"next\" || type === \"prev\") {\n                        return createElement(PaginationLink, {\n                            to: link,\n                            element: element,\n                        });\n                    }\n\n                    if (type === \"jump-next\" || type === \"jump-prev\") {\n                        const elementChildren = (element as React.ReactElement)\n                            ?.props?.children;\n\n                        return createElement(PaginationLink, {\n                            to: link,\n                            element:\n                                Children.count(elementChildren) > 1\n                                    ? createElement(\n                                          Fragment,\n                                          {},\n                                          elementChildren,\n                                      )\n                                    : elementChildren,\n                        });\n                    }\n\n                    return element;\n                },\n                pageSize,\n                current,\n                simple: !breakpoint.sm,\n                total: data?.total,\n                onChange,\n            };\n        }\n\n        return false;\n    };\n\n    return {\n        searchFormProps: {\n            form,\n            onFinish,\n        },\n        listProps: {\n            dataSource: data?.data,\n            loading: liveMode === \"auto\" ? isLoading : !isFetched,\n            pagination: antdPagination(),\n        },\n        queryResult,\n        filters,\n        setFilters,\n        sorter,\n        setSorter,\n        sorters,\n        setSorters,\n        current,\n        setCurrent,\n        pageSize,\n        setPageSize,\n        pageCount,\n        createLinkForSyncWithLocation,\n        overtime,\n    };\n};\n","import { useCallback, useMemo, useState } from \"react\";\nimport { UploadChangeParam } from \"antd/lib/upload\";\n\nexport type UseFileUploadStateType = () => {\n    isLoading: boolean;\n    onChange: (info: UploadChangeParam) => void;\n};\n\nexport const useFileUploadState: UseFileUploadStateType = () => {\n    const [isLoading, setIsloading] = useState(false);\n\n    const onChange = useCallback((info: UploadChangeParam) => {\n        const fileListLoadings = mapStatusToLoading(info.fileList);\n\n        if (fileListLoadings.includes(true)) {\n            setIsloading(true);\n        } else {\n            setIsloading(false);\n        }\n    }, []);\n\n    return useMemo(() => ({ isLoading, onChange }), [isLoading]);\n};\n\nconst mapStatusToLoading = (files: UploadChangeParam[\"fileList\"]) => {\n    return files.map((file) => {\n        switch (file.status) {\n            case \"uploading\":\n                return true;\n            default:\n                return false;\n        }\n    });\n};\n","import { useContext } from \"react\";\n\nimport { ThemedLayoutContext } from \"@contexts\";\n\nexport type UseSiderVisibleType = {\n    siderVisible: boolean;\n    drawerSiderVisible: boolean;\n    setSiderVisible: (visible: boolean) => void;\n    setDrawerSiderVisible: (visible: boolean) => void;\n};\n\n/**\n * @deprecated Please use `useThemedLayoutContext` instead.\n */\nexport const useSiderVisible = (): UseSiderVisibleType => {\n    const {\n        mobileSiderOpen,\n        siderCollapsed,\n        setMobileSiderOpen,\n        setSiderCollapsed,\n    } = useContext(ThemedLayoutContext);\n\n    return {\n        siderVisible: mobileSiderOpen,\n        setSiderVisible: setMobileSiderOpen,\n        drawerSiderVisible: siderCollapsed,\n        setDrawerSiderVisible: setSiderCollapsed,\n    };\n};\n","import React, { ReactNode, useState } from \"react\";\n\nimport { IThemedLayoutContext } from \"./IThemedLayoutContext\";\n\nexport const ThemedLayoutContext = React.createContext<IThemedLayoutContext>({\n    siderCollapsed: false,\n    mobileSiderOpen: false,\n    setSiderCollapsed: () => undefined,\n    setMobileSiderOpen: () => undefined,\n});\n\nexport const ThemedLayoutContextProvider: React.FC<{\n    children: ReactNode;\n    initialSiderCollapsed?: boolean;\n}> = ({ children, initialSiderCollapsed }) => {\n    const [siderCollapsed, setSiderCollapsed] = useState(\n        initialSiderCollapsed ?? false,\n    );\n    const [mobileSiderOpen, setMobileSiderOpen] = useState(false);\n\n    return (\n        <ThemedLayoutContext.Provider\n            value={{\n                siderCollapsed,\n                mobileSiderOpen,\n                setSiderCollapsed,\n                setMobileSiderOpen,\n            }}\n        >\n            {children}\n        </ThemedLayoutContext.Provider>\n    );\n};\n","import { useContext } from \"react\";\n\nimport { ThemedLayoutContext } from \"@contexts\";\nimport { IThemedLayoutContext } from \"@contexts/themedLayoutContext/IThemedLayoutContext\";\n\nexport type UseThemedLayoutContextType = IThemedLayoutContext;\n\nexport const useThemedLayoutContext = (): UseThemedLayoutContextType => {\n    const {\n        mobileSiderOpen,\n        siderCollapsed,\n        setMobileSiderOpen,\n        setSiderCollapsed,\n    } = useContext(ThemedLayoutContext);\n\n    return {\n        mobileSiderOpen,\n        siderCollapsed,\n        setMobileSiderOpen,\n        setSiderCollapsed,\n    };\n};\n","import { NotificationProvider } from \"@refinedev/core\";\nimport { App, notification as staticNotification } from \"antd\";\nimport React from \"react\";\n\nimport { UndoableNotification } from \"@components/undoableNotification\";\n\n/**\n * @deprecated `notificationProvider` is deprecated due to not being compatible with theme changes in Ant Design. Please use `useNotificationProvider` export as your notification provider.\n * @see https://refine.dev/docs/api-reference/antd/theming/#usenotificationprovider-compatible-with-theme\n */\n\nexport const notificationProvider: NotificationProvider = {\n    open: ({\n        key,\n        message,\n        description,\n        type,\n        cancelMutation,\n        undoableTimeout,\n    }) => {\n        if (type === \"progress\") {\n            staticNotification.open({\n                key,\n                description: (\n                    <UndoableNotification\n                        notificationKey={key}\n                        message={message}\n                        cancelMutation={() => {\n                            cancelMutation?.();\n                            staticNotification.destroy(key ?? \"\");\n                        }}\n                        undoableTimeout={undoableTimeout}\n                    />\n                ),\n                message: null,\n                duration: 0,\n                closeIcon: <></>,\n            });\n        } else {\n            staticNotification.open({\n                key,\n                description: message,\n                message: description ?? null,\n                type,\n            });\n        }\n    },\n    close: (key) => staticNotification.destroy(key),\n};\n\nexport const useNotificationProvider = (): NotificationProvider => {\n    const { notification: notificationFromContext } = App.useApp();\n    const notification =\n        \"open\" in notificationFromContext\n            ? notificationFromContext\n            : staticNotification;\n\n    const notificationProvider: NotificationProvider = {\n        open: ({\n            key,\n            message,\n            description,\n            type,\n            cancelMutation,\n            undoableTimeout,\n        }) => {\n            if (type === \"progress\") {\n                notification.open({\n                    key,\n                    description: (\n                        <UndoableNotification\n                            notificationKey={key}\n                            message={message}\n                            cancelMutation={() => {\n                                cancelMutation?.();\n                                notification.destroy(key ?? \"\");\n                            }}\n                            undoableTimeout={undoableTimeout}\n                        />\n                    ),\n                    message: null,\n                    duration: 0,\n                    closeIcon: <></>,\n                });\n            } else {\n                notification.open({\n                    key,\n                    description: message,\n                    message: description ?? null,\n                    type,\n                });\n            }\n        },\n        close: (key) => notification.destroy(key),\n    };\n\n    return notificationProvider;\n};\n","import React from \"react\";\nimport { Button, Progress } from \"antd\";\nimport { OpenNotificationParams } from \"@refinedev/core\";\nimport { UndoOutlined } from \"@ant-design/icons\";\n\nexport type UndoableNotificationProps = {\n    notificationKey: OpenNotificationParams[\"key\"];\n    message: OpenNotificationParams[\"message\"];\n    cancelMutation: OpenNotificationParams[\"cancelMutation\"];\n    undoableTimeout: OpenNotificationParams[\"undoableTimeout\"];\n};\n\nexport const UndoableNotification: React.FC<UndoableNotificationProps> = ({\n    message,\n    cancelMutation,\n    undoableTimeout,\n}) => (\n    <div\n        style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"space-between\",\n            marginTop: \"-7px\",\n        }}\n    >\n        <Progress\n            type=\"circle\"\n            percent={(undoableTimeout ?? 0) * 20}\n            format={(time) => time && time / 20}\n            width={50}\n            strokeColor=\"#1890ff\"\n            status=\"normal\"\n        />\n        <span style={{ marginLeft: 8, width: \"100%\" }}>{message}</span>\n        <Button\n            style={{ flexShrink: 0 }}\n            onClick={cancelMutation}\n            disabled={undoableTimeout === 0}\n            icon={<UndoOutlined />}\n        ></Button>\n    </div>\n);\n","import React from \"react\";\nimport { Grid, Layout as AntdLayout } from \"antd\";\n\nimport { Sider as DefaultSider } from \"./sider\";\nimport { Header as DefaultHeader } from \"./header\";\nimport { RefineLayoutLayoutProps } from \"./types\";\n\n/**\n * @deprecated use `<ThemedLayout>` instead with 100% backward compatibility.\n * @see https://refine.dev/docs/api-reference/antd/components/antd-themed-layout\n **/\nexport const Layout: React.FC<RefineLayoutLayoutProps> = ({\n    children,\n    Header,\n    Sider,\n    Title,\n    Footer,\n    OffLayoutArea,\n}) => {\n    const breakpoint = Grid.useBreakpoint();\n    const SiderToRender = Sider ?? DefaultSider;\n    const HeaderToRender = Header ?? DefaultHeader;\n    const isSmall = typeof breakpoint.sm === \"undefined\" ? true : breakpoint.sm;\n\n    return (\n        <AntdLayout style={{ minHeight: \"100vh\" }}>\n            <SiderToRender Title={Title} />\n            <AntdLayout>\n                <HeaderToRender />\n                <AntdLayout.Content>\n                    <div\n                        style={{\n                            minHeight: 360,\n                            padding: isSmall ? 24 : 12,\n                        }}\n                    >\n                        {children}\n                    </div>\n                    {OffLayoutArea && <OffLayoutArea />}\n                </AntdLayout.Content>\n                {Footer && <Footer />}\n            </AntdLayout>\n        </AntdLayout>\n    );\n};\n","import React, { useState } from \"react\";\nimport { Layout, Menu, Grid, ConfigProvider, Drawer, Button } from \"antd\";\nimport {\n    DashboardOutlined,\n    LogoutOutlined,\n    UnorderedListOutlined,\n    BarsOutlined,\n} from \"@ant-design/icons\";\nimport {\n    useTranslate,\n    useLogout,\n    useTitle,\n    CanAccess,\n    ITreeMenu,\n    useIsExistAuthentication,\n    useRouterContext,\n    useMenu,\n    useRefineContext,\n    useLink,\n    useRouterType,\n    useActiveAuthProvider,\n    pickNotDeprecated,\n    useWarnAboutChange,\n} from \"@refinedev/core\";\n\nimport { Title as DefaultTitle } from \"@components\";\n\nimport { drawerButtonStyles } from \"./styles\";\nimport { RefineLayoutSiderProps } from \"../types\";\n\nconst { SubMenu } = Menu;\n\nexport const Sider: React.FC<RefineLayoutSiderProps> = ({\n    Title: TitleFromProps,\n    render,\n    meta,\n}) => {\n    const [collapsed, setCollapsed] = useState<boolean>(false);\n    const [drawerOpen, setDrawerOpen] = useState<boolean>(false);\n    const isExistAuthentication = useIsExistAuthentication();\n    const routerType = useRouterType();\n    const NewLink = useLink();\n    const { warnWhen, setWarnWhen } = useWarnAboutChange();\n    const { Link: LegacyLink } = useRouterContext();\n    const Link = routerType === \"legacy\" ? LegacyLink : NewLink;\n    const TitleFromContext = useTitle();\n    const translate = useTranslate();\n    const { menuItems, selectedKey, defaultOpenKeys } = useMenu({ meta });\n    const breakpoint = Grid.useBreakpoint();\n    const { hasDashboard } = useRefineContext();\n    const authProvider = useActiveAuthProvider();\n    const { mutate: mutateLogout } = useLogout({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n\n    const isMobile =\n        typeof breakpoint.lg === \"undefined\" ? false : !breakpoint.lg;\n\n    const RenderToTitle = TitleFromProps ?? TitleFromContext ?? DefaultTitle;\n\n    const renderTreeView = (tree: ITreeMenu[], selectedKey?: string) => {\n        return tree.map((item: ITreeMenu) => {\n            const {\n                icon,\n                label,\n                route,\n                key,\n                name,\n                children,\n                parentName,\n                meta,\n                options,\n            } = item;\n\n            if (children.length > 0) {\n                return (\n                    <CanAccess\n                        key={item.key}\n                        resource={name.toLowerCase()}\n                        action=\"list\"\n                        params={{\n                            resource: item,\n                        }}\n                    >\n                        <SubMenu\n                            key={item.key}\n                            icon={icon ?? <UnorderedListOutlined />}\n                            title={label}\n                        >\n                            {renderTreeView(children, selectedKey)}\n                        </SubMenu>\n                    </CanAccess>\n                );\n            }\n            const isSelected = key === selectedKey;\n            const isRoute = !(\n                pickNotDeprecated(meta?.parent, options?.parent, parentName) !==\n                    undefined && children.length === 0\n            );\n            return (\n                <CanAccess\n                    key={item.key}\n                    resource={name.toLowerCase()}\n                    action=\"list\"\n                    params={{\n                        resource: item,\n                    }}\n                >\n                    <Menu.Item\n                        key={item.key}\n                        style={{\n                            fontWeight: isSelected ? \"bold\" : \"normal\",\n                        }}\n                        icon={icon ?? (isRoute && <UnorderedListOutlined />)}\n                    >\n                        <Link to={route ?? \"\"}>{label}</Link>\n                        {!collapsed && isSelected && (\n                            <div className=\"ant-menu-tree-arrow\" />\n                        )}\n                    </Menu.Item>\n                </CanAccess>\n            );\n        });\n    };\n\n    const handleLogout = () => {\n        if (warnWhen) {\n            const confirm = window.confirm(\n                translate(\n                    \"warnWhenUnsavedChanges\",\n                    \"Are you sure you want to leave? You have unsaved changes.\",\n                ),\n            );\n\n            if (confirm) {\n                setWarnWhen(false);\n                mutateLogout();\n            }\n        } else {\n            mutateLogout();\n        }\n    };\n\n    const logout = isExistAuthentication && (\n        <Menu.Item\n            key=\"logout\"\n            onClick={handleLogout}\n            icon={<LogoutOutlined />}\n        >\n            {translate(\"buttons.logout\", \"Logout\")}\n        </Menu.Item>\n    );\n\n    const dashboard = hasDashboard ? (\n        <Menu.Item\n            key=\"dashboard\"\n            style={{\n                fontWeight: selectedKey === \"/\" ? \"bold\" : \"normal\",\n            }}\n            icon={<DashboardOutlined />}\n        >\n            <Link to=\"/\">{translate(\"dashboard.title\", \"Dashboard\")}</Link>\n            {!collapsed && selectedKey === \"/\" && (\n                <div className=\"ant-menu-tree-arrow\" />\n            )}\n        </Menu.Item>\n    ) : null;\n\n    const items = renderTreeView(menuItems, selectedKey);\n\n    const renderSider = () => {\n        if (render) {\n            return render({\n                dashboard,\n                items,\n                logout,\n                collapsed,\n            });\n        }\n        return (\n            <>\n                {dashboard}\n                {items}\n                {logout}\n            </>\n        );\n    };\n\n    const renderMenu = () => {\n        return (\n            <>\n                <Menu\n                    theme=\"dark\"\n                    selectedKeys={selectedKey ? [selectedKey] : []}\n                    defaultOpenKeys={defaultOpenKeys}\n                    mode=\"inline\"\n                    onClick={() => {\n                        setDrawerOpen(false);\n                        if (!breakpoint.lg) {\n                            setCollapsed(true);\n                        }\n                    }}\n                >\n                    {renderSider()}\n                </Menu>\n            </>\n        );\n    };\n\n    const renderDrawerSider = () => {\n        return (\n            <>\n                <Drawer\n                    open={drawerOpen}\n                    onClose={() => setDrawerOpen(false)}\n                    placement=\"left\"\n                    closable={false}\n                    width={200}\n                    bodyStyle={{\n                        padding: 0,\n                    }}\n                    maskClosable={true}\n                >\n                    <Layout>\n                        <Layout.Sider\n                            style={{ height: \"100vh\", overflow: \"hidden\" }}\n                        >\n                            <RenderToTitle collapsed={false} />\n                            {renderMenu()}\n                        </Layout.Sider>\n                    </Layout>\n                </Drawer>\n                <Button\n                    style={drawerButtonStyles}\n                    size=\"large\"\n                    onClick={() => setDrawerOpen(true)}\n                    icon={<BarsOutlined />}\n                ></Button>\n            </>\n        );\n    };\n\n    const renderContent = () => {\n        if (isMobile) {\n            return renderDrawerSider();\n        }\n\n        return (\n            <Layout.Sider\n                collapsible\n                collapsed={collapsed}\n                onCollapse={(collapsed: boolean): void =>\n                    setCollapsed(collapsed)\n                }\n                collapsedWidth={80}\n                breakpoint=\"lg\"\n            >\n                <RenderToTitle collapsed={collapsed} />\n                {renderMenu()}\n            </Layout.Sider>\n        );\n    };\n\n    return (\n        <ConfigProvider\n            theme={{\n                components: {\n                    Menu: {\n                        colorItemBg: \"transparent\",\n                        colorItemText: \"#fff\",\n                        colorItemTextSelected: \"#fff\",\n                        colorItemBgSelected: \"transparent\",\n                        colorItemTextHover: \"#fff\",\n                    },\n                },\n            }}\n        >\n            {renderContent()}\n        </ConfigProvider>\n    );\n};\n","import { CSSProperties } from \"react\";\n\nexport const drawerButtonStyles: CSSProperties = {\n    borderTopLeftRadius: 0,\n    borderBottomLeftRadius: 0,\n    position: \"fixed\",\n    top: 64,\n    zIndex: 999,\n};\n","import { useActiveAuthProvider, useGetIdentity } from \"@refinedev/core\";\nimport { Avatar, Layout as AntdLayout, Space, Typography } from \"antd\";\nimport React from \"react\";\nimport { RefineLayoutHeaderProps } from \"../types\";\nconst { Text } = Typography;\n\nexport const Header: React.FC<RefineLayoutHeaderProps> = () => {\n    const authProvider = useActiveAuthProvider();\n    const { data: user } = useGetIdentity({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n\n    const shouldRenderHeader = user && (user.name || user.avatar);\n\n    return shouldRenderHeader ? (\n        <AntdLayout.Header\n            style={{\n                display: \"flex\",\n                justifyContent: \"flex-end\",\n                alignItems: \"center\",\n                padding: \"0px 24px\",\n                height: \"64px\",\n            }}\n        >\n            <Space style={{ marginLeft: \"8px\" }}>\n                {user?.name && (\n                    <Text style={{ color: \"white\" }} strong>\n                        {user.name}\n                    </Text>\n                )}\n                {user?.avatar && <Avatar src={user?.avatar} alt={user?.name} />}\n            </Space>\n        </AntdLayout.Header>\n    ) : null;\n};\n","import React from \"react\";\nimport {\n    TitleProps,\n    useRouterContext,\n    useRouterType,\n    useLink,\n} from \"@refinedev/core\";\n\nexport const Title: React.FC<TitleProps> = ({ collapsed }) => {\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    return (\n        <ActiveLink to=\"/\">\n            {collapsed ? (\n                <div\n                    style={{\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        justifyContent: \"center\",\n                    }}\n                >\n                    <img\n                        src=\"https://refine.ams3.cdn.digitaloceanspaces.com/logo/refine-mini.svg\"\n                        alt=\"Refine\"\n                        style={{\n                            margin: \"0 auto\",\n                            padding: \"12px 0\",\n                            maxHeight: \"65.5px\",\n                        }}\n                    />\n                </div>\n            ) : (\n                <img\n                    src=\"https://refine.ams3.cdn.digitaloceanspaces.com/logo/refine.svg\"\n                    alt=\"Refine\"\n                    style={{\n                        width: \"200px\",\n                        padding: \"12px 24px\",\n                    }}\n                />\n            )}\n        </ActiveLink>\n    );\n};\n","import React from \"react\";\nimport { Grid, Layout as AntdLayout } from \"antd\";\n\nimport { ThemedSider as DefaultSider } from \"./sider\";\nimport { ThemedHeader as DefaultHeader } from \"./header\";\nimport { RefineThemedLayoutProps } from \"./types\";\n\n/**\n * @deprecated It is recommended to use the improved `ThemedLayoutV2`. Review migration guidelines. https://refine.dev/docs/api-reference/antd/components/antd-themed-layout/#migrate-themedlayout-to-themedlayoutv2\n */\nexport const ThemedLayout: React.FC<RefineThemedLayoutProps> = ({\n    children,\n    Header,\n    Sider,\n    Title,\n    Footer,\n    OffLayoutArea,\n}) => {\n    const breakpoint = Grid.useBreakpoint();\n    const SiderToRender = Sider ?? DefaultSider;\n    const HeaderToRender = Header ?? DefaultHeader;\n    const isSmall = typeof breakpoint.sm === \"undefined\" ? true : breakpoint.sm;\n\n    return (\n        <AntdLayout style={{ minHeight: \"100vh\" }}>\n            <SiderToRender Title={Title} />\n            <AntdLayout>\n                <HeaderToRender />\n                <AntdLayout.Content>\n                    <div\n                        style={{\n                            minHeight: 360,\n                            padding: isSmall ? 24 : 12,\n                        }}\n                    >\n                        {children}\n                    </div>\n                    {OffLayoutArea && <OffLayoutArea />}\n                </AntdLayout.Content>\n                {Footer && <Footer />}\n            </AntdLayout>\n        </AntdLayout>\n    );\n};\n","import React, { useState } from \"react\";\nimport { Layout, Menu, Grid, Drawer, Button, theme } from \"antd\";\nimport {\n    DashboardOutlined,\n    LogoutOutlined,\n    UnorderedListOutlined,\n    BarsOutlined,\n    LeftOutlined,\n    RightOutlined,\n} from \"@ant-design/icons\";\nimport {\n    useTranslate,\n    useLogout,\n    useTitle,\n    CanAccess,\n    ITreeMenu,\n    useIsExistAuthentication,\n    useRouterContext,\n    useMenu,\n    useRefineContext,\n    useLink,\n    useRouterType,\n    useActiveAuthProvider,\n    pickNotDeprecated,\n    useWarnAboutChange,\n} from \"@refinedev/core\";\n\nimport { drawerButtonStyles } from \"./styles\";\nimport { RefineThemedLayoutSiderProps } from \"../types\";\nimport { ThemedTitle } from \"@components\";\n\nconst { SubMenu } = Menu;\nconst { useToken } = theme;\n\n/**\n * @deprecated It is recommended to use the improved `ThemedLayoutV2`. Review migration guidelines. https://refine.dev/docs/api-reference/antd/components/antd-themed-layout/#migrate-themedlayout-to-themedlayoutv2\n */\nexport const ThemedSider: React.FC<RefineThemedLayoutSiderProps> = ({\n    Title: TitleFromProps,\n    render,\n    meta,\n}) => {\n    const { token } = useToken();\n\n    const [collapsed, setCollapsed] = useState<boolean>(false);\n    const [drawerOpen, setDrawerOpen] = useState<boolean>(false);\n    const isExistAuthentication = useIsExistAuthentication();\n    const routerType = useRouterType();\n    const NewLink = useLink();\n    const { warnWhen, setWarnWhen } = useWarnAboutChange();\n    const { Link: LegacyLink } = useRouterContext();\n    const Link = routerType === \"legacy\" ? LegacyLink : NewLink;\n    const TitleFromContext = useTitle();\n    const translate = useTranslate();\n    const { menuItems, selectedKey, defaultOpenKeys } = useMenu({ meta });\n    const breakpoint = Grid.useBreakpoint();\n    const { hasDashboard } = useRefineContext();\n    const authProvider = useActiveAuthProvider();\n    const { mutate: mutateLogout } = useLogout({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n\n    const isMobile =\n        typeof breakpoint.lg === \"undefined\" ? false : !breakpoint.lg;\n\n    const RenderToTitle = TitleFromProps ?? TitleFromContext ?? ThemedTitle;\n\n    const renderTreeView = (tree: ITreeMenu[], selectedKey?: string) => {\n        return tree.map((item: ITreeMenu) => {\n            const {\n                icon,\n                label,\n                route,\n                key,\n                name,\n                children,\n                parentName,\n                meta,\n                options,\n            } = item;\n\n            if (children.length > 0) {\n                return (\n                    <CanAccess\n                        key={item.key}\n                        resource={name.toLowerCase()}\n                        action=\"list\"\n                        params={{\n                            resource: item,\n                        }}\n                    >\n                        <SubMenu\n                            key={item.key}\n                            icon={icon ?? <UnorderedListOutlined />}\n                            title={label}\n                        >\n                            {renderTreeView(children, selectedKey)}\n                        </SubMenu>\n                    </CanAccess>\n                );\n            }\n            const isSelected = key === selectedKey;\n            const isRoute = !(\n                pickNotDeprecated(meta?.parent, options?.parent, parentName) !==\n                    undefined && children.length === 0\n            );\n\n            return (\n                <CanAccess\n                    key={item.key}\n                    resource={name.toLowerCase()}\n                    action=\"list\"\n                    params={{\n                        resource: item,\n                    }}\n                >\n                    <Menu.Item\n                        key={item.key}\n                        icon={icon ?? (isRoute && <UnorderedListOutlined />)}\n                    >\n                        <Link to={route ?? \"\"}>{label}</Link>\n                        {!collapsed && isSelected && (\n                            <div className=\"ant-menu-tree-arrow\" />\n                        )}\n                    </Menu.Item>\n                </CanAccess>\n            );\n        });\n    };\n\n    const handleLogout = () => {\n        if (warnWhen) {\n            const confirm = window.confirm(\n                translate(\n                    \"warnWhenUnsavedChanges\",\n                    \"Are you sure you want to leave? You have unsaved changes.\",\n                ),\n            );\n\n            if (confirm) {\n                setWarnWhen(false);\n                mutateLogout();\n            }\n        } else {\n            mutateLogout();\n        }\n    };\n\n    const logout = isExistAuthentication && (\n        <Menu.Item\n            key=\"logout\"\n            onClick={() => handleLogout()}\n            icon={<LogoutOutlined />}\n        >\n            {translate(\"buttons.logout\", \"Logout\")}\n        </Menu.Item>\n    );\n\n    const dashboard = hasDashboard ? (\n        <Menu.Item key=\"dashboard\" icon={<DashboardOutlined />}>\n            <Link to=\"/\">{translate(\"dashboard.title\", \"Dashboard\")}</Link>\n            {!collapsed && selectedKey === \"/\" && (\n                <div className=\"ant-menu-tree-arrow\" />\n            )}\n        </Menu.Item>\n    ) : null;\n\n    const items = renderTreeView(menuItems, selectedKey);\n\n    const renderSider = () => {\n        if (render) {\n            return render({\n                dashboard,\n                items,\n                logout,\n                collapsed,\n            });\n        }\n        return (\n            <>\n                {dashboard}\n                {items}\n                {logout}\n            </>\n        );\n    };\n\n    const renderMenu = () => {\n        return (\n            <>\n                <Menu\n                    selectedKeys={selectedKey ? [selectedKey] : []}\n                    defaultOpenKeys={defaultOpenKeys}\n                    mode=\"inline\"\n                    style={{\n                        marginTop: \"8px\",\n                        border: \"none\",\n                    }}\n                    onClick={() => {\n                        setDrawerOpen(false);\n                        if (!breakpoint.lg) {\n                            setCollapsed(true);\n                        }\n                    }}\n                >\n                    {renderSider()}\n                </Menu>\n            </>\n        );\n    };\n\n    const renderDrawerSider = () => {\n        return (\n            <>\n                <Drawer\n                    open={drawerOpen}\n                    onClose={() => setDrawerOpen(false)}\n                    placement=\"left\"\n                    closable={false}\n                    width={200}\n                    bodyStyle={{\n                        padding: 0,\n                    }}\n                    maskClosable={true}\n                >\n                    <Layout>\n                        <Layout.Sider\n                            style={{\n                                height: \"100vh\",\n                                overflow: \"hidden\",\n                                backgroundColor: token.colorBgContainer,\n                                borderRight: `1px solid ${token.colorBgElevated}`,\n                            }}\n                        >\n                            <div\n                                style={{\n                                    width: \"200px\",\n                                    padding: \"0 16px\",\n                                    display: \"flex\",\n                                    justifyContent: \"flex-start\",\n                                    alignItems: \"center\",\n                                    height: \"64px\",\n                                    backgroundColor: token.colorBgElevated,\n                                }}\n                            >\n                                <RenderToTitle collapsed={false} />\n                            </div>\n                            {renderMenu()}\n                        </Layout.Sider>\n                    </Layout>\n                </Drawer>\n                <Button\n                    style={drawerButtonStyles}\n                    size=\"large\"\n                    onClick={() => setDrawerOpen(true)}\n                    icon={<BarsOutlined />}\n                ></Button>\n            </>\n        );\n    };\n\n    if (isMobile) {\n        return renderDrawerSider();\n    }\n\n    return (\n        <Layout.Sider\n            style={{\n                backgroundColor: token.colorBgContainer,\n                borderRight: `1px solid ${token.colorBgElevated}`,\n            }}\n            collapsible\n            collapsed={collapsed}\n            onCollapse={(collapsed) => setCollapsed(collapsed)}\n            collapsedWidth={80}\n            breakpoint=\"lg\"\n            trigger={\n                <Button\n                    type=\"text\"\n                    style={{\n                        borderRadius: 0,\n                        height: \"100%\",\n                        width: \"100%\",\n                        backgroundColor: token.colorBgElevated,\n                    }}\n                >\n                    {collapsed ? (\n                        <RightOutlined\n                            style={{\n                                color: token.colorPrimary,\n                            }}\n                        />\n                    ) : (\n                        <LeftOutlined\n                            style={{\n                                color: token.colorPrimary,\n                            }}\n                        />\n                    )}\n                </Button>\n            }\n        >\n            <div\n                style={{\n                    width: collapsed ? \"80px\" : \"200px\",\n                    padding: collapsed ? \"0\" : \"0 16px\",\n                    display: \"flex\",\n                    justifyContent: collapsed ? \"center\" : \"flex-start\",\n                    alignItems: \"center\",\n                    height: \"64px\",\n                    backgroundColor: token.colorBgElevated,\n                    fontSize: \"14px\",\n                }}\n            >\n                <RenderToTitle collapsed={collapsed} />\n            </div>\n            {renderMenu()}\n        </Layout.Sider>\n    );\n};\n","import { CSSProperties } from \"react\";\n\nexport const drawerButtonStyles: CSSProperties = {\n    borderTopLeftRadius: 0,\n    borderBottomLeftRadius: 0,\n    position: \"fixed\",\n    top: 64,\n    zIndex: 999,\n};\n","import React from \"react\";\nimport { Layout as AntdLayout, Typography, Avatar, Space, theme } from \"antd\";\nimport { useActiveAuthProvider, useGetIdentity } from \"@refinedev/core\";\nimport { RefineThemedLayoutHeaderProps } from \"../types\";\n\nconst { Text } = Typography;\nconst { useToken } = theme;\n\n/**\n * @deprecated It is recommended to use the improved `ThemedLayoutV2`. Review migration guidelines. https://refine.dev/docs/api-reference/antd/components/antd-themed-layout/#migrate-themedlayout-to-themedlayoutv2\n */\nexport const ThemedHeader: React.FC<RefineThemedLayoutHeaderProps> = () => {\n    const { token } = useToken();\n\n    const authProvider = useActiveAuthProvider();\n    const { data: user } = useGetIdentity({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n\n    const shouldRenderHeader = user && (user.name || user.avatar);\n\n    if (!shouldRenderHeader) {\n        return null;\n    }\n\n    return (\n        <AntdLayout.Header\n            style={{\n                backgroundColor: token.colorBgElevated,\n                display: \"flex\",\n                justifyContent: \"flex-end\",\n                alignItems: \"center\",\n                padding: \"0px 24px\",\n                height: \"64px\",\n            }}\n        >\n            <Space>\n                <Space size=\"middle\">\n                    {user?.name && <Text strong>{user.name}</Text>}\n                    {user?.avatar && (\n                        <Avatar src={user?.avatar} alt={user?.name} />\n                    )}\n                </Space>\n            </Space>\n        </AntdLayout.Header>\n    );\n};\n","import React from \"react\";\nimport { useRouterContext, useRouterType, useLink } from \"@refinedev/core\";\nimport { Typography, theme, Space } from \"antd\";\nimport { RefineLayoutThemedTitleProps } from \"../types\";\n\nconst { useToken } = theme;\n\nconst defaultText = \"refine Project\";\n\nconst defaultIcon = (\n    <svg\n        width=\"24\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        data-testid=\"refine-logo\"\n    >\n        <path\n            d=\"M12 9C13.6569 9 15 7.65685 15 6C15 4.34315 13.6569 3 12 3C10.3431 3 9 4.34315 9 6C9 7.65685 10.3431 9 12 9Z\"\n            fill=\"currentColor\"\n        />\n        <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M24 12C24 18.6274 18.6274 24 12 24C5.37258 24 0 18.6274 0 12C0 5.37258 5.37258 0 12 0C18.6274 0 24 5.37258 24 12ZM8 6C8 3.79086 9.79086 2 12 2C14.2091 2 16 3.79086 16 6V18C16 20.2091 14.2091 22 12 22C9.79086 22 8 20.2091 8 18V6Z\"\n            fill=\"currentColor\"\n        />\n    </svg>\n);\n\n/**\n * @deprecated It is recommended to use the improved `ThemedLayoutV2`. Review migration guidelines. https://refine.dev/docs/api-reference/antd/components/antd-themed-layout/#migrate-themedlayout-to-themedlayoutv2\n */\nexport const ThemedTitle: React.FC<RefineLayoutThemedTitleProps> = ({\n    collapsed,\n    icon = defaultIcon,\n    text = defaultText,\n    wrapperStyles,\n}) => {\n    const { token } = useToken();\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    return (\n        <ActiveLink\n            to=\"/\"\n            style={{\n                display: \"inline-block\",\n                textDecoration: \"none\",\n            }}\n        >\n            <Space\n                style={{\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    fontSize: \"inherit\",\n                    ...wrapperStyles,\n                }}\n            >\n                <div\n                    style={{\n                        height: \"24px\",\n                        width: \"24px\",\n                        color: token.colorPrimary,\n                    }}\n                >\n                    {icon}\n                </div>\n\n                {!collapsed && (\n                    <Typography.Title\n                        style={{\n                            fontSize: \"inherit\",\n                            marginBottom: 0,\n                            fontWeight: 700,\n                        }}\n                    >\n                        {text}\n                    </Typography.Title>\n                )}\n            </Space>\n        </ActiveLink>\n    );\n};\n","import React, { useMemo } from \"react\";\nimport { Grid, Layout as AntdLayout } from \"antd\";\n\nimport { ThemedSiderV2 as DefaultSider } from \"./sider\";\nimport { ThemedHeaderV2 as DefaultHeader } from \"./header\";\nimport { RefineThemedLayoutV2Props } from \"./types\";\nimport { ThemedLayoutContextProvider } from \"@contexts\";\n\nexport const ThemedLayoutV2: React.FC<RefineThemedLayoutV2Props> = ({\n    children,\n    Header,\n    Sider,\n    Title,\n    Footer,\n    OffLayoutArea,\n    initialSiderCollapsed,\n}) => {\n    const breakpoint = Grid.useBreakpoint();\n    const SiderToRender = Sider ?? DefaultSider;\n    const HeaderToRender = Header ?? DefaultHeader;\n    const isSmall = typeof breakpoint.sm === \"undefined\" ? true : breakpoint.sm;\n    const hasSider = !!SiderToRender({ Title });\n\n    return (\n        <ThemedLayoutContextProvider\n            initialSiderCollapsed={initialSiderCollapsed}\n        >\n            <AntdLayout style={{ minHeight: \"100vh\" }} hasSider={hasSider}>\n                <SiderToRender Title={Title} />\n                <AntdLayout>\n                    <HeaderToRender />\n                    <AntdLayout.Content>\n                        <div\n                            style={{\n                                minHeight: 360,\n                                padding: isSmall ? 24 : 12,\n                            }}\n                        >\n                            {children}\n                        </div>\n                        {OffLayoutArea && <OffLayoutArea />}\n                    </AntdLayout.Content>\n                    {Footer && <Footer />}\n                </AntdLayout>\n            </AntdLayout>\n        </ThemedLayoutContextProvider>\n    );\n};\n","import React from \"react\";\nimport { Layout, Menu, Grid, Drawer, Button, theme } from \"antd\";\nimport {\n    DashboardOutlined,\n    LogoutOutlined,\n    UnorderedListOutlined,\n    BarsOutlined,\n    LeftOutlined,\n    RightOutlined,\n} from \"@ant-design/icons\";\nimport {\n    useTranslate,\n    useLogout,\n    useTitle,\n    CanAccess,\n    ITreeMenu,\n    useIsExistAuthentication,\n    useRouterContext,\n    useMenu,\n    useRefineContext,\n    useLink,\n    useRouterType,\n    useActiveAuthProvider,\n    pickNotDeprecated,\n    useWarnAboutChange,\n} from \"@refinedev/core\";\n\nimport { drawerButtonStyles } from \"./styles\";\nimport { RefineThemedLayoutV2SiderProps } from \"../types\";\nimport { ThemedTitleV2 } from \"@components\";\nimport { useThemedLayoutContext } from \"@hooks\";\n\nconst { SubMenu } = Menu;\nconst { useToken } = theme;\n\nexport const ThemedSiderV2: React.FC<RefineThemedLayoutV2SiderProps> = ({\n    Title: TitleFromProps,\n    render,\n    meta,\n    fixed,\n    activeItemDisabled = false,\n}) => {\n    const { token } = useToken();\n    const {\n        siderCollapsed,\n        setSiderCollapsed,\n        mobileSiderOpen,\n        setMobileSiderOpen,\n    } = useThemedLayoutContext();\n\n    const isExistAuthentication = useIsExistAuthentication();\n    const routerType = useRouterType();\n    const NewLink = useLink();\n    const { warnWhen, setWarnWhen } = useWarnAboutChange();\n    const { Link: LegacyLink } = useRouterContext();\n    const Link = routerType === \"legacy\" ? LegacyLink : NewLink;\n    const TitleFromContext = useTitle();\n    const translate = useTranslate();\n    const { menuItems, selectedKey, defaultOpenKeys } = useMenu({ meta });\n    const breakpoint = Grid.useBreakpoint();\n    const { hasDashboard } = useRefineContext();\n    const authProvider = useActiveAuthProvider();\n    const { mutate: mutateLogout } = useLogout({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n\n    const isMobile =\n        typeof breakpoint.lg === \"undefined\" ? false : !breakpoint.lg;\n\n    const RenderToTitle = TitleFromProps ?? TitleFromContext ?? ThemedTitleV2;\n\n    const renderTreeView = (tree: ITreeMenu[], selectedKey?: string) => {\n        return tree.map((item: ITreeMenu) => {\n            const {\n                icon,\n                label,\n                route,\n                key,\n                name,\n                children,\n                parentName,\n                meta,\n                options,\n            } = item;\n\n            if (children.length > 0) {\n                return (\n                    <CanAccess\n                        key={item.key}\n                        resource={name.toLowerCase()}\n                        action=\"list\"\n                        params={{\n                            resource: item,\n                        }}\n                    >\n                        <SubMenu\n                            key={item.key}\n                            icon={icon ?? <UnorderedListOutlined />}\n                            title={label}\n                        >\n                            {renderTreeView(children, selectedKey)}\n                        </SubMenu>\n                    </CanAccess>\n                );\n            }\n            const isSelected = key === selectedKey;\n            const isRoute = !(\n                pickNotDeprecated(meta?.parent, options?.parent, parentName) !==\n                    undefined && children.length === 0\n            );\n\n            const linkStyle: React.CSSProperties =\n                activeItemDisabled && isSelected\n                    ? { pointerEvents: \"none\" }\n                    : {};\n\n            return (\n                <CanAccess\n                    key={item.key}\n                    resource={name.toLowerCase()}\n                    action=\"list\"\n                    params={{\n                        resource: item,\n                    }}\n                >\n                    <Menu.Item\n                        key={item.key}\n                        icon={icon ?? (isRoute && <UnorderedListOutlined />)}\n                        style={linkStyle}\n                    >\n                        <Link to={route ?? \"\"} style={linkStyle}>\n                            {label}\n                        </Link>\n                        {!siderCollapsed && isSelected && (\n                            <div className=\"ant-menu-tree-arrow\" />\n                        )}\n                    </Menu.Item>\n                </CanAccess>\n            );\n        });\n    };\n\n    const handleLogout = () => {\n        if (warnWhen) {\n            const confirm = window.confirm(\n                translate(\n                    \"warnWhenUnsavedChanges\",\n                    \"Are you sure you want to leave? You have unsaved changes.\",\n                ),\n            );\n\n            if (confirm) {\n                setWarnWhen(false);\n                mutateLogout();\n            }\n        } else {\n            mutateLogout();\n        }\n    };\n\n    const logout = isExistAuthentication && (\n        <Menu.Item\n            key=\"logout\"\n            onClick={() => handleLogout()}\n            icon={<LogoutOutlined />}\n        >\n            {translate(\"buttons.logout\", \"Logout\")}\n        </Menu.Item>\n    );\n\n    const dashboard = hasDashboard ? (\n        <Menu.Item key=\"dashboard\" icon={<DashboardOutlined />}>\n            <Link to=\"/\">{translate(\"dashboard.title\", \"Dashboard\")}</Link>\n            {!siderCollapsed && selectedKey === \"/\" && (\n                <div className=\"ant-menu-tree-arrow\" />\n            )}\n        </Menu.Item>\n    ) : null;\n\n    const items = renderTreeView(menuItems, selectedKey);\n\n    const renderSider = () => {\n        if (render) {\n            return render({\n                dashboard,\n                items,\n                logout,\n                collapsed: siderCollapsed,\n            });\n        }\n        return (\n            <>\n                {dashboard}\n                {items}\n                {logout}\n            </>\n        );\n    };\n\n    const renderMenu = () => {\n        return (\n            <Menu\n                selectedKeys={selectedKey ? [selectedKey] : []}\n                defaultOpenKeys={defaultOpenKeys}\n                mode=\"inline\"\n                style={{\n                    paddingTop: \"8px\",\n                    border: \"none\",\n                    overflow: \"auto\",\n                    height: \"calc(100% - 72px)\",\n                }}\n                onClick={() => {\n                    setMobileSiderOpen(false);\n                }}\n            >\n                {renderSider()}\n            </Menu>\n        );\n    };\n\n    const renderDrawerSider = () => {\n        return (\n            <>\n                <Drawer\n                    open={mobileSiderOpen}\n                    onClose={() => setMobileSiderOpen(false)}\n                    placement=\"left\"\n                    closable={false}\n                    width={200}\n                    bodyStyle={{\n                        padding: 0,\n                    }}\n                    maskClosable={true}\n                >\n                    <Layout>\n                        <Layout.Sider\n                            style={{\n                                height: \"100vh\",\n                                backgroundColor: token.colorBgContainer,\n                                borderRight: `1px solid ${token.colorBgElevated}`,\n                            }}\n                        >\n                            <div\n                                style={{\n                                    width: \"200px\",\n                                    padding: \"0 16px\",\n                                    display: \"flex\",\n                                    justifyContent: \"flex-start\",\n                                    alignItems: \"center\",\n                                    height: \"64px\",\n                                    backgroundColor: token.colorBgElevated,\n                                }}\n                            >\n                                <RenderToTitle collapsed={false} />\n                            </div>\n                            {renderMenu()}\n                        </Layout.Sider>\n                    </Layout>\n                </Drawer>\n                <Button\n                    style={drawerButtonStyles}\n                    size=\"large\"\n                    onClick={() => setMobileSiderOpen(true)}\n                    icon={<BarsOutlined />}\n                ></Button>\n            </>\n        );\n    };\n\n    if (isMobile) {\n        return renderDrawerSider();\n    }\n\n    const siderStyles: React.CSSProperties = {\n        backgroundColor: token.colorBgContainer,\n        borderRight: `1px solid ${token.colorBgElevated}`,\n    };\n\n    if (fixed) {\n        siderStyles.position = \"fixed\";\n        siderStyles.top = 0;\n        siderStyles.height = \"100vh\";\n        siderStyles.zIndex = 999;\n    }\n\n    return (\n        <>\n            {fixed && (\n                <div\n                    style={{\n                        width: siderCollapsed ? \"80px\" : \"200px\",\n                        transition: \"all 0.2s\",\n                    }}\n                />\n            )}\n            <Layout.Sider\n                style={siderStyles}\n                collapsible\n                collapsed={siderCollapsed}\n                onCollapse={(collapsed, type) => {\n                    if (type === \"clickTrigger\") {\n                        setSiderCollapsed(collapsed);\n                    }\n                }}\n                collapsedWidth={80}\n                breakpoint=\"lg\"\n                trigger={\n                    <Button\n                        type=\"text\"\n                        style={{\n                            borderRadius: 0,\n                            height: \"100%\",\n                            width: \"100%\",\n                            backgroundColor: token.colorBgElevated,\n                        }}\n                    >\n                        {siderCollapsed ? (\n                            <RightOutlined\n                                style={{\n                                    color: token.colorPrimary,\n                                }}\n                            />\n                        ) : (\n                            <LeftOutlined\n                                style={{\n                                    color: token.colorPrimary,\n                                }}\n                            />\n                        )}\n                    </Button>\n                }\n            >\n                <div\n                    style={{\n                        width: siderCollapsed ? \"80px\" : \"200px\",\n                        padding: siderCollapsed ? \"0\" : \"0 16px\",\n                        display: \"flex\",\n                        justifyContent: siderCollapsed\n                            ? \"center\"\n                            : \"flex-start\",\n                        alignItems: \"center\",\n                        height: \"64px\",\n                        backgroundColor: token.colorBgElevated,\n                        fontSize: \"14px\",\n                    }}\n                >\n                    <RenderToTitle collapsed={siderCollapsed} />\n                </div>\n                {renderMenu()}\n            </Layout.Sider>\n        </>\n    );\n};\n","import { CSSProperties } from \"react\";\n\nexport const drawerButtonStyles: CSSProperties = {\n    borderTopLeftRadius: 0,\n    borderBottomLeftRadius: 0,\n    position: \"fixed\",\n    top: 64,\n    zIndex: 999,\n};\n","import React from \"react\";\nimport { Layout as AntdLayout, Typography, Avatar, Space, theme } from \"antd\";\nimport {\n    pickNotDeprecated,\n    useActiveAuthProvider,\n    useGetIdentity,\n} from \"@refinedev/core\";\nimport { RefineThemedLayoutV2HeaderProps } from \"../types\";\n\nconst { Text } = Typography;\nconst { useToken } = theme;\n\nexport const ThemedHeaderV2: React.FC<RefineThemedLayoutV2HeaderProps> = ({\n    isSticky,\n    sticky,\n}) => {\n    const { token } = useToken();\n\n    const authProvider = useActiveAuthProvider();\n    const { data: user } = useGetIdentity({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n\n    const shouldRenderHeader = user && (user.name || user.avatar);\n\n    if (!shouldRenderHeader) {\n        return null;\n    }\n\n    const headerStyles: React.CSSProperties = {\n        backgroundColor: token.colorBgElevated,\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n        alignItems: \"center\",\n        padding: \"0px 24px\",\n        height: \"64px\",\n    };\n\n    if (pickNotDeprecated(sticky, isSticky)) {\n        headerStyles.position = \"sticky\";\n        headerStyles.top = 0;\n        headerStyles.zIndex = 1;\n    }\n\n    return (\n        <AntdLayout.Header style={headerStyles}>\n            <Space>\n                <Space size=\"middle\">\n                    {user?.name && <Text strong>{user.name}</Text>}\n                    {user?.avatar && (\n                        <Avatar src={user?.avatar} alt={user?.name} />\n                    )}\n                </Space>\n            </Space>\n        </AntdLayout.Header>\n    );\n};\n","import React from \"react\";\nimport { useRouterContext, useRouterType, useLink } from \"@refinedev/core\";\nimport { Typography, theme, Space } from \"antd\";\nimport { RefineLayoutThemedTitleProps } from \"../types\";\n\nconst { useToken } = theme;\n\nconst defaultText = \"refine Project\";\n\nconst defaultIcon = (\n    <svg\n        width=\"24\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        data-testid=\"refine-logo\"\n    >\n        <path\n            d=\"M12 9C13.6569 9 15 7.65685 15 6C15 4.34315 13.6569 3 12 3C10.3431 3 9 4.34315 9 6C9 7.65685 10.3431 9 12 9Z\"\n            fill=\"currentColor\"\n        />\n        <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M24 12C24 18.6274 18.6274 24 12 24C5.37258 24 0 18.6274 0 12C0 5.37258 5.37258 0 12 0C18.6274 0 24 5.37258 24 12ZM8 6C8 3.79086 9.79086 2 12 2C14.2091 2 16 3.79086 16 6V18C16 20.2091 14.2091 22 12 22C9.79086 22 8 20.2091 8 18V6Z\"\n            fill=\"currentColor\"\n        />\n    </svg>\n);\n\nexport const ThemedTitleV2: React.FC<RefineLayoutThemedTitleProps> = ({\n    collapsed,\n    icon = defaultIcon,\n    text = defaultText,\n    wrapperStyles,\n}) => {\n    const { token } = useToken();\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    return (\n        <ActiveLink\n            to=\"/\"\n            style={{\n                display: \"inline-block\",\n                textDecoration: \"none\",\n            }}\n        >\n            <Space\n                style={{\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    fontSize: \"inherit\",\n                    ...wrapperStyles,\n                }}\n            >\n                <div\n                    style={{\n                        height: \"24px\",\n                        width: \"24px\",\n                        color: token.colorPrimary,\n                    }}\n                >\n                    {icon}\n                </div>\n\n                {!collapsed && (\n                    <Typography.Title\n                        style={{\n                            fontSize: \"inherit\",\n                            marginBottom: 0,\n                            fontWeight: 700,\n                        }}\n                    >\n                        {text}\n                    </Typography.Title>\n                )}\n            </Space>\n        </ActiveLink>\n    );\n};\n","import React, { useContext } from \"react\";\nimport { Button } from \"antd\";\nimport { PlusSquareOutlined } from \"@ant-design/icons\";\nimport {\n    useNavigation,\n    useTranslate,\n    useCan,\n    useResource,\n    useRouterContext,\n    useRouterType,\n    useLink,\n    AccessControlContext,\n} from \"@refinedev/core\";\nimport {\n    RefineButtonClassNames,\n    RefineButtonTestIds,\n} from \"@refinedev/ui-types\";\n\nimport { CreateButtonProps } from \"../types\";\n\n/**\n * <CreateButton> uses Ant Design's {@link https://ant.design/components/button/ `<Button> component`}.\n * It uses the {@link https://refine.dev/docs/api-reference/core/hooks/navigation/useNavigation#create `create`} method from {@link https://refine.dev/docs/api-reference/core/hooks/navigation/useNavigation `useNavigation`} under the hood.\n * It can be useful to redirect the app to the create page route of resource}.\n *\n * @see {@link https://refine.dev/docs/api-reference/antd/components/buttons/create-button} for more details.\n */\nexport const CreateButton: React.FC<CreateButtonProps> = ({\n    resource: resourceNameFromProps,\n    resourceNameOrRouteName: propResourceNameOrRouteName,\n    hideText = false,\n    accessControl,\n    meta,\n    children,\n    onClick,\n    ...rest\n}) => {\n    const accessControlContext = useContext(AccessControlContext);\n\n    const accessControlEnabled =\n        accessControl?.enabled ??\n        accessControlContext.options.buttons.enableAccessControl;\n\n    const hideIfUnauthorized =\n        accessControl?.hideIfUnauthorized ??\n        accessControlContext.options.buttons.hideIfUnauthorized;\n\n    const translate = useTranslate();\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    const { createUrl: generateCreateUrl } = useNavigation();\n\n    const { resource } = useResource(\n        resourceNameFromProps ?? propResourceNameOrRouteName,\n    );\n\n    const { data } = useCan({\n        resource: resource?.name,\n        action: \"create\",\n        queryOptions: {\n            enabled: accessControlEnabled,\n        },\n        params: {\n            resource,\n        },\n    });\n\n    const createButtonDisabledTitle = () => {\n        if (data?.can) return \"\";\n        else if (data?.reason) return data.reason;\n        else\n            return translate(\n                \"buttons.notAccessTitle\",\n                \"You don't have permission to access\",\n            );\n    };\n\n    const createUrl = resource ? generateCreateUrl(resource, meta) : \"\";\n\n    if (accessControlEnabled && hideIfUnauthorized && !data?.can) {\n        return null;\n    }\n\n    return (\n        <ActiveLink\n            to={createUrl}\n            replace={false}\n            onClick={(e: React.PointerEvent<HTMLButtonElement>) => {\n                if (data?.can === false) {\n                    e.preventDefault();\n                    return;\n                }\n                if (onClick) {\n                    e.preventDefault();\n                    onClick(e);\n                }\n            }}\n        >\n            <Button\n                icon={<PlusSquareOutlined />}\n                disabled={data?.can === false}\n                title={createButtonDisabledTitle()}\n                data-testid={RefineButtonTestIds.CreateButton}\n                className={RefineButtonClassNames.CreateButton}\n                type=\"primary\"\n                {...rest}\n            >\n                {!hideText &&\n                    (children ?? translate(\"buttons.create\", \"Create\"))}\n            </Button>\n        </ActiveLink>\n    );\n};\n","import React, { useContext } from \"react\";\nimport { Button } from \"antd\";\nimport { EditOutlined } from \"@ant-design/icons\";\nimport {\n    useCan,\n    useNavigation,\n    useTranslate,\n    useResource,\n    useRouterContext,\n    useRouterType,\n    useLink,\n    AccessControlContext,\n} from \"@refinedev/core\";\nimport {\n    RefineButtonClassNames,\n    RefineButtonTestIds,\n} from \"@refinedev/ui-types\";\n\nimport { EditButtonProps } from \"../types\";\n\n/**\n * `<EditButton>` uses Ant Design's {@link https://ant.design/components/button/ `<Button>`} component.\n * It uses the {@link https://refine.dev/docs/api-reference/core/hooks/navigation/useNavigation#edit `edit`} method from {@link https://refine.dev/docs/api-reference/core/hooks/navigation/useNavigation `useNavigation`} under the hood.\n * It can be useful when redirecting the app to the edit page with the record id route of resource}.\n *\n * @see {@link https://refine.dev/docs/api-reference/antd/components/buttons/edit-button} for more details.\n */\nexport const EditButton: React.FC<EditButtonProps> = ({\n    resource: resourceNameFromProps,\n    resourceNameOrRouteName: propResourceNameOrRouteName,\n    recordItemId,\n    hideText = false,\n    accessControl,\n    meta,\n    children,\n    onClick,\n    ...rest\n}) => {\n    const accessControlContext = useContext(AccessControlContext);\n\n    const accessControlEnabled =\n        accessControl?.enabled ??\n        accessControlContext.options.buttons.enableAccessControl;\n\n    const hideIfUnauthorized =\n        accessControl?.hideIfUnauthorized ??\n        accessControlContext.options.buttons.hideIfUnauthorized;\n\n    const translate = useTranslate();\n\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    const { editUrl: generateEditUrl } = useNavigation();\n\n    const { id, resource } = useResource(\n        resourceNameFromProps ?? propResourceNameOrRouteName,\n    );\n\n    const { data } = useCan({\n        resource: resource?.name,\n        action: \"edit\",\n        params: { id: recordItemId ?? id, resource },\n        queryOptions: {\n            enabled: accessControlEnabled,\n        },\n    });\n\n    const createButtonDisabledTitle = () => {\n        if (data?.can) return \"\";\n        else if (data?.reason) return data.reason;\n        else\n            return translate(\n                \"buttons.notAccessTitle\",\n                \"You don't have permission to access\",\n            );\n    };\n\n    const editUrl =\n        resource && (recordItemId ?? id)\n            ? generateEditUrl(resource, recordItemId! ?? id!, meta)\n            : \"\";\n\n    if (accessControlEnabled && hideIfUnauthorized && !data?.can) {\n        return null;\n    }\n\n    return (\n        <ActiveLink\n            to={editUrl}\n            replace={false}\n            onClick={(e: React.PointerEvent<HTMLButtonElement>) => {\n                if (data?.can === false) {\n                    e.preventDefault();\n                    return;\n                }\n                if (onClick) {\n                    e.preventDefault();\n                    onClick(e);\n                }\n            }}\n        >\n            <Button\n                icon={<EditOutlined />}\n                disabled={data?.can === false}\n                title={createButtonDisabledTitle()}\n                data-testid={RefineButtonTestIds.EditButton}\n                className={RefineButtonClassNames.EditButton}\n                {...rest}\n            >\n                {!hideText && (children ?? translate(\"buttons.edit\", \"Edit\"))}\n            </Button>\n        </ActiveLink>\n    );\n};\n","import React, { useContext } from \"react\";\nimport { Button, Popconfirm } from \"antd\";\nimport { DeleteOutlined } from \"@ant-design/icons\";\nimport {\n    useDelete,\n    useTranslate,\n    useMutationMode,\n    useCan,\n    useResource,\n    pickNotDeprecated,\n    useWarnAboutChange,\n    AccessControlContext,\n} from \"@refinedev/core\";\nimport {\n    RefineButtonClassNames,\n    RefineButtonTestIds,\n} from \"@refinedev/ui-types\";\n\nimport { DeleteButtonProps } from \"../types\";\n\n/**\n * `<DeleteButton>` uses Ant Design's {@link https://ant.design/components/button/ `<Button>`} and {@link https://ant.design/components/button/ `<Popconfirm>`} components.\n * When you try to delete something, a pop-up shows up and asks for confirmation. When confirmed it executes the `useDelete` method provided by your `dataProvider`.\n *\n * @see {@link https://refine.dev/docs/api-reference/antd/components/buttons/delete-button} for more details.\n */\nexport const DeleteButton: React.FC<DeleteButtonProps> = ({\n    resource: resourceNameFromProps,\n    resourceNameOrRouteName: propResourceNameOrRouteName,\n    recordItemId,\n    onSuccess,\n    mutationMode: mutationModeProp,\n    children,\n    successNotification,\n    errorNotification,\n    hideText = false,\n    accessControl,\n    metaData,\n    meta,\n    dataProviderName,\n    confirmTitle,\n    confirmOkText,\n    confirmCancelText,\n    invalidates,\n    ...rest\n}) => {\n    const accessControlContext = useContext(AccessControlContext);\n\n    const accessControlEnabled =\n        accessControl?.enabled ??\n        accessControlContext.options.buttons.enableAccessControl;\n\n    const hideIfUnauthorized =\n        accessControl?.hideIfUnauthorized ??\n        accessControlContext.options.buttons.hideIfUnauthorized;\n\n    const translate = useTranslate();\n\n    const { id, resource, identifier } = useResource(\n        resourceNameFromProps ?? propResourceNameOrRouteName,\n    );\n\n    const { mutationMode: mutationModeContext } = useMutationMode();\n\n    const mutationMode = mutationModeProp ?? mutationModeContext;\n\n    const { mutate, isLoading, variables } = useDelete();\n\n    const { data } = useCan({\n        resource: resource?.name,\n        action: \"delete\",\n        params: { id: recordItemId ?? id, resource },\n        queryOptions: {\n            enabled: accessControlEnabled,\n        },\n    });\n\n    const disabledTitle = () => {\n        if (data?.can) return \"\";\n        else if (data?.reason) return data.reason;\n        else\n            return translate(\n                \"buttons.notAccessTitle\",\n                \"You don't have permission to access\",\n            );\n    };\n\n    const { setWarnWhen } = useWarnAboutChange();\n\n    if (accessControlEnabled && hideIfUnauthorized && !data?.can) {\n        return null;\n    }\n\n    return (\n        <Popconfirm\n            key=\"delete\"\n            okText={confirmOkText ?? translate(\"buttons.delete\", \"Delete\")}\n            cancelText={\n                confirmCancelText ?? translate(\"buttons.cancel\", \"Cancel\")\n            }\n            okType=\"danger\"\n            title={\n                confirmTitle ?? translate(\"buttons.confirm\", \"Are you sure?\")\n            }\n            okButtonProps={{ disabled: isLoading }}\n            onConfirm={(): void => {\n                if ((recordItemId ?? id) && identifier) {\n                    setWarnWhen(false);\n                    mutate(\n                        {\n                            id: recordItemId ?? id ?? \"\",\n                            resource: identifier,\n                            mutationMode,\n                            successNotification,\n                            errorNotification,\n                            meta: pickNotDeprecated(meta, metaData),\n                            metaData: pickNotDeprecated(meta, metaData),\n                            dataProviderName,\n                            invalidates,\n                        },\n                        {\n                            onSuccess: (value) => {\n                                onSuccess && onSuccess(value);\n                            },\n                        },\n                    );\n                }\n            }}\n            disabled={\n                typeof rest?.disabled !== \"undefined\"\n                    ? rest.disabled\n                    : data?.can === false\n            }\n        >\n            <Button\n                danger\n                loading={(recordItemId ?? id) === variables?.id && isLoading}\n                icon={<DeleteOutlined />}\n                title={disabledTitle()}\n                disabled={data?.can === false}\n                data-testid={RefineButtonTestIds.DeleteButton}\n                className={RefineButtonClassNames.DeleteButton}\n                {...rest}\n            >\n                {!hideText &&\n                    (children ?? translate(\"buttons.delete\", \"Delete\"))}\n            </Button>\n        </Popconfirm>\n    );\n};\n","import React from \"react\";\nimport { Button } from \"antd\";\nimport { RedoOutlined } from \"@ant-design/icons\";\nimport {\n    useTranslate,\n    useResource,\n    useInvalidate,\n    queryKeys,\n    pickDataProvider,\n} from \"@refinedev/core\";\nimport {\n    RefineButtonClassNames,\n    RefineButtonTestIds,\n} from \"@refinedev/ui-types\";\n\nimport { RefreshButtonProps } from \"../types\";\n\nimport { useQueryClient } from \"@tanstack/react-query\";\n\n/**\n * `<RefreshButton>` uses Ant Design's {@link https://ant.design/components/button/ `<Button>`} component\n * to update the data shown on the page via the {@link https://refine.dev/docs/api-reference/core/hooks/invalidate/useInvalidate `useInvalidate`} hook.\n *\n * @see {@link https://refine.dev/docs/api-reference/antd/components/buttons/refresh-button} for more details.\n */\nexport const RefreshButton: React.FC<RefreshButtonProps> = ({\n    resource: resourceNameFromProps,\n    resourceNameOrRouteName: propResourceNameOrRouteName,\n    recordItemId,\n    hideText = false,\n    dataProviderName,\n    children,\n    onClick,\n    meta: _meta,\n    metaData: _metaData,\n    ...rest\n}) => {\n    const translate = useTranslate();\n\n    const queryClient = useQueryClient();\n    const invalidates = useInvalidate();\n\n    const { resources, identifier, id } = useResource(\n        resourceNameFromProps ?? propResourceNameOrRouteName,\n    );\n\n    const isInvalidating = !!queryClient.isFetching({\n        queryKey: queryKeys(\n            identifier,\n            pickDataProvider(identifier, dataProviderName, resources),\n        ).detail(recordItemId ?? id),\n    });\n\n    const handleInvalidate = () => {\n        invalidates({\n            id: recordItemId ?? id,\n            invalidates: [\"detail\"],\n            dataProviderName,\n            resource: identifier,\n        });\n    };\n\n    return (\n        <Button\n            onClick={(e) => {\n                onClick ? onClick(e) : handleInvalidate();\n            }}\n            icon={<RedoOutlined spin={isInvalidating} />}\n            data-testid={RefineButtonTestIds.RefreshButton}\n            className={RefineButtonClassNames.RefreshButton}\n            {...rest}\n        >\n            {!hideText && (children ?? translate(\"buttons.refresh\", \"Refresh\"))}\n        </Button>\n    );\n};\n","import React, { useContext } from \"react\";\nimport { Button } from \"antd\";\nimport { EyeOutlined } from \"@ant-design/icons\";\nimport {\n    useCan,\n    useNavigation,\n    useTranslate,\n    useResource,\n    useRouterContext,\n    useRouterType,\n    useLink,\n    AccessControlContext,\n} from \"@refinedev/core\";\nimport {\n    RefineButtonClassNames,\n    RefineButtonTestIds,\n} from \"@refinedev/ui-types\";\n\nimport { ShowButtonProps } from \"../types\";\n\n/**\n * `<ShowButton>` uses Ant Design's {@link https://ant.design/components/button/ `<Button>`} component.\n * It uses the {@link https://refine.dev/docs/api-reference/core/hooks/navigation/useNavigation#show `show`} method from {@link https://refine.dev/docs/api-reference/core/hooks/navigation/useNavigation `useNavigation`} under the hood.\n * It can be useful when redirecting the app to the show page with the record id route of resource.\n *\n * @see {@link https://refine.dev/docs/api-reference/antd/components/buttons/show-button} for more details.\n */\nexport const ShowButton: React.FC<ShowButtonProps> = ({\n    resource: resourceNameFromProps,\n    resourceNameOrRouteName: propResourceNameOrRouteName,\n    recordItemId,\n    hideText = false,\n    accessControl,\n    meta,\n    children,\n    onClick,\n    ...rest\n}) => {\n    const accessControlContext = useContext(AccessControlContext);\n\n    const accessControlEnabled =\n        accessControl?.enabled ??\n        accessControlContext.options.buttons.enableAccessControl;\n\n    const hideIfUnauthorized =\n        accessControl?.hideIfUnauthorized ??\n        accessControlContext.options.buttons.hideIfUnauthorized;\n\n    const { showUrl: generateShowUrl } = useNavigation();\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    const translate = useTranslate();\n\n    const { id, resource } = useResource(\n        resourceNameFromProps ?? propResourceNameOrRouteName,\n    );\n\n    const { data } = useCan({\n        resource: resource?.name,\n        action: \"show\",\n        params: { id: recordItemId ?? id, resource },\n        queryOptions: {\n            enabled: accessControlEnabled,\n        },\n    });\n\n    const createButtonDisabledTitle = () => {\n        if (data?.can) return \"\";\n        else if (data?.reason) return data.reason;\n        else\n            return translate(\n                \"buttons.notAccessTitle\",\n                \"You don't have permission to access\",\n            );\n    };\n\n    const showUrl =\n        resource && (recordItemId || id)\n            ? generateShowUrl(resource, recordItemId! ?? id!, meta)\n            : \"\";\n\n    if (accessControlEnabled && hideIfUnauthorized && !data?.can) {\n        return null;\n    }\n\n    return (\n        <ActiveLink\n            to={showUrl}\n            replace={false}\n            onClick={(e: React.PointerEvent<HTMLButtonElement>) => {\n                if (data?.can === false) {\n                    e.preventDefault();\n                    return;\n                }\n                if (onClick) {\n                    e.preventDefault();\n                    onClick(e);\n                }\n            }}\n        >\n            <Button\n                icon={<EyeOutlined />}\n                disabled={data?.can === false}\n                title={createButtonDisabledTitle()}\n                data-testid={RefineButtonTestIds.ShowButton}\n                className={RefineButtonClassNames.ShowButton}\n                {...rest}\n            >\n                {!hideText && (children ?? translate(\"buttons.show\", \"Show\"))}\n            </Button>\n        </ActiveLink>\n    );\n};\n","import React, { useContext } from \"react\";\nimport { Button } from \"antd\";\nimport { BarsOutlined } from \"@ant-design/icons\";\nimport {\n    useCan,\n    useNavigation,\n    useTranslate,\n    useUserFriendlyName,\n    useResource,\n    useRouterContext,\n    useRouterType,\n    useLink,\n    pickNotDeprecated,\n    AccessControlContext,\n} from \"@refinedev/core\";\nimport {\n    RefineButtonClassNames,\n    RefineButtonTestIds,\n} from \"@refinedev/ui-types\";\n\nimport { ListButtonProps } from \"../types\";\n\n/**\n * `<ListButton>` is using Ant Design's {@link https://ant.design/components/button/ `<Button>`} component.\n * It uses the  {@link https://refine.dev/docs/api-reference/core/hooks/navigation/useNavigation#list `list`} method from {@link https://refine.dev/docs/api-reference/core/hooks/navigation/useNavigation `useNavigation`} under the hood.\n * It can be useful when redirecting the app to the list page route of resource}.\n *\n * @see {@link https://refine.dev/docs/api-reference/antd/components/buttons/list-button} for more details.\n */\nexport const ListButton: React.FC<ListButtonProps> = ({\n    resource: resourceNameFromProps,\n    resourceNameOrRouteName: propResourceNameOrRouteName,\n    hideText = false,\n    accessControl,\n    meta,\n    children,\n    onClick,\n    ...rest\n}) => {\n    const accessControlContext = useContext(AccessControlContext);\n\n    const accessControlEnabled =\n        accessControl?.enabled ??\n        accessControlContext.options.buttons.enableAccessControl;\n\n    const hideIfUnauthorized =\n        accessControl?.hideIfUnauthorized ??\n        accessControlContext.options.buttons.hideIfUnauthorized;\n\n    const { listUrl: generateListUrl } = useNavigation();\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n    const getUserFriendlyName = useUserFriendlyName();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    const translate = useTranslate();\n\n    const { resource, identifier } = useResource(\n        resourceNameFromProps ?? propResourceNameOrRouteName,\n    );\n\n    const { data } = useCan({\n        resource: resource?.name,\n        action: \"list\",\n        queryOptions: {\n            enabled: accessControlEnabled,\n        },\n        params: {\n            resource,\n        },\n    });\n\n    const createButtonDisabledTitle = () => {\n        if (data?.can) return \"\";\n        else if (data?.reason) return data.reason;\n        else\n            return translate(\n                \"buttons.notAccessTitle\",\n                \"You don't have permission to access\",\n            );\n    };\n\n    const listUrl = resource ? generateListUrl(resource, meta) : \"\";\n\n    if (accessControlEnabled && hideIfUnauthorized && !data?.can) {\n        return null;\n    }\n\n    return (\n        <ActiveLink\n            to={listUrl}\n            replace={false}\n            onClick={(e: React.PointerEvent<HTMLButtonElement>) => {\n                if (data?.can === false) {\n                    e.preventDefault();\n                    return;\n                }\n                if (onClick) {\n                    e.preventDefault();\n                    onClick(e);\n                }\n            }}\n        >\n            <Button\n                icon={<BarsOutlined />}\n                disabled={data?.can === false}\n                title={createButtonDisabledTitle()}\n                data-testid={RefineButtonTestIds.ListButton}\n                className={RefineButtonClassNames.ListButton}\n                {...rest}\n            >\n                {!hideText &&\n                    (children ??\n                        translate(\n                            `${\n                                identifier ??\n                                resourceNameFromProps ??\n                                propResourceNameOrRouteName\n                            }.titles.list`,\n                            getUserFriendlyName(\n                                resource?.meta?.label ??\n                                    resource?.label ??\n                                    identifier ??\n                                    pickNotDeprecated(\n                                        resourceNameFromProps,\n                                        propResourceNameOrRouteName,\n                                    ),\n                                \"plural\",\n                            ),\n                        ))}\n            </Button>\n        </ActiveLink>\n    );\n};\n","import React from \"react\";\nimport { Button } from \"antd\";\nimport { ExportOutlined } from \"@ant-design/icons\";\nimport { useTranslate } from \"@refinedev/core\";\nimport {\n    RefineButtonClassNames,\n    RefineButtonTestIds,\n} from \"@refinedev/ui-types\";\n\nimport { ExportButtonProps } from \"../types\";\n\n/**\n * `<ExportButton>` is an Ant Design {@link https://ant.design/components/button/ `<Button>`} with a default export icon and a default text with \"Export\".\n * It only has presentational value.\n *\n * @see {@link https://refine.dev/docs/api-reference/antd/components/buttons/export-button} for more details.\n */\nexport const ExportButton: React.FC<ExportButtonProps> = ({\n    hideText = false,\n    children,\n    ...rest\n}) => {\n    const translate = useTranslate();\n\n    return (\n        <Button\n            type=\"default\"\n            icon={<ExportOutlined />}\n            data-testid={RefineButtonTestIds.ExportButton}\n            className={RefineButtonClassNames.ExportButton}\n            {...rest}\n        >\n            {!hideText && (children ?? translate(\"buttons.export\", \"Export\"))}\n        </Button>\n    );\n};\n","import React from \"react\";\nimport { Button } from \"antd\";\nimport { SaveOutlined } from \"@ant-design/icons\";\nimport { useTranslate } from \"@refinedev/core\";\nimport {\n    RefineButtonClassNames,\n    RefineButtonTestIds,\n} from \"@refinedev/ui-types\";\n\nimport { SaveButtonProps } from \"../types\";\n\n/**\n * `<SaveButton>` uses Ant Design's {@link https://ant.design/components/button/ `<Button>`} component.\n * It uses it for presantation purposes only. Some of the hooks that refine has adds features to this button.\n *\n * @see {@link https://refine.dev/docs/api-reference/antd/components/buttons/save-button} for more details.\n */\nexport const SaveButton: React.FC<SaveButtonProps> = ({\n    hideText = false,\n    children,\n    ...rest\n}) => {\n    const translate = useTranslate();\n\n    return (\n        <Button\n            type=\"primary\"\n            icon={<SaveOutlined />}\n            data-testid={RefineButtonTestIds.SaveButton}\n            className={RefineButtonClassNames.SaveButton}\n            {...rest}\n        >\n            {!hideText && (children ?? translate(\"buttons.save\", \"Save\"))}\n        </Button>\n    );\n};\n","import React, { useContext } from \"react\";\nimport { Button } from \"antd\";\nimport { PlusSquareOutlined } from \"@ant-design/icons\";\nimport {\n    useCan,\n    useNavigation,\n    useTranslate,\n    useResource,\n    useRouterContext,\n    useRouterType,\n    useLink,\n    AccessControlContext,\n} from \"@refinedev/core\";\nimport {\n    RefineButtonTestIds,\n    RefineButtonClassNames,\n} from \"@refinedev/ui-types\";\n\nimport { CloneButtonProps } from \"../types\";\n\n/**\n * `<CloneButton>` uses Ant Design's {@link https://ant.design/components/button/ `<Button> component`}.\n * It uses the {@link https://refine.dev/docs/api-reference/core/hooks/navigation/useNavigation#clone `clone`} method from {@link https://refine.dev/docs/api-reference/core/hooks/navigation/useNavigation useNavigation} under the hood.\n * It can be useful when redirecting the app to the create page with the record id route of resource.\n *\n * @see {@link https://refine.dev/docs/api-reference/antd/components/buttons/clone-button} for more details.\n */\nexport const CloneButton: React.FC<CloneButtonProps> = ({\n    resourceNameOrRouteName: propResourceNameOrRouteName,\n    resource: resourceNameFromProps,\n    recordItemId,\n    hideText = false,\n    accessControl,\n    meta,\n    children,\n    onClick,\n    ...rest\n}) => {\n    const accessControlContext = useContext(AccessControlContext);\n\n    const accessControlEnabled =\n        accessControl?.enabled ??\n        accessControlContext.options.buttons.enableAccessControl;\n\n    const hideIfUnauthorized =\n        accessControl?.hideIfUnauthorized ??\n        accessControlContext.options.buttons.hideIfUnauthorized;\n\n    const { cloneUrl: generateCloneUrl } = useNavigation();\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    const translate = useTranslate();\n\n    const { id, resource } = useResource(\n        resourceNameFromProps ?? propResourceNameOrRouteName,\n    );\n\n    const { data } = useCan({\n        resource: resource?.name,\n        action: \"create\",\n        params: { id: recordItemId ?? id, resource },\n        queryOptions: {\n            enabled: accessControlEnabled,\n        },\n    });\n\n    const createButtonDisabledTitle = () => {\n        if (data?.can) return \"\";\n        else if (data?.reason) return data.reason;\n        else\n            return translate(\n                \"buttons.notAccessTitle\",\n                \"You don't have permission to access\",\n            );\n    };\n\n    const cloneUrl =\n        resource && (recordItemId || id)\n            ? generateCloneUrl(resource, recordItemId! ?? id!, meta)\n            : \"\";\n\n    if (accessControlEnabled && hideIfUnauthorized && !data?.can) {\n        return null;\n    }\n\n    return (\n        <ActiveLink\n            to={cloneUrl}\n            replace={false}\n            onClick={(e: React.PointerEvent<HTMLButtonElement>) => {\n                if (data?.can === false) {\n                    e.preventDefault();\n                    return;\n                }\n                if (onClick) {\n                    e.preventDefault();\n                    onClick(e);\n                }\n            }}\n        >\n            <Button\n                icon={<PlusSquareOutlined />}\n                disabled={data?.can === false}\n                title={createButtonDisabledTitle()}\n                data-testid={RefineButtonTestIds.CloneButton}\n                className={RefineButtonClassNames.CloneButton}\n                {...rest}\n            >\n                {!hideText && (children ?? translate(\"buttons.clone\", \"Clone\"))}\n            </Button>\n        </ActiveLink>\n    );\n};\n","import React from \"react\";\nimport { Button, Upload } from \"antd\";\nimport { ImportOutlined } from \"@ant-design/icons\";\nimport { useTranslate } from \"@refinedev/core\";\nimport {\n    RefineButtonClassNames,\n    RefineButtonTestIds,\n} from \"@refinedev/ui-types\";\n\nimport { ImportButtonProps } from \"../types\";\n\n/**\n * `<ImportButton>` is compatible with the {@link https://refine.dev/docs/api-reference/antd/hooks/import/useImport `useImport`} hook and is meant to be used as it's upload button.\n * It uses Ant Design's {@link https://ant.design/components/button/ `<Button>`} and {@link https://ant.design/components/upload/ `<Upload>`} components.\n * It wraps a `<Button>` component with an `<Upload>` component and accepts properties for `<Button>` and `<Upload>` components separately.\n *\n * @see {@link https://refine.dev/docs/api-reference/antd/components/buttons/import-button} for more details.\n */\nexport const ImportButton: React.FC<ImportButtonProps> = ({\n    uploadProps,\n    buttonProps,\n    hideText = false,\n    children,\n}) => {\n    const translate = useTranslate();\n\n    return (\n        <Upload {...uploadProps}>\n            <Button\n                icon={<ImportOutlined />}\n                data-testid={RefineButtonTestIds.ImportButton}\n                className={RefineButtonClassNames.ImportButton}\n                {...buttonProps}\n            >\n                {!hideText &&\n                    (children ?? translate(\"buttons.import\", \"Import\"))}\n            </Button>\n        </Upload>\n    );\n};\n","import React from \"react\";\nimport { Space } from \"antd\";\nimport {\n    useTranslate,\n    useUserFriendlyName,\n    useRefineContext,\n    useRouterType,\n    useResource,\n} from \"@refinedev/core\";\n\nimport {\n    Breadcrumb,\n    CreateButton,\n    CreateButtonProps,\n    PageHeader,\n} from \"@components\";\nimport { ListProps } from \"../types\";\n\n/**\n * `<List>` provides us a layout for displaying the page.\n * It does not contain any logic but adds extra functionalities like a refresh button.\n *\n * @see {@link https://refine.dev/docs/ui-frameworks/antd/components/basic-views/list} for more details.\n */\nexport const List: React.FC<ListProps> = ({\n    canCreate,\n    title,\n    children,\n    createButtonProps: createButtonPropsFromProps,\n    resource: resourceFromProps,\n    wrapperProps,\n    contentProps,\n    headerProps,\n    breadcrumb: breadcrumbFromProps,\n    headerButtonProps,\n    headerButtons,\n}) => {\n    const translate = useTranslate();\n    const { options: { breadcrumb: globalBreadcrumb } = {} } =\n        useRefineContext();\n\n    const routerType = useRouterType();\n    const getUserFriendlyName = useUserFriendlyName();\n\n    const { resource, identifier } = useResource(resourceFromProps);\n\n    const isCreateButtonVisible =\n        canCreate ??\n        ((resource?.canCreate ?? !!resource?.create) ||\n            createButtonPropsFromProps);\n\n    const breadcrumb =\n        typeof breadcrumbFromProps === \"undefined\"\n            ? globalBreadcrumb\n            : breadcrumbFromProps;\n\n    const createButtonProps: CreateButtonProps | undefined =\n        isCreateButtonVisible\n            ? {\n                  size: \"middle\",\n                  resource:\n                      routerType === \"legacy\" ? resource?.route : identifier,\n                  ...createButtonPropsFromProps,\n              }\n            : undefined;\n\n    const defaultExtra = isCreateButtonVisible ? (\n        <CreateButton {...createButtonProps} />\n    ) : null;\n\n    return (\n        <div {...(wrapperProps ?? {})}>\n            <PageHeader\n                ghost={false}\n                title={\n                    title ??\n                    translate(\n                        `${identifier}.titles.list`,\n                        getUserFriendlyName(\n                            resource?.meta?.label ??\n                                resource?.options?.label ??\n                                resource?.label ??\n                                identifier,\n                            \"plural\",\n                        ),\n                    )\n                }\n                extra={\n                    headerButtons ? (\n                        <Space wrap {...headerButtonProps}>\n                            {typeof headerButtons === \"function\"\n                                ? headerButtons({\n                                      defaultButtons: defaultExtra,\n                                      createButtonProps,\n                                  })\n                                : headerButtons}\n                        </Space>\n                    ) : (\n                        defaultExtra\n                    )\n                }\n                breadcrumb={\n                    typeof breadcrumb !== \"undefined\" ? (\n                        <>{breadcrumb}</> ?? undefined\n                    ) : (\n                        <Breadcrumb />\n                    )\n                }\n                {...(headerProps ?? {})}\n            >\n                <div {...(contentProps ?? {})}>{children}</div>\n            </PageHeader>\n        </div>\n    );\n};\n","import React from \"react\";\nimport { Card, Space, Spin } from \"antd\";\nimport {\n    useNavigation,\n    useTranslate,\n    useUserFriendlyName,\n    useRefineContext,\n    useRouterType,\n    useResource,\n    useBack,\n} from \"@refinedev/core\";\n\nimport {\n    Breadcrumb,\n    SaveButton,\n    PageHeader,\n    SaveButtonProps,\n} from \"@components\";\nimport { CreateProps } from \"../types\";\n\n/**\n * `<Create>` provides us a layout to display the page.\n * It does not contain any logic but adds extra functionalities like action buttons and giving titles to the page.\n *\n * @see {@link https://refine.dev/docs/ui-frameworks/antd/components/basic-views/create} for more details.\n */\nexport const Create: React.FC<CreateProps> = ({\n    title,\n    saveButtonProps: saveButtonPropsFromProps,\n    children,\n    resource: resourceFromProps,\n    isLoading = false,\n    breadcrumb: breadcrumbFromProps,\n    wrapperProps,\n    headerProps,\n    contentProps,\n    headerButtonProps,\n    headerButtons,\n    footerButtonProps,\n    footerButtons,\n    goBack: goBackFromProps,\n}) => {\n    const translate = useTranslate();\n    const { options: { breadcrumb: globalBreadcrumb } = {} } =\n        useRefineContext();\n\n    const routerType = useRouterType();\n    const back = useBack();\n    const { goBack } = useNavigation();\n    const getUserFriendlyName = useUserFriendlyName();\n\n    const { resource, action, identifier } = useResource(resourceFromProps);\n\n    const breadcrumb =\n        typeof breadcrumbFromProps === \"undefined\"\n            ? globalBreadcrumb\n            : breadcrumbFromProps;\n\n    const saveButtonProps: SaveButtonProps = {\n        ...(isLoading ? { disabled: true } : {}),\n        ...saveButtonPropsFromProps,\n        htmlType: \"submit\",\n    };\n\n    const defaultFooterButtons = (\n        <>\n            <SaveButton {...saveButtonProps} />\n        </>\n    );\n\n    return (\n        <div {...(wrapperProps ?? {})}>\n            <PageHeader\n                ghost={false}\n                backIcon={goBackFromProps}\n                onBack={\n                    action !== \"list\" || typeof action !== \"undefined\"\n                        ? routerType === \"legacy\"\n                            ? goBack\n                            : back\n                        : undefined\n                }\n                title={\n                    title ??\n                    translate(\n                        `${identifier}.titles.create`,\n                        `Create ${getUserFriendlyName(\n                            resource?.meta?.label ??\n                                resource?.options?.label ??\n                                resource?.label ??\n                                identifier,\n                            \"singular\",\n                        )}`,\n                    )\n                }\n                breadcrumb={\n                    typeof breadcrumb !== \"undefined\" ? (\n                        <>{breadcrumb}</> ?? undefined\n                    ) : (\n                        <Breadcrumb />\n                    )\n                }\n                extra={\n                    <Space wrap {...(headerButtonProps ?? {})}>\n                        {headerButtons\n                            ? typeof headerButtons === \"function\"\n                                ? headerButtons({\n                                      defaultButtons: null,\n                                  })\n                                : headerButtons\n                            : null}\n                    </Space>\n                }\n                {...(headerProps ?? {})}\n            >\n                <Spin spinning={isLoading}>\n                    <Card\n                        bordered={false}\n                        actions={[\n                            <Space\n                                key=\"action-buttons\"\n                                style={{ float: \"right\", marginRight: 24 }}\n                                {...(footerButtonProps ?? {})}\n                            >\n                                {footerButtons\n                                    ? typeof footerButtons === \"function\"\n                                        ? footerButtons({\n                                              defaultButtons:\n                                                  defaultFooterButtons,\n                                              saveButtonProps: saveButtonProps,\n                                          })\n                                        : footerButtons\n                                    : defaultFooterButtons}\n                            </Space>,\n                        ]}\n                        {...(contentProps ?? {})}\n                    >\n                        {children}\n                    </Card>\n                </Spin>\n            </PageHeader>\n        </div>\n    );\n};\n","import React from \"react\";\n\nimport { Card, Space, Spin } from \"antd\";\nimport {\n    useMutationMode,\n    useNavigation,\n    useTranslate,\n    useUserFriendlyName,\n    useRefineContext,\n    useRouterType,\n    useBack,\n    useResource,\n    useGo,\n    useToPath,\n} from \"@refinedev/core\";\n\nimport {\n    DeleteButton,\n    RefreshButton,\n    ListButton,\n    SaveButton,\n    Breadcrumb,\n    PageHeader,\n    ListButtonProps,\n    RefreshButtonProps,\n    DeleteButtonProps,\n    SaveButtonProps,\n    AutoSaveIndicator,\n} from \"@components\";\nimport { EditProps } from \"../types\";\n\n/**\n * `<Edit>` provides us a layout for displaying the page.\n * It does not contain any logic but adds extra functionalities like a refresh button.\n *\n * @see {@link https://refine.dev/docs/ui-frameworks/antd/components/basic-views/edit} for more details.\n */\nexport const Edit: React.FC<EditProps> = ({\n    title,\n    saveButtonProps: saveButtonPropsFromProps,\n    mutationMode: mutationModeProp,\n    recordItemId,\n    children,\n    deleteButtonProps: deleteButtonPropsFromProps,\n    canDelete,\n    resource: resourceFromProps,\n    isLoading = false,\n    dataProviderName,\n    breadcrumb: breadcrumbFromProps,\n    wrapperProps,\n    headerProps,\n    contentProps,\n    headerButtonProps,\n    headerButtons,\n    footerButtonProps,\n    footerButtons,\n    goBack: goBackFromProps,\n    autoSaveProps,\n}) => {\n    const translate = useTranslate();\n    const { options: { breadcrumb: globalBreadcrumb } = {} } =\n        useRefineContext();\n    const { mutationMode: mutationModeContext } = useMutationMode();\n    const mutationMode = mutationModeProp ?? mutationModeContext;\n\n    const routerType = useRouterType();\n    const back = useBack();\n    const go = useGo();\n    const { goBack, list: legacyGoList } = useNavigation();\n    const getUserFriendlyName = useUserFriendlyName();\n\n    const {\n        resource,\n        action,\n        id: idFromParams,\n        identifier,\n    } = useResource(resourceFromProps);\n\n    const goListPath = useToPath({\n        resource,\n        action: \"list\",\n    });\n\n    const id = recordItemId ?? idFromParams;\n\n    const breadcrumb =\n        typeof breadcrumbFromProps === \"undefined\"\n            ? globalBreadcrumb\n            : breadcrumbFromProps;\n\n    const hasList = resource?.list && !recordItemId;\n    const isDeleteButtonVisible =\n        canDelete ??\n        ((resource?.meta?.canDelete ?? resource?.canDelete) ||\n            deleteButtonPropsFromProps);\n\n    const listButtonProps: ListButtonProps | undefined = hasList\n        ? {\n              ...(isLoading ? { disabled: true } : {}),\n              resource: routerType === \"legacy\" ? resource?.route : identifier,\n          }\n        : undefined;\n\n    const refreshButtonProps: RefreshButtonProps = {\n        ...(isLoading ? { disabled: true } : {}),\n        resource: routerType === \"legacy\" ? resource?.route : identifier,\n        recordItemId: id,\n        dataProviderName,\n    };\n\n    const deleteButtonProps: DeleteButtonProps | undefined =\n        isDeleteButtonVisible\n            ? {\n                  ...(isLoading ? { disabled: true } : {}),\n                  resource:\n                      routerType === \"legacy\" ? resource?.route : identifier,\n                  mutationMode,\n                  onSuccess: () => {\n                      if (routerType === \"legacy\") {\n                          legacyGoList(resource?.route ?? resource?.name ?? \"\");\n                      } else {\n                          go({ to: goListPath });\n                      }\n                  },\n                  recordItemId: id,\n                  dataProviderName,\n                  ...deleteButtonPropsFromProps,\n              }\n            : undefined;\n\n    const saveButtonProps: SaveButtonProps = {\n        ...(isLoading ? { disabled: true } : {}),\n        ...saveButtonPropsFromProps,\n    };\n\n    const defaultHeaderButtons = (\n        <>\n            {autoSaveProps && <AutoSaveIndicator {...autoSaveProps} />}\n            {hasList && <ListButton {...listButtonProps} />}\n            <RefreshButton {...refreshButtonProps} />\n        </>\n    );\n\n    const defaultFooterButtons = (\n        <>\n            {isDeleteButtonVisible && <DeleteButton {...deleteButtonProps} />}\n            <SaveButton {...saveButtonProps} />\n        </>\n    );\n\n    return (\n        <div {...(wrapperProps ?? {})}>\n            <PageHeader\n                ghost={false}\n                backIcon={goBackFromProps}\n                onBack={\n                    action !== \"list\" && typeof action !== \"undefined\"\n                        ? routerType === \"legacy\"\n                            ? goBack\n                            : back\n                        : undefined\n                }\n                title={\n                    title ??\n                    translate(\n                        `${identifier}.titles.edit`,\n                        `Edit ${getUserFriendlyName(\n                            resource?.meta?.label ??\n                                resource?.options?.label ??\n                                resource?.label ??\n                                identifier,\n                            \"singular\",\n                        )}`,\n                    )\n                }\n                extra={\n                    <Space wrap {...(headerButtonProps ?? {})}>\n                        {headerButtons\n                            ? typeof headerButtons === \"function\"\n                                ? headerButtons({\n                                      defaultButtons: defaultHeaderButtons,\n                                      listButtonProps,\n                                      refreshButtonProps,\n                                  })\n                                : headerButtons\n                            : defaultHeaderButtons}\n                    </Space>\n                }\n                breadcrumb={\n                    typeof breadcrumb !== \"undefined\" ? (\n                        <>{breadcrumb}</> ?? undefined\n                    ) : (\n                        <Breadcrumb />\n                    )\n                }\n                {...(headerProps ?? {})}\n            >\n                <Spin spinning={isLoading}>\n                    <Card\n                        bordered={false}\n                        actions={[\n                            <Space\n                                key=\"footer-buttons\"\n                                wrap\n                                style={{\n                                    float: \"right\",\n                                    marginRight: 24,\n                                }}\n                                {...(footerButtonProps ?? {})}\n                            >\n                                {footerButtons\n                                    ? typeof footerButtons === \"function\"\n                                        ? footerButtons({\n                                              defaultButtons:\n                                                  defaultFooterButtons,\n                                              deleteButtonProps,\n                                              saveButtonProps,\n                                          })\n                                        : footerButtons\n                                    : defaultFooterButtons}\n                            </Space>,\n                        ]}\n                        {...(contentProps ?? {})}\n                    >\n                        {children}\n                    </Card>\n                </Spin>\n            </PageHeader>\n        </div>\n    );\n};\n","import React from \"react\";\nimport { Card, Space, Spin } from \"antd\";\nimport {\n    useNavigation,\n    useTranslate,\n    useUserFriendlyName,\n    useRefineContext,\n    useResource,\n    useToPath,\n    useRouterType,\n    useBack,\n    useGo,\n} from \"@refinedev/core\";\n\nimport {\n    EditButton,\n    DeleteButton,\n    RefreshButton,\n    ListButton,\n    Breadcrumb,\n    PageHeader,\n    ListButtonProps,\n    EditButtonProps,\n    DeleteButtonProps,\n    RefreshButtonProps,\n} from \"@components\";\nimport { ShowProps } from \"../types\";\n\n/**\n * `<Show>` provides us a layout for displaying the page.\n * It does not contain any logic but adds extra functionalities like a refresh button.\n *\n * @see {@link https://refine.dev/docs/ui-frameworks/antd/components/basic-views/show} for more details.\n */\nexport const Show: React.FC<ShowProps> = ({\n    title,\n    canEdit,\n    canDelete,\n    isLoading = false,\n    children,\n    resource: resourceFromProps,\n    recordItemId,\n    dataProviderName,\n    breadcrumb: breadcrumbFromProps,\n    contentProps,\n    headerProps,\n    wrapperProps,\n    headerButtons,\n    footerButtons,\n    footerButtonProps,\n    headerButtonProps,\n    goBack: goBackFromProps,\n}) => {\n    const translate = useTranslate();\n    const { options: { breadcrumb: globalBreadcrumb } = {} } =\n        useRefineContext();\n\n    const routerType = useRouterType();\n    const back = useBack();\n    const go = useGo();\n    const { goBack, list: legacyGoList } = useNavigation();\n    const getUserFriendlyName = useUserFriendlyName();\n\n    const {\n        resource,\n        action,\n        id: idFromParams,\n        identifier,\n    } = useResource(resourceFromProps);\n\n    const goListPath = useToPath({\n        resource,\n        action: \"list\",\n    });\n\n    const id = recordItemId ?? idFromParams;\n\n    const breadcrumb =\n        typeof breadcrumbFromProps === \"undefined\"\n            ? globalBreadcrumb\n            : breadcrumbFromProps;\n\n    const hasList = resource?.list && !recordItemId;\n    const isDeleteButtonVisible =\n        canDelete ?? resource?.meta?.canDelete ?? resource?.canDelete;\n    const isEditButtonVisible =\n        canEdit ?? resource?.canEdit ?? !!resource?.edit;\n\n    const listButtonProps: ListButtonProps | undefined = hasList\n        ? {\n              resource: routerType === \"legacy\" ? resource?.route : identifier,\n          }\n        : undefined;\n    const editButtonProps: EditButtonProps | undefined = isEditButtonVisible\n        ? {\n              ...(isLoading ? { disabled: true } : {}),\n              type: \"primary\",\n              resource: routerType === \"legacy\" ? resource?.route : identifier,\n              recordItemId: id,\n          }\n        : undefined;\n    const deleteButtonProps: DeleteButtonProps | undefined =\n        isDeleteButtonVisible\n            ? {\n                  ...(isLoading ? { disabled: true } : {}),\n                  resource:\n                      routerType === \"legacy\" ? resource?.route : identifier,\n                  recordItemId: id,\n                  onSuccess: () => {\n                      if (routerType === \"legacy\") {\n                          legacyGoList(resource?.route ?? resource?.name ?? \"\");\n                      } else {\n                          go({ to: goListPath });\n                      }\n                  },\n                  dataProviderName,\n              }\n            : undefined;\n    const refreshButtonProps: RefreshButtonProps = {\n        ...(isLoading ? { disabled: true } : {}),\n        resource: routerType === \"legacy\" ? resource?.route : identifier,\n        recordItemId: id,\n        dataProviderName,\n    };\n\n    const defaultHeaderButtons = (\n        <>\n            {hasList && <ListButton {...listButtonProps} />}\n            {isEditButtonVisible && <EditButton {...editButtonProps} />}\n            {isDeleteButtonVisible && <DeleteButton {...deleteButtonProps} />}\n            <RefreshButton {...refreshButtonProps} />\n        </>\n    );\n\n    return (\n        <div {...(wrapperProps ?? {})}>\n            <PageHeader\n                ghost={false}\n                backIcon={goBackFromProps}\n                onBack={\n                    action !== \"list\" && typeof action !== \"undefined\"\n                        ? routerType === \"legacy\"\n                            ? goBack\n                            : back\n                        : undefined\n                }\n                title={\n                    title ??\n                    translate(\n                        `${identifier}.titles.show`,\n                        `Show ${getUserFriendlyName(\n                            resource?.meta?.label ??\n                                resource?.options?.label ??\n                                resource?.label ??\n                                identifier,\n                            \"singular\",\n                        )}`,\n                    )\n                }\n                extra={\n                    <Space\n                        key=\"extra-buttons\"\n                        wrap\n                        {...(headerButtonProps ?? {})}\n                    >\n                        {headerButtons\n                            ? typeof headerButtons === \"function\"\n                                ? headerButtons({\n                                      defaultButtons: defaultHeaderButtons,\n                                      deleteButtonProps,\n                                      editButtonProps,\n                                      listButtonProps,\n                                      refreshButtonProps,\n                                  })\n                                : headerButtons\n                            : defaultHeaderButtons}\n                    </Space>\n                }\n                breadcrumb={\n                    typeof breadcrumb !== \"undefined\" ? (\n                        <>{breadcrumb}</> ?? undefined\n                    ) : (\n                        <Breadcrumb />\n                    )\n                }\n                {...(headerProps ?? {})}\n            >\n                <Spin spinning={isLoading}>\n                    <Card\n                        bordered={false}\n                        actions={\n                            footerButtons\n                                ? [\n                                      <Space\n                                          key=\"footer-buttons\"\n                                          wrap\n                                          {...footerButtonProps}\n                                      >\n                                          {typeof footerButtons === \"function\"\n                                              ? footerButtons({\n                                                    defaultButtons: null,\n                                                })\n                                              : footerButtons}\n                                      </Space>,\n                                  ]\n                                : undefined\n                        }\n                        {...(contentProps ?? {})}\n                    >\n                        {children}\n                    </Card>\n                </Spin>\n            </PageHeader>\n        </div>\n    );\n};\n","import React from \"react\";\nimport { Typography } from \"antd\";\n\nconst { Text } = Typography;\n\nimport { TextFieldProps } from \"../types\";\n\n/**\n * This field lets you show basic text. It uses Ant Design's {@link https://ant.design/components/typography/#Typography.Text `<Typography.Text>`} component.\n *\n * @see {@link https://refine.dev/docs/api-reference/antd/components/fields/text} for more details.\n */\nexport const TextField: React.FC<TextFieldProps> = ({ value, ...rest }) => {\n    return <Text {...rest}>{value}</Text>;\n};\n","import React from \"react\";\nimport { Tag } from \"antd\";\n\nimport { TagFieldProps } from \"../types\";\n\n/**\n * This field lets you display a value in a tag. It uses Ant Design's {@link https://ant.design/components/tag/ `<Tag>`} component.\n *\n * @see {@link https://refine.dev/docs/api-reference/antd/components/fields/tag} for more details.\n */\nexport const TagField: React.FC<TagFieldProps> = ({ value, ...rest }) => {\n    return <Tag {...rest}>{value?.toString()}</Tag>;\n};\n","import React from \"react\";\nimport { Typography } from \"antd\";\n\nconst { Link } = Typography;\n\nimport { EmailFieldProps } from \"../types\";\n\n/**\n * This field is used to display email values. It uses the {@link https://ant.design/components/typography/#FAQ `<Link>`} component\n * of {@link https://ant.design/components/typography `<Typography>`} from Ant Design.\n *\n * @see {@link https://refine.dev/docs/api-reference/antd/components/fields/email} for more details.\n */\nexport const EmailField: React.FC<EmailFieldProps> = ({ value, ...rest }) => {\n    return (\n        <Link href={`mailto:${value}`} {...rest}>\n            {value}\n        </Link>\n    );\n};\n","import React from \"react\";\nimport { Image } from \"antd\";\n\nimport { ImageFieldProps } from \"../types\";\n\n/**\n * This field is used to display images and uses {@link https://ant.design/components/image/#header `<Image>`} from Ant Design.\n *\n * @see {@link https://refine.dev/docs/api-reference/antd/components/fields/image} for more details.\n */\nexport const ImageField: React.FC<ImageFieldProps> = ({\n    value,\n    imageTitle,\n    ...rest\n}) => {\n    return <Image {...rest} src={value} title={imageTitle} />;\n};\n","import React from \"react\";\nimport { Tooltip } from \"antd\";\n\nimport { CheckOutlined, CloseOutlined } from \"@ant-design/icons\";\n\nimport { BooleanFieldProps } from \"../types\";\n\n/**\n * This field is used to display boolean values. It uses the {@link https://ant.design/components/tooltip/#header `<Tooltip>`} values from Ant Design.\n *\n * @see {@link https://refine.dev/docs/api-reference/antd/components/fields/boolean} for more details.\n */\nexport const BooleanField: React.FC<BooleanFieldProps> = ({\n    value,\n    valueLabelTrue = \"true\",\n    valueLabelFalse = \"false\",\n    trueIcon = <CheckOutlined />,\n    falseIcon = <CloseOutlined />,\n    ...rest\n}) => {\n    return (\n        <Tooltip title={value ? valueLabelTrue : valueLabelFalse} {...rest}>\n            {value ? <span>{trueIcon}</span> : <span>{falseIcon}</span>}\n        </Tooltip>\n    );\n};\n","import React from \"react\";\nimport dayjs from \"dayjs\";\nimport { Typography } from \"antd\";\n\nimport LocalizedFormat from \"dayjs/plugin/localizedFormat\";\n\nimport { DateFieldProps } from \"../types\";\n\n/**\n * This field is used to display dates. It uses {@link https://day.js.org/docs/en/display/format `Day.js`} to display date format.\n *\n * @see {@link https://refine.dev/docs/api-reference/antd/components/fields/date} for more details.\n */\nexport const DateField: React.FC<DateFieldProps> = ({\n    value,\n    locales,\n    format: dateFormat = \"L\",\n    ...rest\n}) => {\n    dayjs.extend(LocalizedFormat);\n\n    const defaultLocale = dayjs.locale();\n\n    const { Text } = Typography;\n\n    return (\n        <Text {...rest}>\n            {dayjs(value)\n                .locale(locales || defaultLocale)\n                .format(dateFormat)}\n        </Text>\n    );\n};\n","import React from \"react\";\n\nimport { UrlField } from \"@components\";\nimport { FileFieldProps } from \"../types\";\n\n/**\n * This field is used to display files and uses {@link https://ant.design/components/typography `<Typography.Link>`} from Ant Design.\n *\n * @see {@link https://refine.dev/docs/api-reference/antd/components/fields/file} for more details.\n */\nexport const FileField: React.FC<FileFieldProps> = ({\n    title,\n    src,\n    ...rest\n}) => {\n    return (\n        <UrlField value={src} title={title} {...rest}>\n            {title ?? src}\n        </UrlField>\n    );\n};\n","import React from \"react\";\nimport { Typography } from \"antd\";\n\nconst { Link } = Typography;\n\nimport { UrlFieldProps } from \"../types\";\n\n/**\n * This field lets you embed a link. It uses Ant Design's {@link https://ant.design/components/typography/ `<Typography.Link>`} component.\n * You can pass a URL in its `value` property and you can show a text in its place by passing any `children`.\n *\n * @see {@link https://refine.dev/docs/api-reference/antd/components/fields/url} for more details.\n */\nexport const UrlField: React.FC<UrlFieldProps> = ({\n    children,\n    value,\n    ...rest\n}) => {\n    return (\n        <Link href={value} {...rest}>\n            {children ?? value}\n        </Link>\n    );\n};\n","import React from \"react\";\nimport { Typography } from \"antd\";\n\nconst { Text } = Typography;\n\nfunction toLocaleStringSupportsOptions() {\n    return !!(\n        typeof Intl == \"object\" &&\n        Intl &&\n        typeof Intl.NumberFormat == \"function\"\n    );\n}\n\nimport { NumberFieldProps } from \"../types\";\n\n/**\n * This field is used to display a number formatted according to the browser locale, right aligned. and uses {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl `Intl`} to display date format.\n *\n * @see {@link https://refine.dev/docs/api-reference/antd/components/fields/number} for more details.\n */\nexport const NumberField: React.FC<NumberFieldProps> = ({\n    value,\n    locale,\n    options,\n    ...rest\n}) => {\n    const number = Number(value);\n\n    return (\n        <Text {...rest}>\n            {toLocaleStringSupportsOptions()\n                ? number.toLocaleString(locale, options)\n                : number}\n        </Text>\n    );\n};\n","import React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport gfm from \"remark-gfm\";\n\nimport { RefineFieldMarkdownProps } from \"../types\";\n\n/**\n * This field lets you display markdown content. It supports {@link https://github.github.com/gfm/ GitHub Flavored Markdown}.\n *\n * @see {@link https://refine.dev/docs/api-reference/antd/components/fields/markdown} for more details.\n */\nexport const MarkdownField: React.FC<RefineFieldMarkdownProps> = ({\n    value = \"\",\n}) => {\n    return <ReactMarkdown plugins={[gfm]}>{value}</ReactMarkdown>;\n};\n","import React, { ReactNode, useState } from \"react\";\nimport { Button, Space } from \"antd\";\nimport type { FilterDropdownProps as AntdFilterDropdownProps } from \"antd/lib/table/interface\";\nimport dayjs from \"dayjs\";\nimport { FilterOutlined } from \"@ant-design/icons\";\nimport { useTranslate } from \"@refinedev/core\";\n\nexport type FilterDropdownProps = AntdFilterDropdownProps & {\n    mapValue?: (selectedKeys: React.Key[]) => any;\n    children: ReactNode;\n};\n\n/**\n * `<FilterDropdown>` is a helper component for {@link https://ant.design/components/table/#components-table-demo-custom-filter-panel filter dropdowns in Ant Design `<Table>` components.}\n *\n * @see {@link https://refine.dev/docs/ui-frameworks/antd/components/filter-dropdown} for more details.\n */\nexport const FilterDropdown: React.FC<FilterDropdownProps> = (props) => {\n    const {\n        setSelectedKeys,\n        confirm,\n        clearFilters,\n        mapValue,\n        selectedKeys,\n        children,\n    } = props;\n\n    const [value, setValue] = useState<any[] | undefined>(selectedKeys);\n    const translate = useTranslate();\n\n    const clearFilter = () => {\n        if (clearFilters) {\n            setValue([]);\n            clearFilters();\n        }\n    };\n\n    const onFilter = () => {\n        const _mappedValue = mappedValue(value);\n\n        let keys;\n        if (typeof _mappedValue === \"number\") {\n            keys = `${_mappedValue}`;\n        } else if (dayjs.isDayjs(_mappedValue)) {\n            keys = [_mappedValue.toISOString()];\n        } else {\n            keys = _mappedValue;\n        }\n\n        setSelectedKeys(keys);\n\n        confirm?.();\n    };\n\n    const mappedValue = (value: any) => (mapValue ? mapValue(value) : value);\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const onChange = (e: any) => {\n        if (typeof e === \"object\") {\n            if (Array.isArray(e)) {\n                const _mappedValue = mappedValue(e);\n\n                setValue(_mappedValue);\n                return setSelectedKeys(_mappedValue);\n            }\n\n            const changeEvent =\n                !e || !e.target || dayjs.isDayjs(e)\n                    ? { target: { value: e } }\n                    : e;\n\n            const { target }: React.ChangeEvent<HTMLInputElement> = changeEvent;\n            const _mappedValue = mappedValue(target.value);\n            setValue(_mappedValue);\n            return;\n        }\n\n        const _mappedValue = mappedValue(e);\n\n        setValue(_mappedValue);\n    };\n\n    const childrenWithProps = React.Children.map(children, (child) => {\n        if (React.isValidElement(child)) {\n            return React.cloneElement(child, {\n                onChange,\n                value: mappedValue(value),\n            });\n        }\n        return child;\n    });\n    return (\n        <div\n            style={{\n                padding: 10,\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"flex-end\",\n            }}\n        >\n            <div style={{ marginBottom: 15 }}>{childrenWithProps}</div>\n            <Space>\n                <Button type=\"primary\" size=\"small\" onClick={() => onFilter()}>\n                    <FilterOutlined /> {translate(\"buttons.filter\", \"Filter\")}\n                </Button>\n                <Button danger size=\"small\" onClick={() => clearFilter()}>\n                    {translate(\"buttons.clear\", \"Clear\")}\n                </Button>\n            </Space>\n        </div>\n    );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { useGo, useResource, useRouterType } from \"@refinedev/core\";\nimport { RefineErrorPageProps } from \"@refinedev/ui-types\";\nimport { Button, Result, Typography, Space, Tooltip } from \"antd\";\nimport { InfoCircleOutlined } from \"@ant-design/icons\";\nimport { useNavigation, useTranslate } from \"@refinedev/core\";\n\nconst { Text } = Typography;\n\n/**\n * When the app is navigated to a non-existent route, refine shows a default error page.\n * A custom error component can be used for this error page.\n *\n * @see {@link https://refine.dev/docs/packages/documentation/routers/} for more details.\n */\nexport const ErrorComponent: React.FC<RefineErrorPageProps> = () => {\n    const [errorMessage, setErrorMessage] = useState<string>();\n    const translate = useTranslate();\n    const { push } = useNavigation();\n    const go = useGo();\n    const routerType = useRouterType();\n\n    const { resource, action } = useResource();\n\n    useEffect(() => {\n        if (resource) {\n            if (action) {\n                setErrorMessage(\n                    translate(\n                        \"pages.error.info\",\n                        {\n                            action: action,\n                            resource: resource?.name,\n                        },\n                        `You may have forgotten to add the \"${action}\" component to \"${resource?.name}\" resource.`,\n                    ),\n                );\n            }\n        }\n    }, [resource, action]);\n\n    return (\n        <Result\n            status=\"404\"\n            title=\"404\"\n            extra={\n                <Space direction=\"vertical\" size=\"large\">\n                    <Space>\n                        <Text>\n                            {translate(\n                                \"pages.error.404\",\n                                \"Sorry, the page you visited does not exist.\",\n                            )}\n                        </Text>\n                        {errorMessage && (\n                            <Tooltip title={errorMessage}>\n                                <InfoCircleOutlined data-testid=\"error-component-tooltip\" />\n                            </Tooltip>\n                        )}\n                    </Space>\n                    <Button\n                        type=\"primary\"\n                        onClick={() => {\n                            if (routerType === \"legacy\") {\n                                push(\"/\");\n                            } else {\n                                go({ to: \"/\" });\n                            }\n                        }}\n                    >\n                        {translate(\"pages.error.backHome\", \"Back Home\")}\n                    </Button>\n                </Space>\n            }\n        />\n    );\n};\n","import React from \"react\";\nimport { LoginPageProps, useActiveAuthProvider } from \"@refinedev/core\";\nimport {\n    Row,\n    Col,\n    Layout,\n    Card,\n    Typography,\n    Form,\n    Input,\n    Button,\n    Checkbox,\n} from \"antd\";\nimport { useLogin, useTranslate } from \"@refinedev/core\";\n\nimport {\n    layoutStyles,\n    containerStyles,\n    titleStyles,\n    imageContainer,\n} from \"./styles\";\n\nconst { Text, Title } = Typography;\nexport interface ILoginForm {\n    username: string;\n    password: string;\n    remember: boolean;\n}\n\n/**\n * @deprecated LoginPage is deprecated. Use AuthPage instead. @see {@link https://refine.dev/docs/api-reference/antd/components/antd-auth-page} for more details.\n * **refine** has a default login page form which is served on `/login` route when the `authProvider` configuration is provided.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/components/refine-config/#loginpage} for more details.\n */\nexport const LoginPage: React.FC<LoginPageProps> = () => {\n    const [form] = Form.useForm<ILoginForm>();\n    const translate = useTranslate();\n\n    const authProvider = useActiveAuthProvider();\n    const { mutate: login, isLoading } = useLogin<ILoginForm>({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n\n    const CardTitle = (\n        <Title level={3} style={titleStyles}>\n            {translate(\"pages.login.title\", \"Sign in your account\")}\n        </Title>\n    );\n\n    return (\n        <Layout style={layoutStyles}>\n            <Row\n                justify=\"center\"\n                align=\"middle\"\n                style={{\n                    height: \"100vh\",\n                }}\n            >\n                <Col xs={22}>\n                    <div style={containerStyles}>\n                        <div style={imageContainer}>\n                            <img\n                                src=\"https://refine.ams3.cdn.digitaloceanspaces.com/logo/refine.svg\"\n                                alt=\"Refine Logo\"\n                            />\n                        </div>\n                        <Card title={CardTitle} headStyle={{ borderBottom: 0 }}>\n                            <Form<ILoginForm>\n                                layout=\"vertical\"\n                                form={form}\n                                onFinish={(values) => {\n                                    login(values);\n                                }}\n                                requiredMark={false}\n                                initialValues={{\n                                    remember: false,\n                                }}\n                            >\n                                <Form.Item\n                                    name=\"username\"\n                                    label={translate(\n                                        \"pages.login.username\",\n                                        \"Username\",\n                                    )}\n                                    rules={[{ required: true }]}\n                                >\n                                    <Input\n                                        size=\"large\"\n                                        placeholder={translate(\n                                            \"pages.login.username\",\n                                            \"Username\",\n                                        )}\n                                    />\n                                </Form.Item>\n                                <Form.Item\n                                    name=\"password\"\n                                    label={translate(\n                                        \"pages.login.password\",\n                                        \"Password\",\n                                    )}\n                                    rules={[{ required: true }]}\n                                    style={{ marginBottom: \"12px\" }}\n                                >\n                                    <Input\n                                        type=\"password\"\n                                        placeholder=\"●●●●●●●●\"\n                                        size=\"large\"\n                                    />\n                                </Form.Item>\n                                <div style={{ marginBottom: \"12px\" }}>\n                                    <Form.Item\n                                        name=\"remember\"\n                                        valuePropName=\"checked\"\n                                        noStyle\n                                    >\n                                        <Checkbox\n                                            style={{\n                                                fontSize: \"12px\",\n                                            }}\n                                        >\n                                            {translate(\n                                                \"pages.login.remember\",\n                                                \"Remember me\",\n                                            )}\n                                        </Checkbox>\n                                    </Form.Item>\n\n                                    <a\n                                        style={{\n                                            float: \"right\",\n                                            fontSize: \"12px\",\n                                        }}\n                                        href=\"#\"\n                                    >\n                                        {translate(\n                                            \"pages.login.forgotPassword\",\n                                            \"Forgot password?\",\n                                        )}\n                                    </a>\n                                </div>\n                                <Button\n                                    type=\"primary\"\n                                    size=\"large\"\n                                    htmlType=\"submit\"\n                                    loading={isLoading}\n                                    block\n                                >\n                                    {translate(\"pages.login.signin\", \"Sign in\")}\n                                </Button>\n                            </Form>\n                            <div style={{ marginTop: 8 }}>\n                                <Text style={{ fontSize: 12 }}>\n                                    {translate(\n                                        \"pages.login.noAccount\",\n                                        \"Don’t have an account?\",\n                                    )}{\" \"}\n                                    <a href=\"#\" style={{ fontWeight: \"bold\" }}>\n                                        {translate(\n                                            \"pages.login.signup\",\n                                            \"Sign up\",\n                                        )}\n                                    </a>\n                                </Text>\n                            </div>\n                        </Card>\n                    </div>\n                </Col>\n            </Row>\n        </Layout>\n    );\n};\n","import { CSSProperties } from \"react\";\n\nexport const layoutStyles: CSSProperties = {\n    background: `radial-gradient(50% 50% at 50% 50%, #63386A 0%, #310438 100%)`,\n    backgroundSize: \"cover\",\n};\n\nexport const containerStyles: CSSProperties = {\n    maxWidth: \"408px\",\n    margin: \"auto\",\n};\n\nexport const titleStyles: CSSProperties = {\n    textAlign: \"center\",\n    color: \"#626262\",\n    fontSize: \"30px\",\n    letterSpacing: \"-0.04em\",\n};\n\nexport const imageContainer: CSSProperties = {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginBottom: \"28px\",\n};\n","import * as React from \"react\";\nimport { RefineReadyPageProps } from \"@refinedev/ui-types\";\nimport { Row, Col, Typography, Space, Button } from \"antd\";\nimport { ReadOutlined, FolderOutlined, TeamOutlined } from \"@ant-design/icons\";\n\nconst styles: { [key: string]: React.CSSProperties } = {\n    root: {\n        height: \"100vh\",\n        backgroundImage:\n            \"url('https://refine.ams3.cdn.digitaloceanspaces.com/login-background/background.png')\",\n        backgroundSize: \"cover\",\n        backgroundColor: \"#331049\",\n    },\n    title: {\n        color: \"white\",\n        fontWeight: 800,\n        fontSize: \"64px\",\n        marginBottom: \"8px\",\n    },\n    p1: {\n        color: \"white\",\n        marginBottom: 0,\n        fontSize: \"20px\",\n        fontWeight: \"bold\",\n    },\n    p2: {\n        color: \"white\",\n        fontSize: \"20px\",\n    },\n    code: {\n        backgroundColor: \"white\",\n        color: \"#331049\",\n    },\n};\n\nconst { Title } = Typography;\n\n/**\n * **refine** shows a default ready page on root route when no `resources` is passed to the `<Refine>` component as a property.\n *\n * @deprecated `ReadyPage` is deprecated and will be removed in the next major release.\n */\nexport const ReadyPage: React.FC<RefineReadyPageProps> = () => {\n    return (\n        <Row align=\"middle\" justify=\"center\" style={styles.root}>\n            <Col style={{ textAlign: \"center\" }}>\n                <img\n                    style={{ marginBottom: \"48px\" }}\n                    src=\"https://refine.ams3.cdn.digitaloceanspaces.com/logo/refine.svg\"\n                    alt=\"Refine Logo\"\n                />\n                <Title style={styles.title}>Welcome on board</Title>\n                <p style={styles.p1}>Your configuration is completed.</p>\n                <p style={styles.p2}>\n                    Now you can get started by adding your resources to the{\" \"}\n                    <code style={styles.code}>{`resources`}</code> property of{\" \"}\n                    <code style={styles.code}>{`<Refine>`}</code>\n                </p>\n                <Space\n                    size=\"large\"\n                    wrap\n                    style={{ marginTop: \"70px\", justifyContent: \"center\" }}\n                >\n                    <a\n                        href=\"https://refine.dev\"\n                        target=\"_blank\"\n                        rel=\"noreferrer\"\n                    >\n                        <Button size=\"large\" icon={<ReadOutlined />}>\n                            Documentation\n                        </Button>\n                    </a>\n                    <a\n                        href=\"https://refine.dev/examples\"\n                        target=\"_blank\"\n                        rel=\"noreferrer\"\n                    >\n                        <Button size=\"large\" icon={<FolderOutlined />}>\n                            Examples\n                        </Button>\n                    </a>\n                    <a\n                        href=\"https://discord.gg/refine\"\n                        target=\"_blank\"\n                        rel=\"noreferrer\"\n                    >\n                        <Button size=\"large\" icon={<TeamOutlined />}>\n                            Community\n                        </Button>\n                    </a>\n                </Space>\n            </Col>\n        </Row>\n    );\n};\n","import React from \"react\";\nimport { WelcomePage as WelcomePageFromCore } from \"@refinedev/core\";\n\n/**\n * It is a page that welcomes you after the configuration is completed.\n * @deprecated `WelcomePage` is deprecated. Use `WelcomePage` from `@refinedev/core` instead.\n */\nexport const WelcomePage: React.FC = () => {\n    return <WelcomePageFromCore />;\n};\n","import React from \"react\";\nimport { CardProps, FormProps, LayoutProps } from \"antd\";\nimport { AuthPageProps } from \"@refinedev/core\";\n\nimport {\n    LoginPage,\n    RegisterPage,\n    ForgotPasswordPage,\n    UpdatePasswordPage,\n} from \"./components\";\n\nexport type AuthProps = AuthPageProps<LayoutProps, CardProps, FormProps> & {\n    renderContent?: (\n        content: React.ReactNode,\n        title: React.ReactNode,\n    ) => React.ReactNode;\n    title?: React.ReactNode;\n};\n\n/**\n * **refine** has a default auth page form served on the `/login` route when the `authProvider` configuration is provided.\n *\n * @see {@link https://refine.dev/docs/api-reference/antd/components/antd-auth-page/} for more details.\n */\nexport const AuthPage: React.FC<AuthProps> = (props) => {\n    const { type } = props;\n    const renderView = () => {\n        switch (type) {\n            case \"register\":\n                return <RegisterPage {...props} />;\n            case \"forgotPassword\":\n                return <ForgotPasswordPage {...props} />;\n            case \"updatePassword\":\n                return <UpdatePasswordPage {...props} />;\n            default:\n                return <LoginPage {...props} />;\n        }\n    };\n\n    return <>{renderView()}</>;\n};\n","import React from \"react\";\nimport {\n    LoginPageProps,\n    LoginFormTypes,\n    useLink,\n    useRouterType,\n    useActiveAuthProvider,\n} from \"@refinedev/core\";\nimport {\n    Row,\n    Col,\n    Layout,\n    Card,\n    Typography,\n    Form,\n    Input,\n    Button,\n    Checkbox,\n    CardProps,\n    LayoutProps,\n    Divider,\n    FormProps,\n    theme,\n} from \"antd\";\nimport { useLogin, useTranslate, useRouterContext } from \"@refinedev/core\";\n\nimport {\n    bodyStyles,\n    containerStyles,\n    headStyles,\n    layoutStyles,\n    titleStyles,\n} from \"../styles\";\nimport { ThemedTitle } from \"@components\";\n\nconst { Text, Title } = Typography;\nconst { useToken } = theme;\n\ntype LoginProps = LoginPageProps<LayoutProps, CardProps, FormProps>;\n/**\n * **refine** has a default login page form which is served on `/login` route when the `authProvider` configuration is provided.\n *\n * @see {@link https://refine.dev/docs/ui-frameworks/antd/components/antd-auth-page/#login} for more details.\n */\nexport const LoginPage: React.FC<LoginProps> = ({\n    providers,\n    registerLink,\n    forgotPasswordLink,\n    rememberMe,\n    contentProps,\n    wrapperProps,\n    renderContent,\n    formProps,\n    title,\n}) => {\n    const { token } = useToken();\n    const [form] = Form.useForm<LoginFormTypes>();\n    const translate = useTranslate();\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    const authProvider = useActiveAuthProvider();\n    const { mutate: login, isLoading } = useLogin<LoginFormTypes>({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n\n    const PageTitle =\n        title === false ? null : (\n            <div\n                style={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    marginBottom: \"32px\",\n                    fontSize: \"20px\",\n                }}\n            >\n                {title ?? <ThemedTitle collapsed={false} />}\n            </div>\n        );\n\n    const CardTitle = (\n        <Title\n            level={3}\n            style={{\n                color: token.colorPrimaryTextHover,\n                ...titleStyles,\n            }}\n        >\n            {translate(\"pages.login.title\", \"Sign in to your account\")}\n        </Title>\n    );\n\n    const renderProviders = () => {\n        if (providers && providers.length > 0) {\n            return (\n                <>\n                    {providers.map((provider) => {\n                        return (\n                            <Button\n                                key={provider.name}\n                                type=\"default\"\n                                block\n                                icon={provider.icon}\n                                style={{\n                                    display: \"flex\",\n                                    justifyContent: \"center\",\n                                    alignItems: \"center\",\n                                    width: \"100%\",\n                                    marginBottom: \"8px\",\n                                }}\n                                onClick={() =>\n                                    login({\n                                        providerName: provider.name,\n                                    })\n                                }\n                            >\n                                {provider.label}\n                            </Button>\n                        );\n                    })}\n                    <Divider>\n                        <Text\n                            style={{\n                                color: token.colorTextLabel,\n                            }}\n                        >\n                            {translate(\"pages.login.divider\", \"or\")}\n                        </Text>\n                    </Divider>\n                </>\n            );\n        }\n        return null;\n    };\n\n    const CardContent = (\n        <Card\n            title={CardTitle}\n            headStyle={headStyles}\n            bodyStyle={bodyStyles}\n            style={{\n                ...containerStyles,\n                backgroundColor: token.colorBgElevated,\n            }}\n            {...(contentProps ?? {})}\n        >\n            {renderProviders()}\n            <Form<LoginFormTypes>\n                layout=\"vertical\"\n                form={form}\n                onFinish={(values) => login(values)}\n                requiredMark={false}\n                initialValues={{\n                    remember: false,\n                }}\n                {...formProps}\n            >\n                <Form.Item\n                    name=\"email\"\n                    label={translate(\"pages.login.fields.email\", \"Email\")}\n                    rules={[\n                        { required: true },\n                        {\n                            type: \"email\",\n                            message: translate(\n                                \"pages.login.errors.validEmail\",\n                                \"Invalid email address\",\n                            ),\n                        },\n                    ]}\n                >\n                    <Input\n                        size=\"large\"\n                        placeholder={translate(\n                            \"pages.login.fields.email\",\n                            \"Email\",\n                        )}\n                    />\n                </Form.Item>\n                <Form.Item\n                    name=\"password\"\n                    label={translate(\"pages.login.fields.password\", \"Password\")}\n                    rules={[{ required: true }]}\n                >\n                    <Input\n                        type=\"password\"\n                        placeholder=\"●●●●●●●●\"\n                        size=\"large\"\n                    />\n                </Form.Item>\n                <div\n                    style={{\n                        display: \"flex\",\n                        justifyContent: \"space-between\",\n                        marginBottom: \"24px\",\n                    }}\n                >\n                    {rememberMe ?? (\n                        <Form.Item\n                            name=\"remember\"\n                            valuePropName=\"checked\"\n                            noStyle\n                        >\n                            <Checkbox\n                                style={{\n                                    fontSize: \"12px\",\n                                }}\n                            >\n                                {translate(\n                                    \"pages.login.buttons.rememberMe\",\n                                    \"Remember me\",\n                                )}\n                            </Checkbox>\n                        </Form.Item>\n                    )}\n                    {forgotPasswordLink ?? (\n                        <ActiveLink\n                            style={{\n                                color: token.colorPrimaryTextHover,\n                                fontSize: \"12px\",\n                                marginLeft: \"auto\",\n                            }}\n                            to=\"/forgot-password\"\n                        >\n                            {translate(\n                                \"pages.login.buttons.forgotPassword\",\n                                \"Forgot password?\",\n                            )}\n                        </ActiveLink>\n                    )}\n                </div>\n                <Form.Item>\n                    <Button\n                        type=\"primary\"\n                        size=\"large\"\n                        htmlType=\"submit\"\n                        loading={isLoading}\n                        block\n                    >\n                        {translate(\"pages.login.signin\", \"Sign in\")}\n                    </Button>\n                </Form.Item>\n            </Form>\n            <div style={{ marginTop: 8 }}>\n                {registerLink ?? (\n                    <Text style={{ fontSize: 12 }}>\n                        {translate(\n                            \"pages.login.buttons.noAccount\",\n                            \"Don’t have an account?\",\n                        )}{\" \"}\n                        <ActiveLink\n                            to=\"/register\"\n                            style={{\n                                fontWeight: \"bold\",\n                                color: token.colorPrimaryTextHover,\n                            }}\n                        >\n                            {translate(\"pages.login.signup\", \"Sign up\")}\n                        </ActiveLink>\n                    </Text>\n                )}\n            </div>\n        </Card>\n    );\n\n    return (\n        <Layout style={layoutStyles} {...(wrapperProps ?? {})}>\n            <Row\n                justify=\"center\"\n                align=\"middle\"\n                style={{\n                    height: \"100vh\",\n                }}\n            >\n                <Col xs={22}>\n                    {renderContent ? (\n                        renderContent(CardContent, PageTitle)\n                    ) : (\n                        <>\n                            {PageTitle}\n                            {CardContent}\n                        </>\n                    )}\n                </Col>\n            </Row>\n        </Layout>\n    );\n};\n","import { CSSProperties } from \"react\";\n\nexport const layoutStyles: CSSProperties = {};\n\nexport const containerStyles: CSSProperties = {\n    maxWidth: \"400px\",\n    margin: \"auto\",\n    padding: \"32px\",\n    boxShadow:\n        \"0px 2px 4px rgba(0, 0, 0, 0.02), 0px 1px 6px -1px rgba(0, 0, 0, 0.02), 0px 1px 2px rgba(0, 0, 0, 0.03)\",\n};\n\nexport const headStyles: CSSProperties = {\n    borderBottom: 0,\n    padding: 0,\n};\n\nexport const bodyStyles: CSSProperties = { padding: 0, marginTop: \"32px\" };\n\nexport const titleStyles: CSSProperties = {\n    textAlign: \"center\",\n    marginBottom: 0,\n    fontSize: \"24px\",\n    lineHeight: \"32px\",\n    fontWeight: 700,\n    overflowWrap: \"break-word\",\n    hyphens: \"manual\",\n    textOverflow: \"unset\",\n    whiteSpace: \"pre-wrap\",\n};\n","import React from \"react\";\nimport {\n    RegisterPageProps,\n    RegisterFormTypes,\n    useRouterType,\n    useLink,\n    useActiveAuthProvider,\n} from \"@refinedev/core\";\nimport {\n    Row,\n    Col,\n    Layout,\n    Card,\n    Typography,\n    Form,\n    Input,\n    Button,\n    LayoutProps,\n    CardProps,\n    FormProps,\n    Divider,\n    theme,\n} from \"antd\";\nimport { useTranslate, useRouterContext, useRegister } from \"@refinedev/core\";\n\nimport {\n    layoutStyles,\n    containerStyles,\n    titleStyles,\n    headStyles,\n    bodyStyles,\n} from \"../styles\";\nimport { ThemedTitle } from \"@components\";\n\nconst { Text, Title } = Typography;\nconst { useToken } = theme;\n\ntype RegisterProps = RegisterPageProps<LayoutProps, CardProps, FormProps>;\n/**\n * **refine** has register page form which is served on `/register` route when the `authProvider` configuration is provided.\n *\n * @see {@link https://refine.dev/docs/ui-frameworks/antd/components/antd-auth-page/#register} for more details.\n */\nexport const RegisterPage: React.FC<RegisterProps> = ({\n    providers,\n    loginLink,\n    wrapperProps,\n    contentProps,\n    renderContent,\n    formProps,\n    title,\n}) => {\n    const { token } = useToken();\n    const [form] = Form.useForm<RegisterFormTypes>();\n    const translate = useTranslate();\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    const authProvider = useActiveAuthProvider();\n    const { mutate: register, isLoading } = useRegister<RegisterFormTypes>({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n\n    const PageTitle =\n        title === false ? null : (\n            <div\n                style={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    marginBottom: \"32px\",\n                    fontSize: \"20px\",\n                }}\n            >\n                {title ?? <ThemedTitle collapsed={false} />}\n            </div>\n        );\n\n    const CardTitle = (\n        <Title\n            level={3}\n            style={{\n                color: token.colorPrimaryTextHover,\n                ...titleStyles,\n            }}\n        >\n            {translate(\"pages.register.title\", \"Sign up for your account\")}\n        </Title>\n    );\n\n    const renderProviders = () => {\n        if (providers && providers.length > 0) {\n            return (\n                <>\n                    {providers.map((provider) => {\n                        return (\n                            <Button\n                                key={provider.name}\n                                type=\"default\"\n                                block\n                                icon={provider.icon}\n                                style={{\n                                    display: \"flex\",\n                                    justifyContent: \"center\",\n                                    alignItems: \"center\",\n                                    width: \"100%\",\n                                    marginBottom: \"8px\",\n                                }}\n                                onClick={() =>\n                                    register({\n                                        providerName: provider.name,\n                                    })\n                                }\n                            >\n                                {provider.label}\n                            </Button>\n                        );\n                    })}\n                    <Divider>\n                        <Text\n                            style={{\n                                color: token.colorTextLabel,\n                            }}\n                        >\n                            {translate(\"pages.login.divider\", \"or\")}\n                        </Text>\n                    </Divider>\n                </>\n            );\n        }\n        return null;\n    };\n\n    const CardContent = (\n        <Card\n            title={CardTitle}\n            headStyle={headStyles}\n            bodyStyle={bodyStyles}\n            style={{\n                ...containerStyles,\n                backgroundColor: token.colorBgElevated,\n            }}\n            {...(contentProps ?? {})}\n        >\n            {renderProviders()}\n            <Form<RegisterFormTypes>\n                layout=\"vertical\"\n                form={form}\n                onFinish={(values) => register(values)}\n                requiredMark={false}\n                {...formProps}\n            >\n                <Form.Item\n                    name=\"email\"\n                    label={translate(\"pages.register.email\", \"Email\")}\n                    rules={[\n                        { required: true },\n                        {\n                            type: \"email\",\n                            message: translate(\n                                \"pages.register.errors.validEmail\",\n                                \"Invalid email address\",\n                            ),\n                        },\n                    ]}\n                >\n                    <Input\n                        size=\"large\"\n                        placeholder={translate(\n                            \"pages.register.fields.email\",\n                            \"Email\",\n                        )}\n                    />\n                </Form.Item>\n                <Form.Item\n                    name=\"password\"\n                    label={translate(\n                        \"pages.register.fields.password\",\n                        \"Password\",\n                    )}\n                    rules={[{ required: true }]}\n                >\n                    <Input\n                        type=\"password\"\n                        placeholder=\"●●●●●●●●\"\n                        size=\"large\"\n                    />\n                </Form.Item>\n                <div\n                    style={{\n                        display: \"flex\",\n                        justifyContent: \"space-between\",\n                        marginBottom: \"24px\",\n                    }}\n                >\n                    {loginLink ?? (\n                        <Text\n                            style={{\n                                fontSize: 12,\n                                marginLeft: \"auto\",\n                            }}\n                        >\n                            {translate(\n                                \"pages.login.buttons.haveAccount\",\n                                \"Have an account?\",\n                            )}{\" \"}\n                            <ActiveLink\n                                style={{\n                                    fontWeight: \"bold\",\n                                    color: token.colorPrimaryTextHover,\n                                }}\n                                to=\"/login\"\n                            >\n                                {translate(\"pages.login.signin\", \"Sign in\")}\n                            </ActiveLink>\n                        </Text>\n                    )}\n                </div>\n\n                <Form.Item\n                    style={{\n                        marginBottom: 0,\n                    }}\n                >\n                    <Button\n                        type=\"primary\"\n                        size=\"large\"\n                        htmlType=\"submit\"\n                        loading={isLoading}\n                        block\n                    >\n                        {translate(\"pages.register.buttons.submit\", \"Sign up\")}\n                    </Button>\n                </Form.Item>\n            </Form>\n        </Card>\n    );\n\n    return (\n        <Layout style={layoutStyles} {...(wrapperProps ?? {})}>\n            <Row\n                justify=\"center\"\n                align=\"middle\"\n                style={{\n                    height: \"100vh\",\n                }}\n            >\n                <Col xs={22}>\n                    {renderContent ? (\n                        renderContent(CardContent, PageTitle)\n                    ) : (\n                        <>\n                            {PageTitle}\n                            {CardContent}\n                        </>\n                    )}\n                </Col>\n            </Row>\n        </Layout>\n    );\n};\n","import React from \"react\";\nimport {\n    ForgotPasswordPageProps,\n    ForgotPasswordFormTypes,\n    useRouterType,\n    useLink,\n} from \"@refinedev/core\";\nimport {\n    Row,\n    Col,\n    Layout,\n    Card,\n    Typography,\n    Form,\n    Input,\n    Button,\n    LayoutProps,\n    CardProps,\n    FormProps,\n    theme,\n} from \"antd\";\nimport {\n    useTranslate,\n    useRouterContext,\n    useForgotPassword,\n} from \"@refinedev/core\";\n\nimport {\n    layoutStyles,\n    containerStyles,\n    titleStyles,\n    headStyles,\n    bodyStyles,\n} from \"../styles\";\nimport { ThemedTitle } from \"@components\";\n\ntype ResetPassworProps = ForgotPasswordPageProps<\n    LayoutProps,\n    CardProps,\n    FormProps\n>;\n\nconst { Text, Title } = Typography;\nconst { useToken } = theme;\n\n/**\n * **refine** has forgot password page form which is served on `/forgot-password` route when the `authProvider` configuration is provided.\n *\n * @see {@link https://refine.dev/docs/ui-frameworks/antd/components/antd-auth-page/#forgot-password} for more details.\n */\nexport const ForgotPasswordPage: React.FC<ResetPassworProps> = ({\n    loginLink,\n    wrapperProps,\n    contentProps,\n    renderContent,\n    formProps,\n    title,\n}) => {\n    const { token } = useToken();\n    const [form] = Form.useForm<ForgotPasswordFormTypes>();\n    const translate = useTranslate();\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    const { mutate: forgotPassword, isLoading } =\n        useForgotPassword<ForgotPasswordFormTypes>();\n\n    const PageTitle =\n        title === false ? null : (\n            <div\n                style={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    marginBottom: \"32px\",\n                    fontSize: \"20px\",\n                }}\n            >\n                {title ?? <ThemedTitle collapsed={false} />}\n            </div>\n        );\n\n    const CardTitle = (\n        <Title\n            level={3}\n            style={{\n                color: token.colorPrimaryTextHover,\n                ...titleStyles,\n            }}\n        >\n            {translate(\"pages.forgotPassword.title\", \"Forgot your password?\")}\n        </Title>\n    );\n    const CardContent = (\n        <Card\n            title={CardTitle}\n            headStyle={headStyles}\n            bodyStyle={bodyStyles}\n            style={{\n                ...containerStyles,\n                backgroundColor: token.colorBgElevated,\n            }}\n            {...(contentProps ?? {})}\n        >\n            <Form<ForgotPasswordFormTypes>\n                layout=\"vertical\"\n                form={form}\n                onFinish={(values) => forgotPassword(values)}\n                requiredMark={false}\n                {...formProps}\n            >\n                <Form.Item\n                    name=\"email\"\n                    label={translate(\n                        \"pages.forgotPassword.fields.email\",\n                        \"Email\",\n                    )}\n                    rules={[\n                        { required: true },\n                        {\n                            type: \"email\",\n                            message: translate(\n                                \"pages.forgotPassword.errors.validEmail\",\n                                \"Invalid email address\",\n                            ),\n                        },\n                    ]}\n                >\n                    <Input\n                        type=\"email\"\n                        size=\"large\"\n                        placeholder={translate(\n                            \"pages.forgotPassword.fields.email\",\n                            \"Email\",\n                        )}\n                    />\n                </Form.Item>\n                <div\n                    style={{\n                        display: \"flex\",\n                        justifyContent: \"space-between\",\n                    }}\n                >\n                    {loginLink ?? (\n                        <Text\n                            style={{\n                                fontSize: 12,\n                                marginLeft: \"auto\",\n                            }}\n                        >\n                            {translate(\n                                \"pages.register.buttons.haveAccount\",\n                                \"Have an account? \",\n                            )}{\" \"}\n                            <ActiveLink\n                                style={{\n                                    fontWeight: \"bold\",\n                                    color: token.colorPrimaryTextHover,\n                                }}\n                                to=\"/login\"\n                            >\n                                {translate(\"pages.login.signin\", \"Sign in\")}\n                            </ActiveLink>\n                        </Text>\n                    )}\n                </div>\n                <Form.Item\n                    style={{\n                        marginTop: \"24px\",\n                        marginBottom: 0,\n                    }}\n                >\n                    <Button\n                        type=\"primary\"\n                        size=\"large\"\n                        htmlType=\"submit\"\n                        loading={isLoading}\n                        block\n                    >\n                        {translate(\n                            \"pages.forgotPassword.buttons.submit\",\n                            \"Send reset instructions\",\n                        )}\n                    </Button>\n                </Form.Item>\n            </Form>\n        </Card>\n    );\n\n    return (\n        <Layout style={layoutStyles} {...(wrapperProps ?? {})}>\n            <Row\n                justify=\"center\"\n                align=\"middle\"\n                style={{\n                    height: \"100vh\",\n                }}\n            >\n                <Col xs={22}>\n                    {renderContent ? (\n                        renderContent(CardContent, PageTitle)\n                    ) : (\n                        <>\n                            {PageTitle}\n                            {CardContent}\n                        </>\n                    )}\n                </Col>\n            </Row>\n        </Layout>\n    );\n};\n","import React from \"react\";\nimport {\n    UpdatePasswordPageProps,\n    UpdatePasswordFormTypes,\n    useActiveAuthProvider,\n} from \"@refinedev/core\";\nimport {\n    Row,\n    Col,\n    Layout,\n    Card,\n    Typography,\n    Form,\n    Input,\n    Button,\n    LayoutProps,\n    CardProps,\n    FormProps,\n    theme,\n} from \"antd\";\nimport { useTranslate, useUpdatePassword } from \"@refinedev/core\";\n\nimport {\n    layoutStyles,\n    containerStyles,\n    titleStyles,\n    headStyles,\n    bodyStyles,\n} from \"../styles\";\nimport { ThemedTitle } from \"@components\";\n\nconst { Title } = Typography;\nconst { useToken } = theme;\n\ntype UpdatePasswordProps = UpdatePasswordPageProps<\n    LayoutProps,\n    CardProps,\n    FormProps\n>;\n\n/**\n * **refine** has update password page form which is served on `/update-password` route when the `authProvider` configuration is provided.\n *\n * @see {@link https://refine.dev/docs/ui-frameworks/antd/components/antd-auth-page/#update-password} for more details.\n */\nexport const UpdatePasswordPage: React.FC<UpdatePasswordProps> = ({\n    wrapperProps,\n    contentProps,\n    renderContent,\n    formProps,\n    title,\n}) => {\n    const { token } = useToken();\n    const [form] = Form.useForm<UpdatePasswordFormTypes>();\n    const translate = useTranslate();\n    const authProvider = useActiveAuthProvider();\n    const { mutate: updatePassword, isLoading } =\n        useUpdatePassword<UpdatePasswordFormTypes>({\n            v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n        });\n\n    const PageTitle =\n        title === false ? null : (\n            <div\n                style={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    marginBottom: \"32px\",\n                    fontSize: \"20px\",\n                }}\n            >\n                {title ?? <ThemedTitle collapsed={false} />}\n            </div>\n        );\n\n    const CardTitle = (\n        <Title\n            level={3}\n            style={{\n                color: token.colorPrimaryTextHover,\n                ...titleStyles,\n            }}\n        >\n            {translate(\"pages.updatePassword.title\", \"Set New Password\")}\n        </Title>\n    );\n\n    const CardContent = (\n        <Card\n            title={CardTitle}\n            headStyle={headStyles}\n            bodyStyle={bodyStyles}\n            style={{\n                ...containerStyles,\n                backgroundColor: token.colorBgElevated,\n            }}\n            {...(contentProps ?? {})}\n        >\n            <Form<UpdatePasswordFormTypes>\n                layout=\"vertical\"\n                form={form}\n                onFinish={(values) => updatePassword(values)}\n                requiredMark={false}\n                {...formProps}\n            >\n                <Form.Item\n                    name=\"password\"\n                    label={translate(\n                        \"pages.updatePassword.fields.password\",\n                        \"New Password\",\n                    )}\n                    rules={[{ required: true }]}\n                    style={{ marginBottom: \"12px\" }}\n                >\n                    <Input\n                        type=\"password\"\n                        placeholder=\"●●●●●●●●\"\n                        size=\"large\"\n                    />\n                </Form.Item>\n                <Form.Item\n                    name=\"confirmPassword\"\n                    label={translate(\n                        \"pages.updatePassword.fields.confirmPassword\",\n                        \"Confirm New Password\",\n                    )}\n                    hasFeedback\n                    dependencies={[\"password\"]}\n                    rules={[\n                        {\n                            required: true,\n                        },\n                        ({ getFieldValue }) => ({\n                            validator(_, value) {\n                                if (\n                                    !value ||\n                                    getFieldValue(\"password\") === value\n                                ) {\n                                    return Promise.resolve();\n                                }\n                                return Promise.reject(\n                                    new Error(\n                                        translate(\n                                            \"pages.updatePassword.errors.confirmPasswordNotMatch\",\n                                            \"Passwords do not match\",\n                                        ),\n                                    ),\n                                );\n                            },\n                        }),\n                    ]}\n                >\n                    <Input\n                        type=\"password\"\n                        placeholder=\"●●●●●●●●\"\n                        size=\"large\"\n                    />\n                </Form.Item>\n                <Form.Item\n                    style={{\n                        marginBottom: 0,\n                    }}\n                >\n                    <Button\n                        type=\"primary\"\n                        size=\"large\"\n                        htmlType=\"submit\"\n                        loading={isLoading}\n                        block\n                    >\n                        {translate(\n                            \"pages.updatePassword.buttons.submit\",\n                            \"Update\",\n                        )}\n                    </Button>\n                </Form.Item>\n            </Form>\n        </Card>\n    );\n\n    return (\n        <Layout style={layoutStyles} {...(wrapperProps ?? {})}>\n            <Row\n                justify=\"center\"\n                align=\"middle\"\n                style={{\n                    height: \"100vh\",\n                }}\n            >\n                <Col xs={22}>\n                    {renderContent ? (\n                        renderContent(CardContent, PageTitle)\n                    ) : (\n                        <>\n                            {PageTitle}\n                            {CardContent}\n                        </>\n                    )}\n                </Col>\n            </Row>\n        </Layout>\n    );\n};\n","import React from \"react\";\nimport {\n    useBreadcrumb,\n    useLink,\n    useRefineContext,\n    useRouterContext,\n    useRouterType,\n    useResource,\n    matchResourceFromRoute,\n} from \"@refinedev/core\";\nimport { RefineBreadcrumbProps } from \"@refinedev/ui-types\";\n\nimport {\n    Breadcrumb as AntdBreadcrumb,\n    BreadcrumbProps as AntdBreadcrumbProps,\n} from \"antd\";\nimport { HomeOutlined } from \"@ant-design/icons\";\n\nexport type BreadcrumbProps = RefineBreadcrumbProps<AntdBreadcrumbProps>;\n\nexport const Breadcrumb: React.FC<BreadcrumbProps> = ({\n    breadcrumbProps,\n    showHome = true,\n    hideIcons = false,\n    meta,\n}) => {\n    const routerType = useRouterType();\n    const { breadcrumbs } = useBreadcrumb({\n        meta,\n    });\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n    const { hasDashboard } = useRefineContext();\n\n    const { resources } = useResource();\n\n    const rootRouteResource = matchResourceFromRoute(\"/\", resources);\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    if (breadcrumbs.length === 1) {\n        return null;\n    }\n\n    const breadCrumbItems = breadcrumbs.map(({ label, icon, href }) => ({\n        key: `breadcrumb-item-${label}`,\n        title: (\n            <div\n                style={{\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                    gap: 4,\n                }}\n            >\n                {!hideIcons && icon}\n                {href ? (\n                    <ActiveLink to={href}>{label}</ActiveLink>\n                ) : (\n                    <span>{label}</span>\n                )}\n            </div>\n        ),\n    }));\n\n    const getBreadcrumbItems = () => {\n        if (showHome && (hasDashboard || rootRouteResource.found)) {\n            return [\n                {\n                    key: \"breadcrumb-item-home\",\n                    title: (\n                        <ActiveLink to=\"/\">\n                            {rootRouteResource?.resource?.meta?.icon ?? (\n                                <HomeOutlined />\n                            )}\n                        </ActiveLink>\n                    ),\n                },\n                ...breadCrumbItems,\n            ];\n        }\n\n        return breadCrumbItems;\n    };\n\n    return <AntdBreadcrumb items={getBreadcrumbItems()} {...breadcrumbProps} />;\n};\n","import React, { FC } from \"react\";\nimport {\n    PageHeader as AntdPageHeader,\n    PageHeaderProps as AntdPageHeaderProps,\n} from \"@ant-design/pro-layout\";\nimport { Button, Typography } from \"antd\";\nimport { ArrowLeftOutlined } from \"@ant-design/icons\";\nimport { RefinePageHeaderClassNames } from \"@refinedev/ui-types\";\n\nexport type PageHeaderProps = AntdPageHeaderProps;\n\nexport const PageHeader: FC<AntdPageHeaderProps> = ({ children, ...props }) => {\n    const backIcon =\n        typeof props.backIcon === \"undefined\" ? (\n            <Button type=\"text\" icon={<ArrowLeftOutlined />} />\n        ) : (\n            props.backIcon\n        );\n\n    const title =\n        typeof props.title === \"string\" ? (\n            <Typography.Title\n                className={RefinePageHeaderClassNames.Title}\n                level={4}\n                style={{ marginBottom: 0 }}\n            >\n                {props.title}\n            </Typography.Title>\n        ) : (\n            props.title\n        );\n\n    const subtitle =\n        typeof props.title === \"string\" ? (\n            <Typography.Title\n                className={RefinePageHeaderClassNames.SubTitle}\n                level={5}\n                type=\"secondary\"\n                style={{ marginBottom: 0 }}\n            >\n                {props.subTitle}\n            </Typography.Title>\n        ) : (\n            props.subTitle\n        );\n\n    return (\n        <AntdPageHeader\n            {...props}\n            backIcon={backIcon}\n            title={title}\n            subTitle={subtitle}\n            style={{ padding: 0, ...props.style }}\n        >\n            {children}\n        </AntdPageHeader>\n    );\n};\n","import React from \"react\";\nimport {\n    AutoSaveIndicatorProps,\n    useTranslate,\n    AutoSaveIndicator as AutoSaveIndicatorCore,\n} from \"@refinedev/core\";\nimport { Typography, theme } from \"antd\";\nimport {\n    EllipsisOutlined,\n    SyncOutlined,\n    CheckCircleOutlined,\n    ExclamationCircleOutlined,\n} from \"@ant-design/icons\";\n\nexport const AutoSaveIndicator: React.FC<AutoSaveIndicatorProps> = ({\n    status,\n    elements: {\n        success = (\n            <Message\n                key=\"autoSave.success\"\n                defaultMessage=\"saved\"\n                icon={<CheckCircleOutlined />}\n            />\n        ),\n        error = (\n            <Message\n                key=\"autoSave.error\"\n                defaultMessage=\"auto save failure\"\n                icon={<ExclamationCircleOutlined />}\n            />\n        ),\n        loading = (\n            <Message\n                key=\"autoSave.loading\"\n                defaultMessage=\"saving...\"\n                icon={<SyncOutlined />}\n            />\n        ),\n        idle = (\n            <Message\n                key=\"autoSave.idle\"\n                defaultMessage=\"waiting for changes\"\n                icon={<EllipsisOutlined />}\n            />\n        ),\n    } = {},\n}) => {\n    return (\n        <AutoSaveIndicatorCore\n            status={status}\n            elements={{\n                success,\n                error,\n                loading,\n                idle,\n            }}\n        />\n    );\n};\n\nconst Message = ({\n    key,\n    defaultMessage,\n    icon,\n}: {\n    key: string;\n    defaultMessage: string;\n    icon: React.ReactNode;\n}) => {\n    const translate = useTranslate();\n    const { useToken } = theme;\n    const { token } = useToken();\n\n    return (\n        <Typography.Text\n            style={{\n                marginRight: 5,\n                color: token.colorTextTertiary,\n                fontSize: \".8rem\",\n            }}\n        >\n            {translate(key, defaultMessage)}\n            <span style={{ marginLeft: \".2rem\" }}>{icon}</span>\n        </Typography.Text>\n    );\n};\n","import type { UploadFile, UploadChangeParam } from \"antd/lib/upload/interface\";\n\nexport const getValueFromEvent = (event: UploadChangeParam): UploadFile[] => {\n    const { fileList } = event;\n\n    return [...fileList];\n};\n\nexport function file2Base64(file: UploadFile): Promise<string> {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n\n        const resultHandler = () => {\n            if (reader.result) {\n                reader.removeEventListener(\"load\", resultHandler, false);\n\n                resolve(reader.result as string);\n            }\n        };\n\n        reader.addEventListener(\"load\", resultHandler, false);\n\n        reader.readAsDataURL(file.originFileObj as Blob);\n        reader.onerror = (error) => {\n            reader.removeEventListener(\"load\", resultHandler, false);\n            return reject(error);\n        };\n    });\n}\n","import { ThemeConfig } from \"antd\";\n\ntype ThemeNames =\n    | \"Blue\"\n    | \"Purple\"\n    | \"Magenta\"\n    | \"Red\"\n    | \"Orange\"\n    | \"Yellow\"\n    | \"Green\";\n\ntype RefineThemes = Record<ThemeNames, ThemeConfig>;\n\nexport const RefineThemes: RefineThemes = {\n    Blue: {\n        token: {\n            colorPrimary: \"#1677FF\",\n        },\n    },\n    Purple: {\n        token: {\n            colorPrimary: \"#722ED1\",\n        },\n    },\n    Magenta: {\n        token: {\n            colorPrimary: \"#EB2F96\",\n        },\n    },\n    Red: {\n        token: {\n            colorPrimary: \"#F5222D\",\n        },\n    },\n    Orange: {\n        token: {\n            colorPrimary: \"#FA541C\",\n        },\n    },\n    Yellow: {\n        token: {\n            colorPrimary: \"#FAAD14\",\n        },\n    },\n    Green: {\n        token: {\n            colorPrimary: \"#52C41A\",\n        },\n    },\n};\n"],"mappings":"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","names":["src_exports","__export","DevToolsContext","DevToolsContextProvider","DevtoolsEvent","hooksByScope","receive","scopes","send","module","__toCommonJS","acc","hook","scope","import_react","A","ws","event","payload","resolve","listener","__name","callback","e","receivedEvent","r","React","__devtools","port","children","values","setValues","setWs","wsInstance","unsubscribe","data","v","contextValues","src_exports","__export","getTrace","getXRay","useQuerySubscription","module","__toCommonJS","import_error_stack_parser","E","unrelatedFunctionName","cleanStack","stack","firstUnrelatedIndex","frame","REFINE_PACKAGE_FILEPATH_REGEXP","isRefineStack","filename","getPackageNameFromFilename","_a","match","name","error","g","ErrorStackParser","trace","import_devtools_shared","getResourcePath","__name","hookName","legacyKey","m","import_react","src_exports","__export","AccessControlContext","AuthPage","Authenticated","AutoSaveIndicator","CanAccess","ErrorComponent","GitHubBanner","KeyBuilder","LayoutWrapper","LoginPage","ReadyPage","Refine","ResourceContext","RouteChangeHandler","TranslationContext","UndoableQueue","WelcomePage","createTreeView","file2Base64","flattenObjectKeys","generateDefaultDocumentTitle","getDefaultFilter","getDefaultSortOrder","getNextPageParam","getPreviousPageParam","handleUseParams","importCSVMapper","keys","legacyResourceTransform","matchResourceFromRoute","parseTableParams","parseTableParamsFromQuery","pickDataProvider","pickNotDeprecated","propertyPathToArray","queryKeys","routeGenerator","setInitialFilters","setInitialSorters","stringifyTableParams","unionFilters","unionSorters","useActiveAuthProvider","useApiUrl","useAuthenticated","useBack","useBreadcrumb","useCan","useCanWithoutCache","useCancelNotification","useCheckError","useCreate","useCreateMany","useCustom","useCustomMutation","useDataProvider","useDelete","useDeleteMany","useExport","useForgotPassword","useForm","useGetIdentity","useGetLocale","useGetToPath","useGo","useHandleNotification","useImport","useInfiniteList","useInvalidate","useIsAuthenticated","useIsExistAuthentication","useLink","useList","useLiveMode","useLoadingOvertime","useLog","useLogList","useLogin","useLogout","useMany","useMenu","useMeta","useModal","useMutationMode","useNavigation","useNotification","useOnError","useOne","useParse","useParsed","usePermissions","usePublish","useRedirectionAfterSubmission","useRefineContext","useRegister","useResource","useResourceSubscription","useResourceWithRoute","useRouterContext","useRouterType","useSelect","useSetLocale","useShow","useSubscription","useSyncWithLocation","useTable","useTitle","useToPath","useTranslate","useUpdate","useUpdateMany","useUpdatePassword","useUserFriendlyName","useWarnAboutChange","userFriendlyResourceName","module","__toCommonJS","import_react","B","import_react_query","import_devtools_internal","import_qs","import_unionWith","import_differenceWith","import_warn_once","userFriendlySecond","__name","miliseconds","import_zip","import_fromPairs","data","mapData","item","headers","body","entry","Ws","fromPairs","$s","zip","index","array","import_pluralize","resource","type","humanizeResource","humanizeString","So","pluralize","params","args","arg","arrayFindIndex","slice","sliceItem","sliceIndex","convertToLegacy","segments","newSegments","newParams","BaseKeyBuilder","legacy","ParamsKeyBuilder","paramsValue","DataIdRequiringKeyBuilder","idValue","DataIdsRequiringKeyBuilder","idsValue","el","DataResourceKeyBuilder","actionType","DataKeyBuilder","resourceName","mutationName","AuthKeyBuilder","AccessResourceKeyBuilder","AccessKeyBuilder","AuditActionKeyBuilder","AuditKeyBuilder","name","dataProviderName","meta","metaData","providerName","config","ids","id","queryKeysReplacement","preferLegacyKeys","hasPermission","permissions","action","i","isParameter","segment","splitToSegments","path","isSegmentCountsSame","route","resourceRoute","routeSegments","resourceRouteSegments","removeLeadingTrailingSlashes","checkBySegments","stdRoute","stdResourceRoute","getDefaultActionPath","parentPrefix","cleanParentPrefix","getParentResource","resources","_a","_b","parentName","getParentPrefixForResource","parents","parent","v","getActionRoutesFromResource","actions","actionList","pickMatchedRoute","routes","sanitizedRoutes","segmentsCount","eligibleRoutes","nonParametrizedRoutes","allFound","actionRoute","mostEligible","resourcesFromProps","tree","resourcesRouteObject","resourcesNameObject","child","text","DefaultLayout","children","Xs","React","defaultRefineOptions","No","RefineContext","Ko","RefineContextProvider","hasDashboard","mutationMode","warnWhenUnsavedChanges","syncWithLocation","undoableTimeout","DashboardPage","Title","Layout","Header","Sider","Footer","OffLayoutArea","catchAll","liveMode","onLiveEvent","options","handleRefineOptions","disableTelemetry","reactQueryClientConfig","reactQueryDevtoolConfig","_c","_d","_e","_f","_g","_h","optionsWithDefaults","disableTelemetryWithDefault","reactQueryWithDefaults","redirectPage","redirectFromProps","redirectOptions","sequentialPromises","promises","onEachResolve","onEachReject","results","promise","result","error","pickResource","identifier","r","handleMultiple","res","lastPage","pagination","cursor","current","pageSize","totalPages","_resources","pickRouteParams","s","prepareRouteParams","routeParams","acc","key","value","composeRoute","designatedRoute","resourceMeta","parsed","preparedRouteParams","match","fromParams","LegacyAuthContext","ht","LegacyAuthContextProvider","isProvided","authOperations","replace","loginFunc","registerFunc","logoutFunc","checkAuthFunc","AuthBindingsContext","AuthBindingsContextProvider","authBindings","handleLogin","handleRegister","handleLogout","handleCheck","handleForgotPassword","handleUpdatePassword","useLegacyAuthContext","useAuthBindingsContext","legacyAuthProvider","authProvider","handlePaginationParams","hasPagination","configPagination","hasPaginationString","mode","useMediaQuery","query","matches","setMatches","$r","media","listener","safeTranslate","translate","defaultMessage","translated","actionPrefixMatcher","resourceNameFallback","resourceNameWithFallback","defaultTitle","suffix","autoGeneratedTitle","on","UnsavedWarnContext","ir","UnsavedWarnContextProvider","warnWhen","setWarnWhen","zo","nn","an","cn","textTransformers","humanizeName","isNested","obj","isArray","prefix","currentPrefix","propertyPath","url","sorter","sorters","filters","_r","qs","rest","compareFilters","left","right","compareSorters","permanentFilter","newFilters","prevFilters","f","pn","warnOnce","_o","unionWith","crudFilter","permanentSorter","newSorters","crudSorter","defaultFilter","jo","differenceWith","defaultSorter","columnName","sortItem","operatorType","filter","operator","field","file","resolve","reject","reader","resultHandler","useKeys","useNewQueryKeys","v3LegacyAuthProviderCompatible","legacyGetPermission","getPermissions","queryResponse","Xo","Zo","legacyQueryResponse","queryOptions","legacyGetUserIdentity","getIdentity","Yo","Jo","useInvalidateAuthStore","queryClient","Pn","mutationOptions","invalidateAuthStore","routerType","go","push","open","close","legacyLogoutFromContext","logoutFromContext","mutation","es","variables","success","redirectTo","redirectPath","redirect","buildNotification","ts","v3LegacyAuthProviderCompatibleMutation","useLocation","search","legacyLoginFromContext","loginFromContext","to","xn","Cn","os","ss","redirectPathFromAuth","legacyRegisterFromContext","registerFromContext","as","is","v3LegacyAuthProviderCompatibleForgotPasswordFromContext","forgotPasswordFromContext","cs","ds","legacyUpdatePasswordFromContext","updatePasswordFromContext","hn","bn","ls","ms","checkAuth","check","fs","ys","legacyCheckErrorFromContext","onErrorFromContext","legacyLogout","logout","gs","shouldLogout","Ts","legacyIsProvided","isLoading","intervalProp","onIntervalProp","elapsedTime","setElapsedTime","gr","overtime","interval","onInterval","intervalFn","prevElapsedTime","resourceFromProp","successNotification","errorNotification","liveParams","overtimeOptions","dataProvider","checkError","handleNotification","getMeta","pickedDataProvider","preferredMeta","prefferedFilters","prefferedSorters","prefferedHasPagination","prefferedPagination","isServerPagination","combinedMeta","notificationValues","isEnabled","getList","En","queryKey","pageParam","signal","rawData","notificationConfig","err","Ln","getOne","Mn","Un","getMany","wn","In","import_isEqual","UndoableQueueContext","Bt","initialState","undoableQueueReducer","state","notificationItem","eo","isEqual","UndoableQueueContextProvider","notifications","notificationDispatch","notificationData","notification","select","ro","mutationModeContext","undoableTimeoutContext","publish","log","invalidateStore","values","onCancel","mutationModePropOrContext","undoableTimeoutPropOrContext","doMutation","cancelMutation","optimisticUpdateMap","resourceKeys","previousQueries","previous","record","_data","_error","invalidates","dataProviderNameFromProp","context","resourceSingular","previousData","queryData","_fields","_operation","_variables","Sn","kn","successNotificationFromProp","errorNotificationFromProp","An","oo","Qn","Bn","selectedDataProvider","val","response","resourcePlural","Vn","no","mutationFn","Nn","ao","Hn","getApiUrl","method","custom","Wn","zn","_n","jn","defaultDataProvider","DataContext","xs","DataContextProvider","dataProviders","io","Jn","paginationProperties","total","Yn","LiveContext","Cs","LiveContextProvider","liveProvider","useMemoized","ref","ta","ra","useDeepMemo","fn","dependencies","memoizedDependencies","sa","hs","ResourceContextProvider","providedResources","RouterPickerContext","bs","RouterPickerProvider","defaultBindings","RouterBindingsContext","co","RouterBindingsProvider","router","bindings","po","parse","da","pa","oldProps","force","pickedResource","resourceWithRoute","useParams","legacyParams","resourceKeyToCheck","legacyResource","legacyId","legacyAction","legacyResourceName","legacyIdentifier","pickedFromProps","mo","ma","la","invalidationFilters","invalidationOptions","dp","channel","types","enabled","liveModeFromProp","dataProviderNameFromProps","liveDataContext","Pr","liveModeFromContext","onLiveEventContextCallback","invalidate","subscription","callback","event","fa","fo","liveContext","ya","ga","NotificationContext","yo","NotificationContextProvider","Ra","Pa","fallbackNotification","Ls","TranslationContextProvider","i18nProvider","lang","To","Ro","import_export_to_csv_fix_source_map","resourceFromProps","maxItemCount","exportOptions","onError","setIsLoading","ba","filename","preparingData","va","import_debounce","actionFromProps","idFromProps","onMutationSuccess","onMutationError","queryMeta","mutationMeta","mutationModeProp","createMutationOptions","updateMutationOptions","autoSave","idFromRoute","actionFromRoute","inferredIdentifier","defaultId","setId","Po","isCreate","isEdit","isClone","Da","designatedRedirectAction","queryResult","isFetchingQuery","mutationResultCreate","mutateCreate","isLoadingCreate","mutationResultUpdate","mutateUpdate","isLoadingUpdate","autoSaveMutation","handleSubmitWithRedirect","onFinishCreate","onSuccess","_","responseId","onFinishAutoSaveMutation","onFinishAutoSave","La","debounce","allValues","idFromFunction","show","edit","list","create","Ea","resourceFromRoute","Ua","selectedResource","Kt","resourceSelect","getToPath","goFromRouter","handleResourceErrors","newTo","xo","useHistory","history","back","handleUrl","createUrl","resourceItem","createActionRoute","editUrl","encodedId","editActionRoute","cloneUrl","cloneActionRoute","showUrl","showActionRoute","listUrl","listActionRoute","showId","setShowId","ho","Ma","import_papaparse","import_chunk","paparseOptions","batchSize","onFinish","onProgress","processedAmount","setProcessedAmount","Ht","totalAmount","setTotalAmount","createMany","mutationResult","handleCleanup","handleFinish","createdValues","handleChange","Ia","valueFns","currentAmount","chunks","wa","chunk","chunkedFns","chunkedValues","currentBatchLength","defaultVisible","visible","setVisible","Cr","bo","defaultProvider","LegacyRouterContext","Us","RouterContext","LegacyRouterContextProvider","Prompt","Link","routerContextValues","ka","Ms","AccessControlContextProvider","can","sanitizeResource","icon","clone","restResource","_metaIcon","restMeta","_optionsIcon","restOptions","Va","_resource","paramsRest","sanitizedResource","Fa","Ba","canFromContext","ws","import_uniqBy","import_get","props","setSearch","ut","setOptions","selectedOptions","setSelectedOptions","sort","optionLabel","optionValue","debounceValue","defaultValueQueryOptionsFromProps","fetchSize","defaultValue","onSearchFromProp","defaultValues","defaultValueQueryOnSuccess","br","get","defaultValueQueryOptions","defaultValueQueryResult","defaultQueryOnSuccess","onSearch","combinedOptions","Na","uniqBy","Ka","defaultPermanentFilter","defaultPermanentSorter","initialCurrent","initialPageSize","initialSorter","defaultSetFilterBehavior","initialFilter","filtersFromProp","sortersFromProp","syncWithLocationProp","syncWithLocationContext","pathname","parsedParams","isServerSideFilteringEnabled","isServerSideSortingEnabled","isPaginationEnabled","prefferedCurrent","prefferedPageSize","parsedCurrent","parsedPageSize","parsedSorter","parsedFilters","preferredInitialFilters","preferredPermanentFilters","preferredInitialSorters","preferredPermanentSorters","prefferedFilterBehavior","defaultCurrent","defaultPageSize","Ze","$a","setSorters","setFilters","setCurrent","setPageSize","createLinkForSyncWithLocation","currentQueryParams","Ss","stringifyParams","queryParams","vr","Dr","setFiltersAsMerge","setFiltersAsReplace","setFiltersWithSetter","setter","prev","setFiltersFn","setterOrFilters","behavior","setSortWithUnion","newSorter","AuditLogContext","As","AuditLogContextProvider","update","logMutationOptions","renameMutationOptions","Lr","auditLogContext","ks","identityData","refetch","logPermissions","authorData","Qs","rename","author","za","Oa","metaFromProps","ja","breadcrumbs","addBreadcrumb","parentResource","grandParentName","listActionOfResource","hrefRaw","href","actionLabel","Xa","createResourceKey","currentParentResource","createTree","root","currentParent","currentTree","flatten","items","itemKey","getCleanPath","hideOnMissingParameter","legacyPath","getFriendlyName","cleanRoute","selectedKey","defaultOpenKeys","vo","prepareItem","composed","treeItems","treeMenuItems","prepare","preparedNodes","newItem","metaFromProp","_filters","_sorters","_current","_pageSize","additionalParams","errorMessage","setErrorMessage","Ye","username","setUsername","Re","password","setPassword","login","e","providers","registerLink","forgotPasswordLink","rememberMe","contentProps","wrapperProps","renderContent","formProps","title","LegacyLink","ActiveLink","email","setEmail","ne","remember","setRemember","renderLink","link","renderProviders","provider","content","RegisterPage","loginLink","ge","register","ForgotPasswordPage","we","forgotPassword","UpdatePasswordPage","updatePassword","newPassword","setNewPassword","Se","confirmPassword","setConfirmPassword","Lt","Ae","CARDS","re","isTablet","isMobile","getGridTemplateColumns","getHeaderFontSize","getSubHeaderFontSize","card","Card","description","isHover","setIsHover","REFINE_VERSION","useTelemetryData","auth","gt","routerContext","dataContext","notificationContext","accessControlContext","refineOptions","auditLog","live","i18n","accessControl","projectId","encode","payload","stringifiedPayload","throughImage","src","img","throughFetch","transport","Telemetry","sent","Fs","encoded","checkRouterPropMisuse","otherProps","useRouterMisuseWarning","warned","Vs","legacyRouterProvider","routerProvider","notificationProvider","accessControlProvider","auditLogProvider","Er","di","notificationProviderContextValues","de","RouterComponent","timeoutId","setTimeoutId","Eo","cancelNotification","newTimeoutId","LayoutFromProps","SiderFromProps","HeaderFromProps","TitleFromProps","FooterFromProps","OffLayoutAreaFromProps","Wt","UnsavedPrompt","warnWhenListener","useDeferredGo","setConfig","ke","redirectOnFail","appendCurrentPathToQuery","fallbackContent","loadingContent","activeAuthProvider","hasAuthProvider","isLegacyAuth","isLegacyRouter","deferredGo","legacyLocation","isFetching","isSuccess","isAuthenticatedStatus","authenticatedRedirect","isAuthenticated","appliedRedirect","toQuery","location","fi","actionFromProp","paramsFromProp","fallback","onUnauthorized","idFromPropsOrRoute","ct","CSSRules","Je","styleTag","rule","texts","status","Qe","Message","loading","idle","src_exports","__export","RefineButtonClassNames","RefineButtonTestIds","RefinePageHeaderClassNames","module","__toCommonJS","import_react","import_antd","import_sunflower_antd","import_core","useForm","__name","action","resource","onMutationSuccessProp","onMutationErrorProp","autoSave","submitOnEnter","warnWhenUnsavedChangesProp","redirect","successNotification","errorNotification","meta","metaData","queryMeta","mutationMeta","liveMode","liveParams","mutationMode","dataProviderName","onLiveEvent","invalidates","undoableTimeout","queryOptions","createMutationOptions","updateMutationOptions","idFromProps","overtimeOptions","optimisticUpdateMap","disableServerSideValidationProp","_a","_b","options","disableServerSideValidation","translate","formAnt","formSF","useFormSF","form","useFormCoreResult","useFormCore","error","_variables","_context","parsedErrors","fieldsValue","field","errors","key","fieldError","newError","formLoading","onFinish","queryResult","id","onFinishAutoSave","warnWhenUnsavedChangesRefine","setWarnWhen","warnWhenUnsavedChanges","React","onKeyUp","event","onValuesChange","changeValues","allValues","onFinishFromProps","values","saveButtonProps","import_react","import_core","import_core","useModal","__name","modalProps","show","close","visible","useCoreModal","e","_a","useModalForm","__name","syncWithLocation","defaultVisible","autoSubmitClose","autoResetForm","autoSave","invalidates","rest","_a","_b","initiallySynced","setInitiallySynced","React","invalidate","resource","actionFromParams","identifier","parsed","go","getUserFriendlyName","action","syncingId","syncWithLocationKey","useFormProps","useForm","form","formProps","id","setId","formLoading","onFinish","autoSaveProps","translate","warnWhen","setWarnWhen","show","close","modalProps","useModal","visible","sunflowerUseModal","_c","_d","openStatus","idFromParams","saveButtonPropsSF","handleClose","handleShow","showId","_visible","otherModalProps","newModalProps","values","import_react","import_core","useDrawerForm","__name","syncWithLocation","defaultVisible","autoSubmitClose","autoResetForm","autoSave","invalidates","rest","invalidate","initiallySynced","setInitiallySynced","React","visible","show","close","resource","actionFromParams","identifier","parsed","go","action","syncingId","syncWithLocationKey","useFormProps","useForm","form","formProps","formLoading","id","setId","onFinish","autoSaveProps","_a","_b","_c","_d","openStatus","idFromParams","translate","warnWhen","setWarnWhen","saveButtonProps","deleteButtonProps","handleClose","handleShow","showId","values","import_sunflower_antd","useStepsForm","__name","props","useFormProps","useForm","form","formProps","stepsPropsSunflower","useStepsFormSF","values","_a","import_react","import_antd","import_sunflower_antd","import_core","import_core","getDefaultSortOrder","__name","columnName","sorter","sort","getDefaultSortOrderCore","getDefaultFilter","filters","operatorType","getDefaultFilterCore","mapAntdSorterToCrudSorting","crudSorting","a","b","_a","_b","item","field","mapAntdFilterToCrudFilter","tableFilters","prevFilters","initialFilters","crudFilters","mapInitialFilter","acc","value","operator","i","p","import_core","import_react","PaginationLink","__name","to","element","LegacyLink","routerType","Link","React","e","useTable","__name","onSearch","initialCurrent","initialPageSize","hasPagination","pagination","initialSorter","permanentSorter","initialFilter","permanentFilter","defaultSetFilterBehavior","filtersFromProp","sortersFromProp","syncWithLocation","resource","successNotification","errorNotification","queryOptions","liveModeFromProp","onLiveEvent","liveParams","meta","metaData","dataProviderName","tableQueryResult","current","setCurrent","pageSize","setPageSize","filters","setFilters","sorters","setSorters","sorter","setSorter","createLinkForSyncWithLocation","pageCount","overtime","useTableCore","breakpoint","form","formSF","useFormSF","liveMode","hasPaginationString","isPaginationEnabled","preferredInitialFilters","data","isFetched","isLoading","onChange","paginationState","tableFilters","crudFilters","mapAntdFilterToCrudFilter","crudSorting","mapAntdSorterToCrudSorting","onFinish","value","searchFilters","antdPagination","page","type","element","_a","link","PaginationLink","elementChildren","useEditableTable","__name","autoSubmitClose","props","table","useTable","edit","useForm","editId","setId","saveButtonProps","cancelButtonProps","editButtonProps","id","isEditing","values","result","import_core","useSelect","__name","props","queryResult","defaultValueQueryResult","onSearch","options","useSelectCore","import_core","useCheckboxGroup","__name","resource","sort","sorters","filters","optionLabel","optionValue","queryOptions","fetchSize","pagination","liveMode","defaultValue","onLiveEvent","liveParams","meta","metaData","dataProviderName","queryResult","options","import_core","useRadioGroup","__name","resource","sort","sorters","filters","optionLabel","optionValue","queryOptions","fetchSize","pagination","liveMode","defaultValue","onLiveEvent","liveParams","meta","metaData","dataProviderName","queryResult","options","import_react","import_antd","import_core","useImport","__name","resourceFromProp","resourceName","mapData","item","paparseOptions","batchSize","onFinish","meta","metaData","dataProviderName","onProgressFromProp","t","resource","mutationResult","isLoading","handleChange","useImportCore","totalAmount","processedAmount","description","React","import_react","import_antd","import_core","useSimpleList","__name","resource","initialCurrent","initialPageSize","pagination","hasPagination","initialSorter","permanentSorter","initialFilter","permanentFilter","defaultSetFilterBehavior","filtersFromProp","sortersFromProp","onSearch","queryOptions","syncWithLocation","successNotification","errorNotification","liveModeFromProp","onLiveEvent","liveParams","meta","metaData","dataProviderName","sorters","sorter","filters","current","pageSize","pageCount","setFilters","setCurrent","setPageSize","setSorter","setSorters","createLinkForSyncWithLocation","queryResult","overtime","useTableCore","hasPaginationString","isPaginationEnabled","breakpoint","liveMode","form","data","isFetched","isLoading","onChange","page","onFinish","values","searchFilters","antdPagination","type","element","_a","link","PaginationLink","elementChildren","import_react","useFileUploadState","__name","isLoading","setIsloading","onChange","info","mapStatusToLoading","files","file","import_react","import_react","ThemedLayoutContext","React","ThemedLayoutContextProvider","__name","children","initialSiderCollapsed","siderCollapsed","setSiderCollapsed","mobileSiderOpen","setMobileSiderOpen","useSiderVisible","__name","mobileSiderOpen","siderCollapsed","setMobileSiderOpen","setSiderCollapsed","ThemedLayoutContext","import_react","useThemedLayoutContext","__name","mobileSiderOpen","siderCollapsed","setMobileSiderOpen","setSiderCollapsed","ThemedLayoutContext","import_antd","import_react","import_react","import_antd","import_icons","UndoableNotification","__name","message","cancelMutation","undoableTimeout","React","time","notificationProvider","key","message","description","type","cancelMutation","undoableTimeout","staticNotification","React","UndoableNotification","useNotificationProvider","__name","notificationFromContext","notification","import_react","import_antd","import_react","import_antd","import_icons","import_core","drawerButtonStyles","SubMenu","Sider","__name","TitleFromProps","render","meta","collapsed","setCollapsed","drawerOpen","setDrawerOpen","isExistAuthentication","routerType","NewLink","warnWhen","setWarnWhen","LegacyLink","Link","TitleFromContext","translate","menuItems","selectedKey","defaultOpenKeys","breakpoint","hasDashboard","authProvider","mutateLogout","isMobile","RenderToTitle","Title","renderTreeView","tree","item","icon","label","route","key","name","children","parentName","options","React","isSelected","isRoute","handleLogout","logout","dashboard","items","renderSider","renderMenu","renderDrawerSider","drawerButtonStyles","import_core","import_antd","import_react","Text","Header","__name","authProvider","user","React","AntdLayout","Layout","__name","children","Header","Sider","Title","Footer","OffLayoutArea","breakpoint","SiderToRender","HeaderToRender","isSmall","React","AntdLayout","import_react","import_core","Title","__name","collapsed","routerType","Link","LegacyLink","React","import_react","import_antd","import_react","import_antd","import_icons","import_core","drawerButtonStyles","SubMenu","useToken","ThemedSider","__name","TitleFromProps","render","meta","token","collapsed","setCollapsed","drawerOpen","setDrawerOpen","isExistAuthentication","routerType","NewLink","warnWhen","setWarnWhen","LegacyLink","Link","TitleFromContext","translate","menuItems","selectedKey","defaultOpenKeys","breakpoint","hasDashboard","authProvider","mutateLogout","isMobile","RenderToTitle","ThemedTitle","renderTreeView","tree","item","icon","label","route","key","name","children","parentName","options","React","isSelected","isRoute","handleLogout","logout","dashboard","items","renderSider","renderMenu","renderDrawerSider","drawerButtonStyles","import_react","import_antd","import_core","Text","useToken","ThemedHeader","__name","token","authProvider","user","React","AntdLayout","ThemedLayout","__name","children","Header","Sider","Title","Footer","OffLayoutArea","breakpoint","SiderToRender","ThemedSider","HeaderToRender","ThemedHeader","isSmall","React","AntdLayout","import_react","import_core","import_antd","useToken","defaultText","defaultIcon","React","ThemedTitle","__name","collapsed","icon","text","wrapperStyles","token","routerType","Link","LegacyLink","import_react","import_antd","import_react","import_antd","import_icons","import_core","drawerButtonStyles","SubMenu","useToken","ThemedSiderV2","__name","TitleFromProps","render","meta","fixed","activeItemDisabled","token","siderCollapsed","setSiderCollapsed","mobileSiderOpen","setMobileSiderOpen","useThemedLayoutContext","isExistAuthentication","routerType","NewLink","warnWhen","setWarnWhen","LegacyLink","Link","TitleFromContext","translate","menuItems","selectedKey","defaultOpenKeys","breakpoint","hasDashboard","authProvider","mutateLogout","isMobile","RenderToTitle","ThemedTitleV2","renderTreeView","tree","item","icon","label","route","key","name","children","parentName","options","React","isSelected","isRoute","linkStyle","handleLogout","logout","dashboard","items","renderSider","renderMenu","renderDrawerSider","drawerButtonStyles","siderStyles","collapsed","type","import_react","import_antd","import_core","Text","useToken","ThemedHeaderV2","__name","isSticky","sticky","token","authProvider","user","headerStyles","React","AntdLayout","ThemedLayoutV2","__name","children","Header","Sider","Title","Footer","OffLayoutArea","initialSiderCollapsed","breakpoint","SiderToRender","ThemedSiderV2","HeaderToRender","ThemedHeaderV2","isSmall","hasSider","React","ThemedLayoutContextProvider","AntdLayout","import_react","import_core","import_antd","useToken","defaultText","defaultIcon","React","ThemedTitleV2","__name","collapsed","icon","text","wrapperStyles","token","routerType","Link","LegacyLink","import_react","import_antd","import_icons","import_core","import_ui_types","CreateButton","__name","resourceNameFromProps","propResourceNameOrRouteName","hideText","accessControl","meta","children","onClick","rest","accessControlContext","accessControlEnabled","hideIfUnauthorized","translate","routerType","Link","LegacyLink","ActiveLink","generateCreateUrl","resource","data","createButtonDisabledTitle","createUrl","React","e","import_react","import_antd","import_icons","import_core","import_ui_types","EditButton","__name","resourceNameFromProps","propResourceNameOrRouteName","recordItemId","hideText","accessControl","meta","children","onClick","rest","accessControlContext","accessControlEnabled","hideIfUnauthorized","translate","routerType","Link","LegacyLink","ActiveLink","generateEditUrl","id","resource","data","createButtonDisabledTitle","editUrl","React","e","import_react","import_antd","import_icons","import_core","import_ui_types","DeleteButton","__name","resourceNameFromProps","propResourceNameOrRouteName","recordItemId","onSuccess","mutationModeProp","children","successNotification","errorNotification","hideText","accessControl","metaData","meta","dataProviderName","confirmTitle","confirmOkText","confirmCancelText","invalidates","rest","accessControlContext","accessControlEnabled","hideIfUnauthorized","translate","id","resource","identifier","mutationModeContext","mutationMode","mutate","isLoading","variables","data","disabledTitle","setWarnWhen","React","value","import_react","import_antd","import_icons","import_core","import_ui_types","import_react_query","RefreshButton","__name","resourceNameFromProps","propResourceNameOrRouteName","recordItemId","hideText","dataProviderName","children","onClick","_meta","_metaData","rest","translate","queryClient","invalidates","resources","identifier","id","isInvalidating","handleInvalidate","React","e","import_react","import_antd","import_icons","import_core","import_ui_types","ShowButton","__name","resourceNameFromProps","propResourceNameOrRouteName","recordItemId","hideText","accessControl","meta","children","onClick","rest","accessControlContext","accessControlEnabled","hideIfUnauthorized","generateShowUrl","routerType","Link","LegacyLink","ActiveLink","translate","id","resource","data","createButtonDisabledTitle","showUrl","React","e","import_react","import_antd","import_icons","import_core","import_ui_types","ListButton","__name","resourceNameFromProps","propResourceNameOrRouteName","hideText","accessControl","meta","children","onClick","rest","_a","accessControlContext","accessControlEnabled","hideIfUnauthorized","generateListUrl","routerType","Link","LegacyLink","getUserFriendlyName","ActiveLink","translate","resource","identifier","data","createButtonDisabledTitle","listUrl","React","e","import_react","import_antd","import_icons","import_core","import_ui_types","ExportButton","__name","hideText","children","rest","translate","React","import_react","import_antd","import_icons","import_core","import_ui_types","SaveButton","__name","hideText","children","rest","translate","React","import_react","import_antd","import_icons","import_core","import_ui_types","CloneButton","__name","propResourceNameOrRouteName","resourceNameFromProps","recordItemId","hideText","accessControl","meta","children","onClick","rest","accessControlContext","accessControlEnabled","hideIfUnauthorized","generateCloneUrl","routerType","Link","LegacyLink","ActiveLink","translate","id","resource","data","createButtonDisabledTitle","cloneUrl","React","e","import_react","import_antd","import_icons","import_core","import_ui_types","ImportButton","__name","uploadProps","buttonProps","hideText","children","translate","React","import_react","import_antd","import_core","List","__name","canCreate","title","children","createButtonPropsFromProps","resourceFromProps","wrapperProps","contentProps","headerProps","breadcrumbFromProps","headerButtonProps","headerButtons","_a","_b","translate","globalBreadcrumb","routerType","getUserFriendlyName","resource","identifier","isCreateButtonVisible","breadcrumb","createButtonProps","defaultExtra","React","CreateButton","PageHeader","Breadcrumb","import_react","import_antd","import_core","Create","__name","title","saveButtonPropsFromProps","children","resourceFromProps","isLoading","breadcrumbFromProps","wrapperProps","headerProps","contentProps","headerButtonProps","headerButtons","footerButtonProps","footerButtons","goBackFromProps","_a","_b","translate","globalBreadcrumb","routerType","back","goBack","getUserFriendlyName","resource","action","identifier","breadcrumb","saveButtonProps","defaultFooterButtons","React","SaveButton","PageHeader","Breadcrumb","import_react","import_antd","import_core","Edit","__name","title","saveButtonPropsFromProps","mutationModeProp","recordItemId","children","deleteButtonPropsFromProps","canDelete","resourceFromProps","isLoading","dataProviderName","breadcrumbFromProps","wrapperProps","headerProps","contentProps","headerButtonProps","headerButtons","footerButtonProps","footerButtons","goBackFromProps","autoSaveProps","_a","_b","_c","translate","globalBreadcrumb","mutationModeContext","mutationMode","routerType","back","go","goBack","legacyGoList","getUserFriendlyName","resource","action","idFromParams","identifier","goListPath","id","breadcrumb","hasList","isDeleteButtonVisible","listButtonProps","refreshButtonProps","deleteButtonProps","saveButtonProps","defaultHeaderButtons","React","AutoSaveIndicator","ListButton","RefreshButton","defaultFooterButtons","DeleteButton","SaveButton","PageHeader","Breadcrumb","import_react","import_antd","import_core","Show","__name","title","canEdit","canDelete","isLoading","children","resourceFromProps","recordItemId","dataProviderName","breadcrumbFromProps","contentProps","headerProps","wrapperProps","headerButtons","footerButtons","footerButtonProps","headerButtonProps","goBackFromProps","_a","_b","_c","translate","globalBreadcrumb","routerType","back","go","goBack","legacyGoList","getUserFriendlyName","resource","action","idFromParams","identifier","goListPath","id","breadcrumb","hasList","isDeleteButtonVisible","isEditButtonVisible","listButtonProps","editButtonProps","deleteButtonProps","refreshButtonProps","defaultHeaderButtons","React","ListButton","EditButton","DeleteButton","RefreshButton","PageHeader","Breadcrumb","import_react","import_antd","Text","TextField","__name","value","rest","React","import_react","import_antd","TagField","__name","value","rest","React","import_react","import_antd","Link","EmailField","__name","value","rest","React","import_react","import_antd","ImageField","__name","value","imageTitle","rest","React","import_react","import_antd","import_icons","BooleanField","__name","value","valueLabelTrue","valueLabelFalse","trueIcon","React","falseIcon","rest","import_react","import_dayjs","import_antd","import_localizedFormat","DateField","__name","value","locales","dateFormat","rest","dayjs","LocalizedFormat","defaultLocale","Text","React","import_react","FileField","__name","title","src","rest","React","UrlField","import_react","import_antd","Link","UrlField","__name","children","value","rest","React","import_react","import_antd","Text","toLocaleStringSupportsOptions","__name","NumberField","value","locale","options","rest","number","React","import_react","import_react_markdown","import_remark_gfm","MarkdownField","__name","value","React","ReactMarkdown","gfm","import_react","import_antd","import_dayjs","import_icons","import_core","FilterDropdown","__name","props","setSelectedKeys","confirm","clearFilters","mapValue","selectedKeys","children","value","setValue","translate","clearFilter","onFilter","_mappedValue","mappedValue","keys","dayjs","onChange","e","changeEvent","target","childrenWithProps","React","child","import_react","import_core","import_antd","import_icons","Text","ErrorComponent","__name","errorMessage","setErrorMessage","translate","push","go","routerType","resource","action","React","import_react","import_core","import_antd","layoutStyles","containerStyles","titleStyles","imageContainer","Text","Title","LoginPage","__name","form","translate","authProvider","login","isLoading","CardTitle","React","titleStyles","layoutStyles","containerStyles","imageContainer","values","React","import_antd","import_icons","styles","Title","ReadyPage","__name","import_react","import_core","WelcomePage","__name","React","WelcomePageFromCore","import_react","import_react","import_core","import_antd","layoutStyles","containerStyles","headStyles","bodyStyles","titleStyles","Text","Title","useToken","LoginPage","__name","providers","registerLink","forgotPasswordLink","rememberMe","contentProps","wrapperProps","renderContent","formProps","title","token","form","translate","routerType","Link","LegacyLink","ActiveLink","authProvider","login","isLoading","PageTitle","React","ThemedTitle","CardTitle","titleStyles","renderProviders","provider","CardContent","headStyles","bodyStyles","containerStyles","values","layoutStyles","import_react","import_core","import_antd","Text","Title","useToken","RegisterPage","__name","providers","loginLink","wrapperProps","contentProps","renderContent","formProps","title","token","form","translate","routerType","Link","LegacyLink","ActiveLink","authProvider","register","isLoading","PageTitle","React","ThemedTitle","CardTitle","titleStyles","renderProviders","provider","CardContent","headStyles","bodyStyles","containerStyles","values","layoutStyles","import_react","import_core","import_antd","Text","Title","useToken","ForgotPasswordPage","__name","loginLink","wrapperProps","contentProps","renderContent","formProps","title","token","form","translate","routerType","Link","LegacyLink","ActiveLink","forgotPassword","isLoading","PageTitle","React","ThemedTitle","CardTitle","titleStyles","CardContent","headStyles","bodyStyles","containerStyles","values","layoutStyles","import_react","import_core","import_antd","Title","useToken","UpdatePasswordPage","__name","wrapperProps","contentProps","renderContent","formProps","title","token","form","translate","authProvider","updatePassword","isLoading","PageTitle","React","ThemedTitle","CardTitle","titleStyles","CardContent","headStyles","bodyStyles","containerStyles","values","getFieldValue","_","value","layoutStyles","AuthPage","__name","props","type","React","RegisterPage","ForgotPasswordPage","UpdatePasswordPage","LoginPage","import_react","import_core","import_antd","import_icons","Breadcrumb","__name","breadcrumbProps","showHome","hideIcons","meta","routerType","breadcrumbs","Link","LegacyLink","hasDashboard","resources","rootRouteResource","ActiveLink","breadCrumbItems","label","icon","href","React","AntdBreadcrumb","_a","_b","import_react","import_pro_layout","import_antd","import_icons","import_ui_types","PageHeader","__name","children","props","backIcon","React","title","subtitle","AntdPageHeader","import_react","import_core","import_antd","import_icons","AutoSaveIndicator","__name","status","success","React","Message","error","loading","idle","AutoSaveIndicatorCore","key","defaultMessage","icon","translate","useToken","token","getValueFromEvent","__name","event","fileList","RefineThemes"]}